%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &1
MonoBehaviour:
  m_ObjectHideFlags: 53
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 1841772381, guid: c26a3580856bebf4f9f37e7b8a655bd0, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  openAiAssistantHistory: []
  openAiCompletionsHistory: []
  ollamaHistory: []
  deepseekHistory:
  - Id: 5716caec-0365-427d-b0eb-0b55fd129044
    Name: '"Improving Upgrade Installation UI in Backpack"'
    ProjectContext: "Class: GameEventWiring : MonoBehaviour\r\nNamespace: HairvestMoon.Core\r\nFields:\r\n-
      farmGrowthSystem : FarmGrowthSystem\r\n- cropVisualSystem : CropVisualSystem\r\n-
      waterDecaySystem : WaterDecaySystem\r\n- waterVisualSystem : WaterVisualSystem\r\n-
      toolSelector : ToolSelector\r\n- gameManager : GameManager\r\n- inputController
      : InputController\r\n- gameTimeManager : GameTimeManager\r\n- gameStateManager
      : GameStateManager\r\n- playerController : Player_Controller\r\n- playerStateController
      : PlayerStateController\r\n- debugUIOverlay : DebugUIOverlay\r\nMethods:\r\n-
      InitializeEvents() : void\r\n\r\nClass: GameInitializer : MonoBehaviour\r\nFields:\r\n-
      gameManager : GameManager\r\n- gameStateManager : GameStateManager\r\n- gameTimeManager
      : GameTimeManager\r\n- inputController : InputController\r\n- playerStateController
      : PlayerStateController\r\n- playerController : Player_Controller\r\n- playerFacingController
      : PlayerFacingController\r\n- tileTargetingSystem : TileTargetingSystem\r\n-
      seedDatabase : SeedDatabase\r\n- inventorySystem : InventorySystem\r\n- backpackInventorySystem
      : BackpackInventorySystem\r\n- backpackEquipSystem : BackpackEquipSystem\r\n-
      backpackEquipInstallManager : BackpackEquipInstallManager\r\n- backpackUpgradeManager
      : BackpackUpgradeManager\r\n- backpackInventoryUI : BackpackInventoryUI\r\n-
      seedSelectionUI : SeedSelectionUI\r\n- wateringSelectionUI : WateringSelectionUI\r\n-
      hoeSelectionUI : HoeSelectionUI\r\n- harvestSelectionUI : HarvestSelectionUI\r\n-
      selectionTooltipUI : SelectionTooltipUI\r\n- inventoryOverviewUI : InventoryOverviewUI\r\n-
      backpackCapacityBarUI : BackpackCapacityBarUI\r\n- mainMenuUIManager : MainMenuUIManager\r\n-
      toolSystem : ToolSystem\r\n- toolSelector : ToolSelector\r\n- farmToolHandler
      : FarmToolHandler\r\n- debugUIOverlay : DebugUIOverlay\r\n- gameEventWiring
      : GameEventWiring\r\n\r\nClass: GameManager : MonoBehaviour\r\nNamespace: HairvestMoon.Core\r\nProperties:\r\n-
      static Instance : GameManager\r\nMethods:\r\n- InitializeSingleton() : void\r\n-
      HandleDusk() : void\r\n- HandleDawn() : void\r\n- HandleMenuToggle() : void\r\n\r\nClass:
      GameStateManager : MonoBehaviour\r\nNamespace: HairvestMoon.Core\r\nDescription:
      Broadcasts changes via OnGameStateChanged Used to lock input, pause systems,
      manage cutscenes or tasks \r\nProperties:\r\n- static Instance : GameStateManager\r\n-
      CurrentState : GameState\r\n- IsInputLocked : bool\r\nMethods:\r\n- InitializeSingleton()
      : void\r\n- SetState(GameState newState) : void\r\n- IsFreeRoam() : bool\r\n\r\nClass:
      GameTimeManager : MonoBehaviour\r\nNamespace: HairvestMoon.Core\r\nProperties:\r\n-
      static Instance : GameTimeManager\r\n- CurrentHour : int\r\n- CurrentMinute
      : int\r\n- Day : int\r\n- IsTimeFrozen : bool\r\n- TimeScale : float\r\nMethods:\r\n-
      InitializeSingleton() : void\r\n- AdvanceDay() : void\r\n- SetTimeScale(float
      scale) : void\r\n- FastForwardToHour(int targetHour) : void\r\n- GetCurrentHourProgress()
      : float\r\n- GetFormattedTime() : string\r\n- FreezeTime() : void\r\n- ResumeTime()
      : void\r\n- IsNight() : bool\r\n- IsMorning() : bool\r\n- IsEvening() : bool\r\n\r\nClass:
      InputController : MonoBehaviour\r\nNamespace: HairvestMoon.Core\r\nProperties:\r\n-
      static Instance : InputController\r\n- MoveInput : Vector2\r\n- LookInput :
      Vector2\r\n- LookInputThisFrame : bool -  True if the look input was actively
      moved this frame.  \r\n- CurrentMode : ControlMode\r\nMethods:\r\n- InitializeSingleton()
      : void\r\n- InitInput() : void\r\n- HandleInputLock(bool locked) : void\r\n-
      OnMove(CallbackContext context) : void\r\n- OnLook(CallbackContext context)
      : void\r\n- OnGamepadLook(CallbackContext context) : void\r\n- OnAttack(CallbackContext
      context) : void\r\n- OnInteract(CallbackContext context) : void\r\n- OnCrouch(CallbackContext
      context) : void\r\n- OnJump(CallbackContext context) : void\r\n- OnNext(CallbackContext
      context) : void\r\n- OnPrevious(CallbackContext context) : void\r\n- OnSprint(CallbackContext
      context) : void\r\n- OnPause(CallbackContext context) : void\r\n\r\nClass:
      CropData : ScriptableObject\r\nNamespace: HairvestMoon\r\nFields:\r\n- cropName
      : string\r\n- cropIcon : Sprite\r\n- growthStages : Sprite[]\r\n- growthDurationMinutes
      : int\r\n- harvestYield : int\r\n- harvestedItem : ItemData\r\nMethods:\r\n-
      GetHarvestItem() : ItemData\r\n\r\nClass: ItemData : ScriptableObject\r\nNamespace:
      HairvestMoon\r\nFields:\r\n- itemID : string\r\n- itemName : string\r\n- description
      : string\r\n- itemIcon : Sprite\r\n- itemType : ItemType\r\n- toolType : ToolType\r\n-
      sellPrice : int\r\n\r\nClass: SeedData : ScriptableObject\r\nNamespace: HairvestMoon\r\nFields:\r\n-
      seedItem : ItemData\r\n- cropData : CropData\r\n\r\nClass: CropVisualSystem
      : MonoBehaviour\r\nNamespace: HairvestMoon.Farming\r\nDescription: Handles
      rendering crop sprites based on growth stages after growth tick occurs. \r\nMethods:\r\n-
      RefreshCropVisuals(int hour, int minute) : void\r\n\r\nClass: FarmGrowthSystem
      : MonoBehaviour\r\nNamespace: HairvestMoon.Farming\r\nDescription: Handles
      daily crop growth only. Subscribes to GameTimeManager.OnDawn to tick crops
      once per day. \r\nMethods:\r\n- HandleMinuteGrowthTick(int hour, int minute)
      : void\r\n\r\nClass: FarmTileDataManager : MonoBehaviour\r\nNamespace: HairvestMoon.Farming\r\nDescription:
      Stores logical gameplay state for each farm tile. Tracks tilling, watering,
      and crop growth. Interfaces with tilemaps and farming tools to apply gameplay
      effects. \r\nFields:\r\n- static HoursPerWatering : float\r\nProperties:\r\n-
      static Instance : FarmTileDataManager\r\n- CropTilemap : Tilemap\r\n- AllTileData
      : Dictionary`2\r\nMethods:\r\n- IsTileTillable(Vector3Int pos) : bool\r\n-
      GetTileData(Vector3Int pos) : FarmTileData\r\n- SetTilled(Vector3Int pos, bool
      value) : void\r\n- SetWatered(Vector3Int pos, bool value) : void\r\n- UpdateWaterVisual(Vector3Int
      pos, FarmTileData data) : void\r\n- IsTilled(Vector3Int pos) : bool\r\n- IsWatered(Vector3Int
      pos) : bool\r\n\r\nClass: FarmTileData\r\nNamespace: HairvestMoon.Farming\r\nFields:\r\n-
      isTilled : bool\r\n- isWatered : bool\r\n- waterMinutesRemaining : float\r\n-
      static MinutesPerWatering : float\r\n- plantedCrop : CropData\r\n- wateredMinutesAccumulated
      : float\r\nMethods:\r\n- GetGrowthProgressPercent() : float\r\n- HasRipeCrop()
      : bool\r\n\r\nClass: FarmToolHandler : MonoBehaviour\r\nNamespace: HairvestMoon.Farming\r\nMethods:\r\n-
      Initialize() : void\r\n- SetSelectedSeed(SeedData newSeed) : void\r\n\r\nClass:
      SeedDatabase : MonoBehaviour\r\nNamespace: HairvestMoon.Farming\r\nProperties:\r\n-
      static Instance : SeedDatabase\r\n- AllSeeds : List`1\r\nMethods:\r\n- InitializeSingleton()
      : void\r\n- GetSeedDataByItem(ItemData item) : SeedData\r\n\r\nClass: WaterDecaySystem
      : MonoBehaviour\r\nNamespace: HairvestMoon.Farming\r\nDescription: Handles
      hourly water decay. Subscribes to GameTimeManager.OnNewHour. \r\nMethods:\r\n-
      HandleWaterDecayPerMinute(int hour, int minute) : void\r\n\r\nClass: WaterVisualSystem
      : MonoBehaviour\r\nMethods:\r\n- RefreshSliders(int hour, int minute) : void\r\n-
      HandleWateredTile(Vector3Int pos, FarmTileData data) : void\r\n\r\nClass: TileTargetingSystem
      : MonoBehaviour\r\nNamespace: HairvestMoon.Interaction\r\nFields:\r\n- Grid
      : Grid\r\n- selectionHighlightTilemap : Tilemap\r\n- highlightTile : Tile\r\n-
      highlightRange : int\r\n- coneSize : Vector2Int\r\n- footPositionYOffset :
      float\r\n- mouseTargetMaxDistance : float\r\n- drawDebugGizmos : bool\r\n-
      gizmoColor : Color\r\nProperties:\r\n- static Instance : TileTargetingSystem\r\n-
      CurrentTargetedTile : Nullable`1\r\nMethods:\r\n- InitializeSingleton() : void\r\n\r\nClass:
      BackpackEquipInstallManager : MonoBehaviour\r\nNamespace: HairvestMoon.Inventory\r\nProperties:\r\n-
      static Instance : BackpackEquipInstallManager\r\nMethods:\r\n- InitializeSingleton()
      : void\r\n- TryEquip(ItemData item) : bool\r\n\r\nClass: BackpackEquipSystem
      : MonoBehaviour\r\nNamespace: HairvestMoon.Inventory\r\nFields:\r\n- hoeTool
      : ItemData\r\n- wateringTool : ItemData\r\n- seedTool : ItemData\r\n- harvestTool
      : ItemData\r\n- hoeUpgrade : ItemData\r\n- wateringUpgrade : ItemData\r\n-
      seedUpgrade : ItemData\r\n- harvestUpgrade : ItemData\r\nProperties:\r\n- static
      Instance : BackpackEquipSystem\r\nMethods:\r\n- InitializeSingleton() : void\r\n-
      EquipTool(ItemData toolItem) : void\r\n- EquipUpgrade(ItemData upgradeItem)
      : void\r\n\r\nClass: BackpackInventorySystem : MonoBehaviour\r\nNamespace:
      HairvestMoon.Inventory\r\nFields:\r\n- backpack : List`1 - Check slot limit
      for non-stackables \r\n- maxBackpackSlots : int - Check slot limit for non-stackables
      \r\nProperties:\r\n- static Instance : BackpackInventorySystem\r\nMethods:\r\n-
      InitializeSingleton() : void\r\n- CanAddItem(ItemData newItem, int amount)
      : bool\r\n- AddItem(ItemData newItem, int amount) : bool\r\n- RemoveItem(ItemData
      item, int amount) : bool\r\n- GetQuantity(ItemData queryItem) : int\r\n- ForceRefresh()
      : void\r\n- GetAllSlots() : List`1\r\n\r\nClass: BackpackUpgradeManager : MonoBehaviour\r\nNamespace:
      HairvestMoon.Inventory\r\nProperties:\r\n- static Instance : BackpackUpgradeManager\r\n-
      SlotsPerUpgrade : int\r\n- BaseSlots : int\r\nMethods:\r\n- InitializeSingleton()
      : void\r\n- Initialize() : void\r\n- UpgradeBackpack() : void\r\n- GetUpgradeLevel()
      : int\r\n- GetMaxUpgrades() : int\r\n- GetCurrentSlots() : int\r\n\r\nClass:
      InventorySystem : MonoBehaviour\r\nNamespace: HairvestMoon.Inventory\r\nDescription:
      Manages the player's inventory, including adding items, tracking discovered
      items, and querying item quantities. \r\nFields:\r\n- maxSlots : int\r\n- inventory
      : List`1\r\n- discoveredItems : HashSet`1\r\nProperties:\r\n- static Instance
      : InventorySystem\r\nMethods:\r\n- InitializeSingleton() : void\r\n- MarkDiscovered(ItemData
      item) : void\r\n- AddItem(ItemData newItem, int amount) : bool\r\n- GetQuantity(ItemData
      queryItem) : int\r\n- RemoveItem(ItemData item, int amount) : bool\r\n- GetOwnedItemsByType(ItemType
      type) : List`1\r\n- GetDiscoveredItemsByType(ItemType type) : List`1\r\n- GetAllSlots()
      : List`1\r\n- ForceRefresh() : void\r\n- DebugPrintFromInspector() : void\r\n-
      DebugAddTestSeeds() : void\r\n\r\nClass: WorldItemPickup : MonoBehaviour\r\nNamespace:
      HairvestMoon.Inventory\r\nFields:\r\n- itemData : ItemData\r\n- quantity :
      int\r\n\r\nClass: Player_Controller : MonoBehaviour\r\nNamespace: HairvestMoon.Player\r\nProperties:\r\n-
      static Position : Vector3\r\nMethods:\r\n- InitializeSingleton() : void\r\n-
      HandleGameStateChanged(GameState newState) : void\r\n\r\nClass: PlayerFacingController
      : MonoBehaviour\r\nNamespace: HairvestMoon.Player\r\nDescription: Determines
      the player's current facing direction based on movement or look input. Prioritizes
      movement, and defers to look input only after intentional use. \r\nProperties:\r\n-
      static Instance : PlayerFacingController\r\n- CurrentFacing : FacingDirection\r\nMethods:\r\n-
      InitializeSingleton() : void\r\n- UpdateFacing(Vector2 moveInput, Vector2 lookInput,
      ControlMode mode) : void - Updates the facing direction each frame based on
      input and control mode. \r\n- GetFacingOffset() : Vector3Int\r\n\r\nClass:
      PlayerFormData\r\nNamespace: HairvestMoon.Player\r\nFields:\r\n- FormType :
      PlayerForm\r\n- VisualRoot : GameObject\r\n- Animator : Animator\r\n- Renderer
      : SpriteRenderer\r\n- MoveSpeed : float\r\n\r\nClass: PlayerStateController
      : MonoBehaviour\r\nNamespace: HairvestMoon.Player\r\nProperties:\r\n- static
      Instance : PlayerStateController\r\n- CurrentForm : PlayerForm\r\n- CurrentAnimator
      : Animator\r\n- CurrentSpriteRenderer : SpriteRenderer\r\n- MoveSpeed : float\r\nMethods:\r\n-
      InitializeSingleton() : void\r\n- InitializePlayerState() : void\r\n- EnterWerewolfForm()
      : void\r\n- ExitWerewolfForm() : void\r\n- IsWerewolf() : bool\r\n\r\nClass:
      ToolSelector : MonoBehaviour\r\nNamespace: HairvestMoon.Tool\r\nDescription:
      Handles tool selection via keyboard hotkeys and input actions for next/previous.
      Updates ToolSystem and notifies UI. \r\nProperties:\r\n- static Instance :
      ToolSelector\r\nMethods:\r\n- InitializeSingleton() : void\r\n- HandleNext()
      : void\r\n- HandlePrevious() : void\r\n- SelectToolExternally(ToolType tool)
      : void\r\n- InitialSetTool() : void\r\n\r\nClass: ToolSystem : MonoBehaviour\r\nNamespace:
      HairvestMoon.Tool\r\nDescription: Core tool system management: handles current
      tool state and tool capacity. \r\nFields:\r\n- waterCanCapacity : float\r\n-
      waterPerUse : float\r\nProperties:\r\n- static Instance : ToolSystem\r\n- CurrentTool
      : ToolType\r\nMethods:\r\n- InitializeSingleton() : void\r\n- SetTool(ToolType
      tool) : void\r\n- ConsumeWaterFromCan() : void\r\n- RefillWaterCan(float refillAmount)
      : void\r\n- RefillWaterToFull() : void\r\n\r\nClass: BackpackCapacityBarUI
      : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nMethods:\r\n- InitializeUI()
      : void\r\n\r\nClass: BackpackInventoryUI : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nMethods:\r\n-
      InitializeUI() : void\r\n- RefreshUI() : void\r\n\r\nClass: BackpackSlotUI
      : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nMethods:\r\n- Initialize(ItemData
      itemData, int quantity, Action`1 clickCallback) : void\r\n- SetSelected(bool
      isSelected) : void\r\n\r\nClass: EquipSlotUI : MonoBehaviour\r\nNamespace:
      HairvestMoon.UI\r\nMethods:\r\n- SetSlot(ItemData item) : void\r\n\r\nClass:
      HarvestSelectionUI : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nProperties:\r\n-
      static Instance : HarvestSelectionUI\r\nMethods:\r\n- InitializeSingleton()
      : void\r\n- InitializeUI() : void\r\n- OpenHarvestMenu() : void\r\n- CloseHarvestMenu()
      : void\r\n- GetCurrentSelectedItem() : ItemData\r\n\r\nClass: HoeSelectionUI
      : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nProperties:\r\n- static Instance
      : HoeSelectionUI\r\nMethods:\r\n- InitializeSingleton() : void\r\n- InitializeUI()
      : void\r\n- OpenHoeMenu() : void\r\n- CloseHoeMenu() : void\r\n- GetCurrentSelectedItem()
      : ItemData\r\n\r\nClass: InventoryOverviewUI : MonoBehaviour\r\nNamespace:
      HairvestMoon.UI\r\nMethods:\r\n- InitializeUI() : void\r\n- RefreshUI() : void\r\n\r\nClass:
      InventorySlotUI : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nMethods:\r\n-
      Initialize(ItemData itemData) : void\r\n- UpdateDisplay() : void\r\n\r\nClass:
      ItemDescriptionUI : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nMethods:\r\n-
      SetItem(ItemData item) : void\r\n- Clear() : void\r\n\r\nClass: MainMenuUIManager
      : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nProperties:\r\n- static Instance
      : MainMenuUIManager\r\nMethods:\r\n- InitializeSingleton() : void\r\n- InitializeUI()
      : void\r\n- OpenMenu() : void\r\n- CloseMenu() : void\r\n- OpenTab(int index)
      : void\r\n- NextTab() : void\r\n- PreviousTab() : void\r\n\r\nClass: SeedSelectionUI
      : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nProperties:\r\n- static Instance
      : SeedSelectionUI\r\nMethods:\r\n- InitializeSingleton() : void\r\n- InitializeUI()
      : void\r\n- OpenSeedMenu() : void\r\n- CloseSeedMenu() : void\r\n\r\nClass:
      SelectionTooltipUI : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nProperties:\r\n-
      static Instance : SelectionTooltipUI\r\nMethods:\r\n- InitializeSingleton()
      : void\r\n- InitializeUI() : void\r\n- ShowTooltip(ItemData item) : void\r\n-
      HideTooltip() : void\r\n\r\nClass: ToolHotbarUI : MonoBehaviour\r\nNamespace:
      HairvestMoon.UI\r\nDescription: Manages the visual UI of tool slots and highlights
      the selected one. \r\nMethods:\r\n- HighlightTool(ToolType selected) : void\r\n\r\nClass:
      ToolSlot : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nDescription: A UI
      button representing a tool in the hotbar. \r\nProperties:\r\n- Tool : ToolType\r\nMethods:\r\n-
      SetHighlighted(bool isHighlighted) : void\r\n\r\nClass: UpgradeSelectionSlot
      : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nProperties:\r\n- Item : ItemData\r\nMethods:\r\n-
      Initialize(ItemData item, Action`1 clickCallback) : void\r\n- SetSelected(bool
      selected) : void\r\n\r\nClass: WaterCanUI : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nDescription:
      Displays water can capacity using both text and slider for real-time feedback.
      \r\n\r\nClass: WateringSelectionUI : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nProperties:\r\n-
      static Instance : WateringSelectionUI\r\nMethods:\r\n- InitializeSingleton()
      : void\r\n- InitializeUI() : void\r\n- OpenWateringMenu() : void\r\n- CloseWateringMenu()
      : void\r\n- GetCurrentSelectedItem() : ItemData\r\n\r\nClass: BoolEvent : ScriptableObject\r\nNamespace:
      HairvestMoon.Utility\r\nMethods:\r\n- Raise(bool value) : void\r\n- Register(Action`1
      callback) : void\r\n- Unregister(Action`1 callback) : void\r\n\r\nClass: DebugUIOverlay
      : MonoBehaviour\r\nNamespace: HairvestMoon.Utility\r\nProperties:\r\n- static
      Instance : DebugUIOverlay\r\nMethods:\r\n- InitializeSingleton() : void\r\n-
      UpdateTimeText(int hour, int minute) : void\r\n- UpdateStateText(GameState
      state) : void\r\n- ShowLastAction(string text) : void\r\n\r\nClass: DeveloperTestPanel
      : MonoBehaviour\r\nNamespace: HairvestMoon.Utility\r\n\r\nClass: CodeBuddyDemo
      : MonoBehaviour\r\nNamespace: CodeBuddy.Demo\r\nMethods:\r\n- JoinDiscord()
      : void\r\n- OpenDocumentation() : void\r\n\r\nClass: DungeonPlayerController
      : MonoBehaviour\r\n\r\nClass: SortingOrderByY : MonoBehaviour\r\nFields:\r\n-
      sortingOrder : int\r\n- spriteRenderer : SpriteRenderer\r\n\r\nClass: FollowRacer
      : MonoBehaviour\r\n\r\nClass: RacerController : MonoBehaviour\r\nFields:\r\n-
      static instance : RacerController\r\n- audioSource : AudioSource\r\n- speed
      : float\r\nMethods:\r\n- Updates() : void\r\n\r\nClass: RacerOtherController
      : MonoBehaviour\r\nFields:\r\n- speed : float\r\n- audioSource : AudioSource\r\n-
      type : Type\r\n\r\nClass: RacerRoad : MonoBehaviour\r\nFields:\r\n- static
      list : List`1\r\nMethods:\r\n- OnEnable() : void\r\n\r\nClass: BasicEvents
      : MonoBehaviour\r\nNamespace: FunkyCode\r\n\r\nClass: LightSpriteSample : MonoBehaviour\r\nNamespace:
      FunkyCode\r\nFields:\r\n- sprite : Sprite\r\n- lightSprite : LightSprite2D\r\n\r\nClass:
      GUIFPS : MonoBehaviour\r\nMethods:\r\n- Get() : string\r\n\r\nClass: MainDemoManager
      : MonoBehaviour\r\nFields:\r\n- scenesCount : int\r\n\r\nClass: DemoFollowMouse
      : MonoBehaviour\r\nMethods:\r\n- static GetMousePosition() : Vector2\r\n\r\nClass:
      DemoLightColorChange : MonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n-
      speed : float\r\n- time : float\r\n- colors : Color[]\r\n\r\nClass: DayLightCollider2D
      : MonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n- shadowLayer : int\r\n-
      maskLayer : int\r\n- shadowType : ShadowType\r\n- maskType : MaskType\r\n-
      shadowEffect : ShadowEffect\r\n- shadowDistance : float\r\n- shadowThickness
      : float\r\n- shadowSoftness : float\r\n- shadowTranslucency : float\r\n- maskLit
      : MaskLit\r\n- depth : Depth\r\n- depthFalloff : DepthFalloff\r\n- depthCustomValue
      : int\r\n- mainShape : DayLightColliderShape\r\n- normalMapMode : DayNormalMapMode\r\n-
      spriteMeshObject : SpriteMeshObject\r\n- static List : List`1\r\nProperties:\r\n-
      isStatic : bool\r\nMethods:\r\n- OnEnable() : void\r\n- OnDisable() : void\r\n-
      GetDepth() : int\r\n- InAnyCamera() : bool\r\n- static ForceUpdateAll() : void\r\n-
      ForceUpdate() : void\r\n- UpdateLoop() : void\r\n- Initialize() : void\r\n\r\nClass:
      DayLightingTile\r\nNamespace: FunkyCode\r\nFields:\r\n- polygons : List`1\r\n-
      height : float\r\n- rect : Rect\r\nMethods:\r\n- GetDayRect() : Rect\r\n- InCamera(Camera
      camera) : bool\r\n\r\nClass: DayLightTilemapCollider2D : MonoBehaviour\r\nNamespace:
      FunkyCode\r\nFields:\r\n- tilemapType : MapType\r\n- shadowLayer : int\r\n-
      shadowTranslucency : float\r\n- shadowSoftness : float\r\n- shadowTileType
      : ShadowTileType\r\n- height : float\r\n- maskLayer : int\r\n- maskLit : MaskLit\r\n-
      transform2D : DayLightTilemapColliderTransform\r\n- rectangle : Rectangle\r\n-
      isometric : Isometric\r\n- hexagon : Hexagon\r\n- superTilemapEditor : TilemapCollider2D\r\n-
      dayTiles : List`1\r\nProperties:\r\n- static List : List`1\r\nMethods:\r\n-
      ShadowsDisabled() : bool\r\n- MasksDisabled() : bool\r\n- OnEnable() : void\r\n-
      OnDisable() : void\r\n- GetCurrentTilemap() : Base\r\n- Initialize() : void\r\n-
      GetTileList() : List`1\r\n- GetTilemapProperties() : TilemapProperties\r\n\r\nClass:
      LightBlink : MonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n- primaryColor
      : Color\r\n- secondaryColor : Color\r\n\r\nClass: LightCycleBuffer\r\nNamespace:
      FunkyCode\r\nFields:\r\n- gradient : Gradient\r\n\r\nClass: LightDayProperties\r\nNamespace:
      FunkyCode\r\nFields:\r\n- shadowOffset : float\r\n- shadowHeight : AnimationCurve\r\n-
      shadowAlpha : AnimationCurve\r\n\r\nClass: LightCycle : MonoBehaviour\r\nNamespace:
      FunkyCode\r\nFields:\r\n- time : float\r\n- dayProperties : LightDayProperties\r\n-
      nightProperties : LightCycleBuffer[]\r\nMethods:\r\n- SetTime(float setTime)
      : void\r\n\r\nClass: LightFlicker : MonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n-
      flickersPerSecond : float\r\n- flickerRangeMin : float\r\n- flickerRangeMax
      : float\r\n\r\nClass: LightEventListener : MonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n-
      useDistance : bool\r\n- visability : float\r\n- CollisionInfo : Nullable`1\r\n\r\nClass:
      LightEventListenerCount : MonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n-
      lights : List`1\r\n\r\nClass: LightEventListenerCountGUI : MonoBehaviour\r\nNamespace:
      FunkyCode\r\n\r\nClass: LightEventListenerGUI : MonoBehaviour\r\nNamespace:
      FunkyCode\r\n\r\nClass: LightCollider2D : MonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n-
      shadowType : ShadowType - shadow \r\n- shadowLayer : int\r\n- shadowDistance
      : ShadowDistance\r\n- shadowDistanceMin : float\r\n- shadowDistanceMax : float\r\n-
      shadowTranslucency : float\r\n- maskType : MaskType - mask \r\n- maskLit :
      MaskLit\r\n- maskPivot : MaskPivot\r\n- maskLayer : int\r\n- maskLitCustom
      : float\r\n- bumpMapMode : BumpMapMode\r\n- lightOnEnter : LightEvent\r\n-
      lightOnExit : LightEvent\r\n- mainShape : LightColliderShape\r\n- spriteMeshObject
      : SpriteMeshObject\r\n- static List : List`1\r\n- static ListEventReceivers
      : List`1\r\n- static layerManagerMask : LightColliderLayer`1\r\n- static layerManagerShadow
      : LightColliderLayer`1\r\nProperties:\r\n- isStatic : bool\r\nMethods:\r\n-
      ShadowDisabled() : bool\r\n- AddEventOnEnter(UnityAction`1 call) : void\r\n-
      AddEventOnExit(UnityAction`1 call) : void\r\n- AddEvent(CollisionEvent2D collisionEvent)
      : void\r\n- RemoveEvent(CollisionEvent2D collisionEvent) : void\r\n- static
      ForceUpdateAll() : void\r\n- static GetMaskList(int layer) : List`1\r\n- static
      GetShadowList(int layer) : List`1\r\n- CollisionEvent(LightCollision2D collision)
      : void\r\n- InLight(Light2D light) : bool\r\n- UpdateNearbyLights() : void\r\n-
      Initialize() : void\r\n- UpdateLoop() : void\r\n\r\nClass: LightTilemapCollider2D
      : MonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n- mapType : MapType\r\n-
      shadowLayer : int\r\n- maskLayer : int\r\n- shadowTranslucency : float\r\n-
      shadowTileType : ShadowTileType\r\n- bumpMapMode : BumpMapMode\r\n- rectangle
      : Rectangle\r\n- isometric : Isometric\r\n- hexagon : Hexagon\r\n- superTilemapEditor
      : TilemapCollider2D\r\n- lightingTransform : LightTilemapTransform\r\n- static
      List : List`1\r\n- static layerManagerMask : LightColliderLayer`1\r\n- static
      layerManagerCollision : LightColliderLayer`1\r\nMethods:\r\n- static GetMaskList(int
      layer) : List`1\r\n- static GetShadowList(int layer) : List`1\r\n- ShadowsDisabled()
      : bool\r\n- MasksDisabled() : bool\r\n- InLight(Light2D light) : bool\r\n-
      RefreshTile(Vector3Int position) : void\r\n- OnEnable() : void\r\n- OnDisable()
      : void\r\n- Update() : void\r\n- GetCurrentTilemap() : Base\r\n- Initialize()
      : void\r\n- GetTileList() : List`1\r\n- GetTilemapProperties() : TilemapProperties\r\n\r\nClass:
      Light2D : LightingMonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n- lightType
      : LightType\r\n- lightPresetId : int - settings \r\n- eventPresetId : int\r\n-
      lightLayer : int - light layer \r\n- occlusionLayer : int\r\n- translucentLayer
      : int\r\n- translucentPresetId : int\r\n- color : Color\r\n- size : float\r\n-
      spotAngleInner : float\r\n- spotAngleOuter : float\r\n- coreSize : float -
      soft shadow \r\n- falloff : float\r\n- lightStrength : float\r\n- outerAngle
      : float - legacy shadow \r\n- lightRadius : float\r\n- shadowDistanceClose
      : float\r\n- shadowDistanceFar : float\r\n- maskTranslucencyQuality : MaskTranslucencyQuality\r\n-
      maskTranslucencyStrength : float\r\n- applyRotation : Rotation\r\n- textureSize
      : LightingSourceTextureSize\r\n- meshMode : MeshMode\r\n- bumpMap : BumpMap\r\n-
      whenInsideCollider : WhenInsideCollider\r\n- lightSprite : LightSprite\r\n-
      sprite : Sprite\r\n- spriteFlipX : bool\r\n- spriteFlipY : bool\r\n- transform2D
      : LightTransform\r\n- freeForm : LightFreeForm\r\n- freeFormFalloff : float\r\n-
      freeFormPoint : float\r\n- freeFormFalloffStrength : float\r\n- freeFormPoints
      : FreeFormPoints\r\n- eventHandling : LightEventHandling\r\n- static List :
      List`1 - Internal \r\n- drawingEnabled : bool\r\n- drawingTranslucencyEnabled
      : bool\r\nProperties:\r\n- Buffer : LightBuffer2D\r\nMethods:\r\n- AddEvent(CollisionEvent2D
      collisionEvent) : void\r\n- AddCollider(LightCollider2D id) : void\r\n- GetLightPresetLayers()
      : LayerSetting[]\r\n- GetTranslucencyPresetLayers() : LayerSetting[]\r\n- GetEventPreset()
      : EventPreset\r\n- static GetDefaultSprite() : Sprite\r\n- GetSprite() : Sprite\r\n-
      ForceUpdate() : void\r\n- static ForceUpdateAll() : void\r\n- OnEnable() :
      void\r\n- OnDisable() : void\r\n- Free() : void\r\n- InCameras() : bool\r\n-
      InCamera(Camera camera) : bool\r\n- IfDrawLightCollider(LightCollider2D lightCollider)
      : bool\r\n- GetTextureSize() : Vector2Int\r\n- IsPixelPerfect() : bool\r\n-
      GetBuffer() : LightBuffer2D\r\n- UpdateLoop() : void\r\n- DrawMeshMode() :
      void\r\n\r\nClass: LightParticleSystem2D : MonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n-
      lightLayer : int\r\n- color : Color\r\n- useParticleColor : bool\r\n- scale
      : float\r\n- customParticle : Texture\r\n- particleArray : Particle[]\r\n-
      static List : List`1\r\nMethods:\r\n- OnEnable() : void\r\n- OnDisable() :
      void\r\n- GetParticleSystem() : ParticleSystem\r\n- GetParticleSystemRenderer()
      : ParticleSystemRenderer\r\n\r\nClass: LightRoom2D : MonoBehaviour\r\nNamespace:
      FunkyCode\r\nFields:\r\n- lightLayer : int\r\n- color : Color\r\n- shape :
      LightingRoomShape\r\n- spriteMeshObject : SpriteMeshObject\r\n- static List
      : List`1\r\nMethods:\r\n- OnEnable() : void\r\n- OnDisable() : void\r\n- Awake()
      : void\r\n- Initialize() : void\r\n\r\nClass: LightSprite2D : MonoBehaviour\r\nNamespace:
      FunkyCode\r\nFields:\r\n- lightLayer : int\r\n- type : Type\r\n- spriteMode
      : SpriteMode\r\n- sprite : Sprite\r\n- color : Color\r\n- flipX : bool\r\n-
      flipY : bool\r\n- lightSpriteTransform : LightSpriteTransform\r\n- lightSpriteShape
      : LightSpriteShape\r\n- meshMode : MeshMode\r\n- glowMode : GlowMode\r\n- spriteRenderer
      : VirtualSpriteRenderer\r\n- spriteMeshObject : SpriteMeshObject\r\n- static
      List : List`1\r\nMethods:\r\n- OnEnable() : void\r\n- OnDisable() : void\r\n-
      InCamera(Camera camera) : bool\r\n- static GetDefaultSprite() : Sprite\r\n-
      GetSprite() : Sprite\r\n- GetSpriteOrigin() : Sprite\r\n- GetSpriteRenderer()
      : SpriteRenderer\r\n- UpdateLoop() : void\r\n- DrawMesh() : void\r\n\r\nClass:
      LightTexture2D : MonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n- lightLayer
      : int\r\n- texture : Texture\r\n- color : Color\r\n- size : Vector2\r\n- shaderMode
      : ShaderMode\r\n- static List : List`1\r\nMethods:\r\n- OnEnable() : void\r\n-
      OnDisable() : void\r\n- InCamera(Camera camera) : bool\r\n\r\nClass: LightTilemapRoom2D
      : MonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n- lightLayer : int\r\n-
      mapType : MapType\r\n- maskType : MaskType\r\n- shaderType : ShaderType\r\n-
      color : Color\r\n- superTilemapEditor : TilemapRoom2D\r\n- rectangle : Rectangle\r\n-
      lightingTransform : LightingTilemapRoomTransform\r\n- static List : List`1\r\nMethods:\r\n-
      OnEnable() : void\r\n- OnDisable() : void\r\n- GetCurrentTilemap() : Base\r\n-
      Initialize() : void\r\n- Update() : void\r\n- GetTilemapProperties() : TilemapProperties\r\n-
      GetTileList() : List`1\r\n- GetRadius() : float\r\n\r\nClass: LightingManager2D
      : LightingMonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n- cameras : LightingCameras\r\n-
      version : int\r\n- version_string : string\r\n- setProfile : Profile\r\n- profile
      : Profile\r\n- foldout_cameras : Boolean[]\r\n- foldout_lightmapPresets : Boolean[,]\r\n-
      foldout_lightmapMaterials : Boolean[,]\r\nMethods:\r\n- GetCamera(int id) :
      Camera\r\n- static ForceUpdate() : void\r\n- static Get() : LightingManager2D\r\n-
      Awake() : void\r\n- FixTransform() : void\r\n- SetupProfile() : void\r\n- UpdateInternal()
      : void\r\n- UpdateProfile() : void\r\n\r\nClass: LightingMeshRenderer : LightingMonoBehaviour\r\nNamespace:
      FunkyCode\r\nFields:\r\n- owner : Object\r\n- getSpriteMesh : Mesh\r\n- getMeshLight
      : Mesh\r\nProperties:\r\n- static List : List`1\r\n- Free : bool\r\nMethods:\r\n-
      GetMaterials() : Material[]\r\n- static GetCount() : int\r\n- OnEnable() :
      void\r\n- OnDisable() : void\r\n- Initialize() : void\r\n- Reset() : void\r\n-
      LateUpdate() : void\r\n- IsRendered() : bool\r\n- ClearMaterial() : void\r\n-
      UpdateLight(Light2D id, MeshMode meshMode) : void\r\n- UpdateLightSprite(LightSprite2D
      id, MeshMode meshMode) : void\r\n- GetMeshSprite() : Mesh\r\n- GetMeshLight()
      : Mesh\r\n\r\nClass: OnRenderMode : LightingMonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n-
      mainBuffer : LightMainBuffer2D\r\n- meshRenderer : MeshRenderer\r\n- meshFilter
      : MeshFilter\r\n- static List : List`1\r\nMethods:\r\n- OnEnable() : void\r\n-
      OnDisable() : void\r\n- static Get(LightMainBuffer2D buffer) : OnRenderMode\r\n-
      Initialize(LightMainBuffer2D mainBuffer) : void\r\n- UpdateLoop() : void\r\n-
      UpdatePosition() : void\r\n\r\nClass: LightOcclusion2D : MonoBehaviour\r\nNamespace:
      FunkyCode\r\nFields:\r\n- occlusionType : OcclusionType\r\n- occlusionSize
      : float\r\n- shape : LightingOcclusionShape\r\n- occlusionGameObject : GameObject\r\n-
      meshFilter : MeshFilter\r\n- meshRenderer : MeshRenderer\r\nMethods:\r\n- GetOcclusionGameObject()
      : GameObject\r\n- GetMeshFilter() : MeshFilter\r\n- GetMeshRenderer() : MeshRenderer\r\n-
      GetOcclusionShape() : LightingOcclussion\r\n- OnEnable() : void\r\n- Initialize()
      : void\r\n- Update() : void\r\n\r\nClass: LightTilemapOcclusion2D : MonoBehaviour\r\nNamespace:
      FunkyCode\r\nFields:\r\n- tilemapType : MapType\r\n- onlyColliders : bool\r\n-
      sortingLayer : SortingLayer\r\nMethods:\r\n- Initialize() : void\r\n- Update()
      : void\r\n- SetupMap() : void\r\n- GenerateMesh() : void\r\n\r\nStruct: CameraLightmap
      : ValueType\r\nNamespace: FunkyCode\r\nFields:\r\n- rendering : Rendering\r\n-
      sceneView : SceneView\r\n- overlay : Overlay\r\n- overlayLayerType : OverlayLayerType\r\n-
      overlayMaterial : OverlayMaterial\r\n- overlayPosition : OverlayPosition\r\n-
      output : Output\r\n- sortingLayer : SortingLayer\r\n- customMaterial : Material\r\n-
      customMaterialInstance : Material\r\n- materialsType : MaterialType - Output
      Materials \r\n- materials : LightmapMaterials\r\n- renderLayerId : int\r\n-
      id : int\r\n- presetId : int\r\n- customPosition : float\r\nMethods:\r\n- GetMaterials()
      : LightmapMaterials\r\n- GetMaterial() : Material\r\n\r\nStruct: CameraSettings
      : ValueType\r\nNamespace: FunkyCode\r\nFields:\r\n- static initCount : int\r\n-
      id : int\r\n- cameraType : CameraType\r\n- customCamera : Camera\r\nProperties:\r\n-
      Lightmaps : CameraLightmap[]\r\nMethods:\r\n- GetLightmap(int index) : CameraLightmap\r\n-
      GetTypeName() : string\r\n- GetLayerId(int bufferId) : int\r\n- GetCamera()
      : Camera\r\n- GetHashCode() : int\r\n\r\nClass: LightingCameras\r\nNamespace:
      FunkyCode\r\nFields:\r\n- cameraSettings : CameraSettings[]\r\n- static count
      : int\r\nProperties:\r\n- Length : int\r\nMethods:\r\n- Get(int id) : CameraSettings\r\n-
      Set(int id, CameraSettings settings) : void\r\n\r\nClass: LightmapMaterials\r\nNamespace:
      FunkyCode\r\nFields:\r\n- materials : Material[]\r\nMethods:\r\n- static ClearMaterial(Material
      material) : void\r\n- static SetMaterial(int id, MaterialPass materialPass)
      : void\r\n- static SetDayLight() : void\r\n- Add(Material material) : void\r\n-
      Remove(Material material) : void\r\n\r\nClass: LightmapShaders\r\nNamespace:
      FunkyCode\r\nFields:\r\n- static previewTexture : Texture\r\n- static ActivePassLightmaps
      : LightmapPreset[]\r\nMethods:\r\n- static GetPreviewTexture() : Texture\r\n-
      static ResetShaders() : void\r\n- static SetShaders(bool isSceneView, int id,
      Camera camera, LightTexture lightTexture, LightmapPreset lightmapPreset) :
      void\r\n- static SetDayLight() : void\r\n\r\nClass: TilemapManager\r\nNamespace:
      FunkyCode.Chunks\r\nFields:\r\n- display : LightTile[]\r\n- static ChunkSize
      : int\r\n- maps : List`1[,]\r\nMethods:\r\n- GetTiles(Rect worldRect) : int\r\n-
      Update(List`1 tiles, Base tilemapCollider) : void\r\n- static Transform(Vector2
      position) : Vector2Int\r\n- static TransformBounds(Vector2 position) : Vector2Int\r\n\r\nClass:
      CameraTransform\r\nNamespace: FunkyCode\r\nFields:\r\n- static List : List`1\r\nProperties:\r\n-
      Camera : Camera\r\nMethods:\r\n- static Update() : void\r\n- static GetRadius(Camera
      camera) : float\r\n- static GetWorldRect(Camera camera) : Rect\r\n- static
      GetCamera(Camera camera) : CameraTransform\r\n- Update(bool force) : void\r\n-
      WorldRect() : Rect\r\n\r\nClass: DayLightColliderShape\r\nNamespace: FunkyCode\r\nFields:\r\n-
      shadowType : ShadowType\r\n- maskType : MaskType\r\n- transform : Transform\r\n-
      transform2D : DayLightingColliderTransform\r\n- spriteShape : SpriteShape\r\n-
      spritePhysicsShape : SpritePhysicsShape\r\n- colliderShape : Collider2DShape\r\n-
      height : float\r\n- thickness : float\r\n- isStatic : bool\r\nMethods:\r\n-
      SetTransform(Transform t) : void\r\n- ResetLocal() : void\r\n- ResetWorld()
      : void\r\n- GetMeshes() : List`1\r\n- GetPolygonsLocal() : List`1\r\n- GetPolygonsWorld()
      : List`1\r\n- GetShadowBounds() : Rect\r\n\r\nClass: DayLightingColliderTransform\r\nNamespace:
      FunkyCode\r\nFields:\r\n- updateNeeded : bool\r\n- position : Vector2\r\n-
      scale : Vector2\r\n- rotation : float\r\nMethods:\r\n- Reset() : void\r\n-
      SetShape(DayLightColliderShape shape) : void\r\n- Update() : void\r\n\r\nClass:
      DayLightTilemapColliderTransform\r\nNamespace: FunkyCode\r\nFields:\r\n- moved
      : bool\r\nMethods:\r\n- Update(DayLightTilemapCollider2D id) : void\r\n\r\nClass:
      FreeFormPoints\r\nNamespace: FunkyCode\r\nFields:\r\n- points : List`1\r\n\r\nClass:
      LightFreeForm\r\nNamespace: FunkyCode\r\nFields:\r\n- polygon : Polygon2\r\n-
      worldRect : Rect\r\n- UpdateNeeded : bool\r\nMethods:\r\n- ForceUpdate() :
      void\r\n- Update(Light2D source) : void\r\n\r\nClass: LightTransform\r\nNamespace:
      FunkyCode\r\nFields:\r\n- position : Vector2\r\n- rotation : float\r\n- WorldRect
      : Rect\r\nProperties:\r\n- UpdateNeeded : bool\r\nMethods:\r\n- ForceUpdate()
      : void\r\n- ClearUpdate() : void\r\n- Update(Light2D light) : void\r\n\r\nClass:
      LightColliderShape\r\nNamespace: FunkyCode\r\nFields:\r\n- shadowType : ShadowType\r\n-
      maskType : MaskType\r\n- maskPivot : MaskPivot\r\n- transform2D : LightColliderTransform\r\n-
      transform : Transform\r\n- collider2DShape : Collider2DShape\r\n- compositeShape
      : CompositeCollider2DShape\r\n- spriteShape : SpriteShape\r\n- spritePhysicsShape
      : SpritePhysicsShape\r\n- meshShape : MeshRendererShape\r\n- skinnedMeshShape
      : SkinnedMeshRendererShape\r\n- collider3DShape : Collider3DShape\r\nMethods:\r\n-
      GetShadowShape() : Base\r\n- GetMaskShape() : Base\r\n- SetTransform(LightCollider2D
      lightCollider2D) : void\r\n- ResetLocal() : void\r\n- ResetWorld() : void\r\n-
      RectOverlap(Rect rect) : bool\r\n- GetWorldRect() : Rect\r\n- GetSortingOrder()
      : int\r\n- GetSortingLayer() : int\r\n- GetIsoWorldRect() : Rect\r\n- GetMeshes()
      : List`1\r\n- GetPolygonsLocal() : List`1\r\n- GetPolygonsWorld() : List`1\r\n-
      GetPivotPoint() : Vector2\r\n- IsEdgeCollider() : bool\r\n\r\nClass: LightColliderTransform\r\nNamespace:
      FunkyCode\r\nFields:\r\n- shadowHeight : float\r\n- shadowTranslucency : float\r\nProperties:\r\n-
      UpdateNeeded : bool\r\n- Position : Vector2\r\n- Scale : Vector2\r\n- Rotation
      : float\r\nMethods:\r\n- SetShape(LightColliderShape shape, LightCollider2D
      lightCollider) : void\r\n- Reset() : void\r\n- Update(bool force) : void\r\n\r\nClass:
      LightingOcclussion\r\nNamespace: FunkyCode\r\nFields:\r\n- polygonPoints :
      List`1\r\n- outlinePoints : List`1\r\n- polygonPairs : List`1\r\nMethods:\r\n-
      static PreparePolygon(Polygon2 polygon, float size) : Polygon2\r\n\r\nClass:
      OcclusionMesh\r\nNamespace: FunkyCode\r\nFields:\r\n- tileCount : int\r\n-
      vertices : List`1\r\n- uv : List`1\r\n- triangles : List`1\r\n- colors : List`1\r\nMethods:\r\n-
      AddTile(int id, Vector2Int tilePosition, TileRotation tileRotation, Color color,
      bool flipX, bool flipY) : void\r\n- Export() : Mesh\r\n\r\nClass: LightingRoomShape\r\nNamespace:
      FunkyCode\r\nFields:\r\n- type : RoomType\r\n- colliderShape : Collider2DShape\r\n-
      spriteShape : SpriteShape\r\nMethods:\r\n- SetTransform(Transform t) : void\r\n-
      ResetLocal() : void\r\n- ResetWorld() : void\r\n- GetMeshes() : List`1\r\n\r\nClass:
      LightSpriteTransform\r\nNamespace: FunkyCode\r\nFields:\r\n- applyRotation
      : bool\r\n- scale : Vector2\r\n- rotation : float\r\n- position : Vector2\r\n\r\nClass:
      LightSpriteShape\r\nNamespace: FunkyCode\r\nFields:\r\n- update : bool\r\nMethods:\r\n-
      Set(VirtualSpriteRenderer spriteRenderer, Transform transform, LightSpriteTransform
      lightSpriteTransform) : void\r\n- Update() : void\r\n- GetWorldRect() : Rect\r\n-
      GetSpriteWorldPolygon() : Polygon2\r\n\r\nClass: LightTile\r\nNamespace: FunkyCode\r\nFields:\r\n-
      gridPosition : Vector3Int\r\n- worldPosition : Nullable`1\r\n- worldRotation
      : float\r\n- worldScale : Vector2\r\n- worldRadius : float\r\n- occluded :
      bool\r\n- colliderType : ColliderType\r\n- uv : Rect\r\n- scale : Vector2\r\n-
      rotation : float\r\n- spriteMeshObject : SpriteMeshObject\r\nMethods:\r\n-
      SetSprite(Sprite sprite) : void\r\n- GetSprite() : Sprite\r\n- NotInRange(Vector2
      pos, float sourceSize) : bool\r\n- ResetLocal() : void\r\n- ResetWorld() :
      void\r\n- UpdateTransform(Base tilemap) : void\r\n- GetWorldPosition(Base tilemap)
      : Vector2\r\n- SetLocalPolygons(List`1 localPolygons) : void\r\n- GetWorldPolygons(Base
      tilemap) : List`1\r\n- GetLocalPolygons(Base tilemap) : List`1\r\n- GetPhysicsShapePolygons()
      : List`1\r\n- GetDynamicMesh() : MeshObject\r\n- static GetStaticMesh(Base
      tilemap) : MeshObject\r\n\r\nClass: LightTilemapTransform\r\nNamespace: FunkyCode\r\nFields:\r\n-
      position : Vector2\r\n- rotation : float\r\n- tilemapAnchor : Vector3\r\n-
      tilemapCellSize : Vector3\r\n- tilemapGapSize : Vector3\r\n- sortingOrder :
      int\r\n- sortingLayerID : int\r\n- tilemapRenderer : TilemapRenderer\r\nProperties:\r\n-
      UpdateNeeded : bool\r\nMethods:\r\n- Update(LightTilemapCollider2D tilemapCollider2D)
      : void\r\n- GetTilemapRenderer(GameObject gameObject) : TilemapRenderer\r\n-
      GetTilemap(GameObject gameObject) : Tilemap\r\n- GetGrid(GameObject gameObject)
      : Grid\r\n\r\nClass: TilemapEvents\r\nNamespace: FunkyCode\r\nMethods:\r\n-
      static Initialize() : void\r\n- static Events(Tilemap tilemap, SyncTile[] s)
      : void\r\n\r\nClass: TilemapProperties\r\nNamespace: FunkyCode\r\nFields:\r\n-
      cellSize : Vector2\r\n- cellAnchor : Vector2\r\n- cellGap : Vector2\r\n- colliderOffset
      : Vector2\r\n- area : BoundsInt\r\n- tilemap : Tilemap\r\n- grid : Grid\r\n-
      transform : Transform\r\n\r\nClass: Base\r\nNamespace: FunkyCode.LightTilemapCollider\r\nFields:\r\n-
      shadowType : ShadowType\r\n- maskType : MaskType\r\n- gameObject : GameObject\r\n-
      transform : Transform\r\n- chunkManager : TilemapManager\r\nProperties:\r\n-
      MapTiles : List`1\r\n- Properties : TilemapProperties\r\nMethods:\r\n- ShadowsDisabled()
      : bool\r\n- MasksDisabled() : bool\r\n- TileWorldPosition(LightTile tile) :
      Vector2\r\n- TileWorldRotation(LightTile tile) : float\r\n- TileWorldScale()
      : Vector2\r\n- TilemapType() : MapType\r\n- IsPhysicsShape() : bool\r\n- Initialize()
      : void\r\n- SetGameObject(GameObject gameObject) : void\r\n- UpdateProperties()
      : bool\r\n- ResetWorld() : void\r\n- GetRect() : Rect\r\n- GetRadius() : float\r\n\r\nClass:
      Hexagon : Base\r\nNamespace: FunkyCode.LightTilemapCollider\r\nMethods:\r\n-
      TilemapType() : MapType\r\n- Initialize() : void\r\n- TileWorldPosition(LightTile
      tile) : Vector2\r\n- TileWorldRotation(LightTile tile) : float\r\n- TileWorldScale()
      : Vector2\r\n\r\nClass: Isometric : Base\r\nNamespace: FunkyCode.LightTilemapCollider\r\nFields:\r\n-
      ZasY : bool\r\nMethods:\r\n- TilemapType() : MapType\r\n- Initialize() : void\r\n-
      TileWorldPosition(LightTile tile) : Vector2\r\n- TileWorldRotation(LightTile
      tile) : float\r\n- TileWorldScale() : Vector2\r\n- IsPhysicsShape() : bool\r\n\r\nClass:
      Rectangle : Base\r\nNamespace: FunkyCode.LightTilemapCollider\r\nFields:\r\n-
      compositeColliders : List`1\r\n- shadowOptimization : bool\r\nMethods:\r\n-
      TilemapType() : MapType\r\n- static GetITilemap(Tilemap tilemap) : ITilemap\r\n-
      IsPhysicsShape() : bool\r\n- Initialize() : void\r\n- TileWorldPosition(LightTile
      tile) : Vector2\r\n- TileWorldRotation(LightTile tile) : float\r\n- TileWorldScale()
      : Vector2\r\n- RefreshTile(Vector3Int positionInt) : void\r\n- GetTileToRefresh(Vector3Int
      gridPosition) : LightTile\r\n- GetTile(Vector3Int position) : bool\r\n\r\nClass:
      OcclusionTileset\r\nNamespace: FunkyCode\r\nFields:\r\n- uv : TileUV[]\r\n-
      texture : Texture2D\r\n- sprites : Sprite[]\r\nMethods:\r\n- static Load(string
      path) : OcclusionTileset\r\n\r\nClass: LightingTilemapRoomTransform\r\nNamespace:
      FunkyCode\r\nFields:\r\n- position : Vector2\r\n- rotation : float\r\n- tilemapAnchor
      : Vector3\r\n- tilemapCellSize : Vector3\r\n- tilemapGapSize : Vector3\r\nProperties:\r\n-
      UpdateNeeded : bool\r\nMethods:\r\n- Update(LightTilemapRoom2D tilemapRoom2D)
      : void\r\n- GetTilemap(GameObject gameObject) : Tilemap\r\n- GetGrid(GameObject
      gameObject) : Grid\r\n\r\nClass: LightingDebug\r\nNamespace: FunkyCode\r\nFields:\r\n-
      static atlasTimer : float\r\n- static timer : TimerHelper\r\nMethods:\r\n-
      static OnGUI() : void\r\n- static RightBottomPanel() : void\r\n- static SecondUpdate()
      : void\r\n\r\nClass: LightCollider : Base\r\nNamespace: FunkyCode.EventHandling\r\nFields:\r\n-
      static removePointsColliding : Vector2[]\r\n- static removePointsCollidingCount
      : int\r\n- static removeCollisions : LightCollision2D[]\r\n- static removeCollisionsCount
      : int\r\nMethods:\r\n- static GetCollisions(List`1 collisions, Light2D lightingSource)
      : void\r\n- static RemoveHiddenPoints(List`1 collisions, Light2D light, EventPreset
      eventPreset) : List`1\r\n\r\nStruct: LightCollision2D : ValueType\r\nNamespace:
      FunkyCode\r\nFields:\r\n- light : Light2D\r\n- collider : LightCollider2D\r\n-
      points : List`1\r\n- state : State\r\n\r\nClass: LightTilemap : Base\r\nNamespace:
      FunkyCode.EventHandling\r\nFields:\r\n- static removePointsColliding : Vector2[]\r\n-
      static removePointsCollidingCount : int\r\n- static removeCollisions : LightCollision2D[]\r\n-
      static removeCollisionsCount : int\r\nMethods:\r\n- static RemoveHiddenPoints(List`1
      collisions, Light2D light, EventPreset eventPreset) : List`1\r\n\r\nClass:
      Object\r\nNamespace: FunkyCode.EventHandling\r\nFields:\r\n- listenersCache
      : List`1\r\n- listenersInLight : List`1\r\n- listenersInLightColliders : List`1\r\nMethods:\r\n-
      Update(Light2D light, EventPreset eventPreset) : void\r\n\r\nClass: LightingOcclusionShape\r\nNamespace:
      FunkyCode\r\nFields:\r\n- shadowType : ShadowType\r\n- colliderShape : Collider2DShape\r\n-
      spritePhysicsShape : SpritePhysicsShape\r\n- transform : Transform\r\nMethods:\r\n-
      SetTransform(Transform t) : void\r\n- ResetLocal() : void\r\n- ResetWorld()
      : void\r\n- IsEdgeCollider() : bool\r\n- GetMeshes() : List`1\r\n- GetPolygonsLocal()
      : List`1\r\n- GetPolygonsWorld() : List`1\r\n\r\nClass: Collider2DShape : Base\r\nNamespace:
      FunkyCode.LightShape\r\nFields:\r\n- edgeCollider2D : bool\r\nMethods:\r\n-
      GetMeshes() : List`1\r\n- GetPolygonsLocal() : List`1\r\n- GetPolygonsWorld()
      : List`1\r\n\r\nClass: Collider3DShape : Base\r\nNamespace: FunkyCode.LightShape\r\nFields:\r\n-
      edgeCollider2D : bool\r\nMethods:\r\n- GetMeshes() : List`1\r\n- GetPolygonsLocal()
      : List`1\r\n- GetPolygonsWorld() : List`1\r\n\r\nClass: CompositeCollider2DShape
      : Base\r\nNamespace: FunkyCode.LightShape\r\nMethods:\r\n- GetCompositeCollider()
      : CompositeCollider2D\r\n- GetMeshes() : List`1\r\n- GetPolygonsWorld() : List`1\r\n-
      GetPolygonsLocal() : List`1\r\n\r\nClass: MeshRendererShape : Base\r\nNamespace:
      FunkyCode.LightShape\r\nProperties:\r\n- Mesh : Mesh\r\nMethods:\r\n- GetSortingLayer()
      : int\r\n- GetSortingOrder() : int\r\n- ResetLocal() : void\r\n- GetMeshFilter()
      : MeshFilter\r\n- GetMeshRenderer() : MeshRenderer\r\n- GetMeshes() : List`1\r\n-
      GetPolygonsWorld() : List`1\r\n\r\nClass: SkinnedMeshRendererShape : Base\r\nNamespace:
      FunkyCode.LightShape\r\nMethods:\r\n- GetSkinnedMeshRenderer() : SkinnedMeshRenderer\r\n-
      GetMeshes() : List`1\r\n- GetPolygonsWorld() : List`1\r\n\r\nClass: SpritePhysicsShape
      : Base\r\nNamespace: FunkyCode.LightShape\r\nFields:\r\n- physicsShape : PhysicsShape\r\nMethods:\r\n-
      ResetLocal() : void\r\n- GetOriginalSprite() : Sprite\r\n- GetSpriteRenderer()
      : SpriteRenderer\r\n- GetPhysicsShape() : PhysicsShape\r\n- GetMeshes() : List`1\r\n-
      GetPolygonsWorld() : List`1\r\n- GetPolygonsLocal() : List`1\r\n\r\nClass:
      SpriteShape : Base\r\nNamespace: FunkyCode.LightShape\r\nMethods:\r\n- GetSortingLayer()
      : int\r\n- GetSortingOrder() : int\r\n- GetPolygonsLocal() : List`1\r\n- GetPolygonsWorld()
      : List`1\r\n- ResetLocal() : void\r\n- GetSpriteRenderer() : SpriteRenderer\r\n-
      GetOriginalSprite() : Sprite\r\n\r\nClass: Base\r\nNamespace: FunkyCode.LightShape\r\nMethods:\r\n-
      GetSortingOrder() : int\r\n- GetSortingLayer() : int\r\n- GetMeshes() : List`1\r\n-
      GetPolygonsLocal() : List`1\r\n- GetPolygonsWorld() : List`1\r\n- SetTransform(Transform
      transform) : void\r\n- ResetLocal() : void\r\n- ResetWorld() : void\r\n- GetWorldRect()
      : Rect\r\n- GetDayRect(float shadowDistance) : Rect\r\n- GetIsoWorldRect()
      : Rect\r\n- GetPivotPoint_ShapeCenter() : Vector2\r\n- GetPivotPoint_TransformCenter()
      : Vector2\r\n- GetPivotPoint_LowestY() : Vector2\r\n\r\nClass: BumpMask\r\nNamespace:
      FunkyCode.Lighting2DMaterial\r\nMethods:\r\n- Reset() : void\r\n- Initialize()
      : void\r\n- GetNormalMapSpritePixelToLight() : Material\r\n- GetNormalMapSpriteObjectToLight()
      : Material\r\n- GetBumpedDaySprite() : Material\r\n\r\nClass: Lights\r\nNamespace:
      FunkyCode.Lighting2DMaterial\r\nMethods:\r\n- Reset() : void\r\n- Initialize()
      : void\r\n- GetPointLight() : Material\r\n- GetSpriteLight() : Material\r\n-
      GetFreeFormLight() : Material\r\n- GetFreeFormEdgeLight() : Material\r\n- GetLightOcclusion()
      : Material\r\n- GetPointOcclusion() : Material\r\n- GetFreeFormOcclusion()
      : Material\r\n\r\nClass: Mask\r\nNamespace: FunkyCode.Lighting2DMaterial\r\nMethods:\r\n-
      Reset() : void\r\n- GetMask() : Material\r\n- GetMaskTranslucency() : Material\r\n-
      GetDayMask() : Material\r\n- Initialize() : void\r\n\r\nClass: Room\r\nNamespace:
      FunkyCode.Lighting2DMaterial\r\nMethods:\r\n- Reset() : void\r\n- Initialize()
      : void\r\n- GetRoomMask() : Material\r\n- GetRoomMultiply() : Material\r\n\r\nClass:
      Shadow\r\nNamespace: FunkyCode.Lighting2DMaterial\r\nMethods:\r\n- Reset()
      : void\r\n- Initialize() : void\r\n- GetDepthDayShadow() : Material\r\n- GetAlphaShadow()
      : Material\r\n- GetSoftShadow() : Material\r\n- GetSoftShadowDefault() : Material\r\n-
      GetFastShadow() : Material\r\n- GetLegacyGPUShadow() : Material\r\n- GetSoftDistanceShadow()
      : Material\r\n- GetLegacyCPUShadow() : Material\r\n- GetPenumbraSprite() :
      Sprite\r\n- GetPenumbraSprite2() : Sprite\r\n- GetDayCPUShadow() : Material\r\n-
      GetSpriteShadow() : Material\r\n- GetSpriteProjectionMaterial() : Material\r\n\r\nClass:
      Lighting2DMaterials\r\nNamespace: FunkyCode\r\nFields:\r\n- mask : Mask\r\n-
      bumpMask : BumpMask\r\n- shadow : Shadow\r\n- room : Room\r\n- lights : Lights\r\nMethods:\r\n-
      Initialize() : bool\r\n- Reset() : void\r\n- GetLightSprite() : Material\r\n-
      GetMaskBlurVertical() : Material\r\n- GetMaskBlurHorizontal() : Material\r\n-
      GetAdditive() : Material\r\n- GetMultiplyHDR() : Material\r\n- GetAlphaColor()
      : Material\r\n- GetOcclusionEdge() : Material\r\n- GetOcclusionBlur() : Material\r\n\r\nClass:
      LightingMaterial\r\nNamespace: FunkyCode\r\nMethods:\r\n- static Load(Material
      material) : LightingMaterial\r\n- static Load(string path) : LightingMaterial\r\n-
      SetTexture(string path) : void\r\n- SetTexture(Texture setTexture) : void\r\n-
      Get() : Material\r\n\r\nClass: MeshRendererManager\r\nNamespace: FunkyCode\r\nMethods:\r\n-
      static AddBuffer(Object source) : LightingMeshRenderer\r\n- static Pull(Object
      source) : LightingMeshRenderer\r\n\r\nClass: GizmosHelper\r\nNamespace: FunkyCode\r\nMethods:\r\n-
      static DrawRect(Vector3 position, Rect rect) : void\r\n- static IsoConvert(Vector3
      vector) : Vector3\r\n- static DrawIsoRect(Vector3 position, Rect rect) : void\r\n-
      static DrawCircle(Vector3 position, float rotation, float angle, float size)
      : void\r\n- static DrawPolygons(List`1 polygons, Vector3 position) : void\r\n-
      static DrawPolygon(Polygon2 polygon, Vector3 position) : void\r\n\r\nClass:
      LightingMonoBehaviour : MonoBehaviour\r\nNamespace: FunkyCode\r\nMethods:\r\n-
      DestroySelf() : void\r\n\r\nClass: LightingPosition\r\nNamespace: FunkyCode\r\nMethods:\r\n-
      static GetPosition2D(Vector3 position3D) : Vector2\r\n- static GetPosition3D(Vector2
      position2D) : Vector3\r\n- static GetPosition3D(Vector2 position2D, Vector3
      position3D) : Vector3\r\n- static GetPosition3DWorld(Vector2 position2D, Vector3
      position3D) : Vector3\r\n- static GetRotation2D(Transform transform) : float\r\n-
      static GetCameraPlanePosition(Camera camera) : Vector3\r\n- static GetCameraCustomPosition(Camera
      camera, float position) : Vector3\r\n- static GetCameraRotation(Camera camera)
      : float\r\n\r\nClass: LightingRender2D\r\nNamespace: FunkyCode\r\nFields:\r\n-
      static preRenderMesh : Mesh\r\nMethods:\r\n- static GetMesh() : Mesh\r\n- static
      GetTextureSize(LightingSourceTextureSize textureSize) : Vector2Int\r\n- static
      GetSize(Camera camera) : Vector3\r\n- static PostRender(LightMainBuffer2D mainBuffer)
      : void\r\n- static OnRender(LightMainBuffer2D mainBuffer) : void\r\n- static
      PreRender(LightMainBuffer2D mainBuffer) : void\r\n\r\nClass: LightTexture\r\nNamespace:
      FunkyCode\r\nFields:\r\n- renderTexture : RenderTexture\r\n- width : int\r\n-
      height : int\r\n- setWidth : int\r\n- setHeight : int\r\nMethods:\r\n- Create()
      : void\r\n\r\nClass: MeshBrush\r\nNamespace: FunkyCode\r\nFields:\r\n- vertices
      : List`1\r\n- uv : List`1\r\n- triangles : List`1\r\n- colors : List`1\r\nMethods:\r\n-
      Clear() : void\r\n- AddMesh(Mesh mesh, Vector3 offset) : void\r\n- Export()
      : Mesh\r\n\r\nClass: MeshObject\r\nNamespace: FunkyCode\r\nFields:\r\n- mesh
      : Mesh\r\n- vertices : Vector3[]\r\n- uv : Vector2[]\r\n- triangles : Int32[]\r\nMethods:\r\n-
      static Get(Mesh meshOrigin) : MeshObject\r\n\r\nStruct: SpriteTransform : ValueType\r\nNamespace:
      FunkyCode\r\nFields:\r\n- position : Vector2\r\n- scale : Vector2\r\n- rotation
      : float\r\n- uv : Rect\r\n\r\nClass: LightBuffer\r\nNamespace: FunkyCode.Rendering\r\nMethods:\r\n-
      static Render(Light2D light) : void\r\n- static RenderTranslucency(Light2D
      light) : void\r\n- static RenderFreeForm(Light2D light) : void\r\n- static
      UpdateName(LightBuffer2D buffer) : void\r\n- static InitializeRenderTexture(LightBuffer2D
      buffer, Vector2Int textureSize) : void\r\n- static InitializeFreeFormTexture(LightBuffer2D
      buffer, Vector2Int textureSize) : void\r\n- static InitializeTranslucencyTexture(LightBuffer2D
      buffer, Vector2Int textureSize) : void\r\n\r\nClass: LightBuffer2D\r\nNamespace:
      FunkyCode\r\nFields:\r\n- name : string\r\n- renderTexture : LightTexture\r\n-
      translucencyTexture : LightTexture\r\n- translucencyTextureBlur : LightTexture\r\n-
      freeFormTexture : LightTexture\r\n- updateNeeded : bool\r\n- static List :
      List`1\r\nProperties:\r\n- Light : Light2D\r\n- Free : bool\r\nMethods:\r\n-
      static Clear() : void\r\n- DestroySelf() : void\r\n- Initiate(Vector2Int textureSize)
      : void\r\n- Render() : void\r\n\r\nClass: LightMainBuffer\r\nNamespace: FunkyCode.Rendering\r\nMethods:\r\n-
      static Update(LightMainBuffer2D buffer) : void\r\n- static DrawPost(LightMainBuffer2D
      buffer) : void\r\n- static DrawOn(LightMainBuffer2D buffer) : void\r\n- static
      Render(LightMainBuffer2D buffer) : void\r\n- static GetScreenResolution(LightMainBuffer2D
      buffer) : Vector2Int\r\n- static InitializeRenderTexture(LightMainBuffer2D
      buffer) : void\r\n\r\nClass: LightMainBuffer2D\r\nNamespace: FunkyCode\r\nFields:\r\n-
      name : string\r\n- updateNeeded : bool\r\n- type : Type\r\n- hdr : HDR\r\n-
      renderTexture : LightTexture\r\n- cameraSettings : CameraSettings\r\n- cameraLightmap
      : CameraLightmap\r\n- sceneView : bool\r\n- static List : List`1\r\nProperties:\r\n-
      IsActive : bool\r\nMethods:\r\n- static Clear() : void\r\n- DestroySelf() :
      void\r\n- static Get(bool sceneView, CameraSettings cameraSettings, CameraLightmap
      lightmap, LightmapPreset lightmapPreset) : LightMainBuffer2D\r\n- GetLightmapPreset()
      : LightmapPreset\r\n- ClearMaterial() : void\r\n- GetMaterial() : Material\r\n-
      Update() : void\r\n- Render() : void\r\n\r\nClass: Manager\r\nNamespace: FunkyCode.Buffers\r\nMethods:\r\n-
      static AddBuffer(Light2D light) : LightBuffer2D\r\n- static PullBuffer(Light2D
      light) : LightBuffer2D\r\n- static FreeBuffer(LightBuffer2D buffer) : void\r\n\r\nClass:
      Main\r\nNamespace: FunkyCode.Rendering.Day\r\nMethods:\r\n- static Draw(Camera
      camera, LightmapPreset lightmapPreset) : void\r\n- static IsDrawing(Camera
      camera, LightmapPreset lightmapPreset) : bool\r\n\r\nClass: SpriteRenderer2D\r\nNamespace:
      FunkyCode.Rendering.Day\r\nFields:\r\n- static currentTexture : Texture2D\r\nMethods:\r\n-
      static Draw(DayLightCollider2D id, Vector2 offset) : void\r\n- static DrawTilemap(DayLightTilemapCollider2D
      id, Vector2 offset) : void\r\n- static DrawBumped(DayLightCollider2D id, Vector2
      offset) : void\r\n\r\nClass: NoSort\r\nNamespace: FunkyCode.Rendering.Day\r\nMethods:\r\n-
      static Draw(Pass pass) : void\r\n\r\nClass: Shadow\r\nNamespace: FunkyCode.Rendering.Day\r\nFields:\r\n-
      static direction : float\r\n- static directionCos : float\r\n- static directionSin
      : float\r\n- static shadowDistance : float\r\n- static pointA : Vector2\r\n-
      static pointB : Vector2\r\n- static pointAOffset : Vector2\r\n- static pointBOffset
      : Vector2\r\nMethods:\r\n- static Begin() : void\r\n- static End() : void\r\n-
      static Draw(DayLightCollider2D id, Vector2 position) : void\r\n- static DrawLine(Vector2
      point, Vector2 nextPoint, int type, float translucency, float softness) : void\r\n-
      static DrawLineTri(Vector2 point, Vector2 nextPoint, int type, float translucency,
      float softness) : void\r\n- static DrawFill(DayLightCollider2D id, Vector2
      position) : void\r\n- static DrawTilemap(DayLightTilemapCollider2D id, Vector2
      position, Camera camera) : void\r\n\r\nClass: Pass\r\nNamespace: FunkyCode.Rendering.Day\r\nFields:\r\n-
      sortList : SortList\r\n- sortObject : SortObject\r\n- layerId : int\r\n- layer
      : LightmapLayer\r\n- camera : Camera\r\n- offset : Vector2\r\n- colliderList
      : List`1\r\n- colliderCount : int\r\n- drawShadows : bool\r\n- drawMask : bool\r\n-
      tilemapColliderList : List`1\r\n- tilemapColliderCount : int\r\nMethods:\r\n-
      SortObjects() : void\r\n- Setup(LightmapLayer slayer, Camera camera) : bool\r\n\r\nClass:
      SpriteRendererShadow\r\nNamespace: FunkyCode.Rendering.Day\r\nFields:\r\n-
      static currentTexture : Texture2D\r\n- static material : Material\r\n- static
      cameraOffset : Vector2\r\n- static direction : float\r\n- static shadowDistance
      : float\r\n- static pair : Pair2\r\nMethods:\r\n- static Begin(Vector2 offset)
      : void\r\n- static End() : void\r\n- static DrawOffset(DayLightCollider2D id)
      : void\r\n- static DrawProjection(DayLightCollider2D id) : void\r\n- static
      DrawProjectionShape(DayLightCollider2D id) : void\r\n\r\nClass: Sorted\r\nNamespace:
      FunkyCode.Rendering.Day\r\nMethods:\r\n- static Draw(Pass pass) : void\r\n\r\nStruct:
      SortObject : ValueType\r\nNamespace: FunkyCode.Rendering.Day.Sorting\r\nFields:\r\n-
      Distance : float\r\n- LightObject : Object\r\nMethods:\r\n- Compare(SortObject
      a, SortObject b) : int\r\n- static Sort() : IComparer`1\r\n\r\nClass: SortList\r\nNamespace:
      FunkyCode.Rendering.Day.Sorting\r\nFields:\r\n- List : SortObject[]\r\nProperties:\r\n-
      Count : int\r\nMethods:\r\n- Add(Object lightObject, float dist) : void\r\n-
      Reset() : void\r\n- Sort() : void\r\n\r\nClass: Rendering\r\nNamespace: FunkyCode.Rendering.Depth\r\nMethods:\r\n-
      static Draw(Pass pass) : void\r\n- static DrawSprite(Pass pass) : void\r\n-
      static DrawCollider(Pass pass) : void\r\n- static DrawColliderFill(Pass pass)
      : void\r\n\r\nClass: Mesh\r\nNamespace: FunkyCode.Rendering.Light\r\nMethods:\r\n-
      static Mask(Light2D light, LightCollider2D id, Material material, LayerSetting
      layerSetting) : void\r\n- static MaskNormalMap(Light2D light, LightCollider2D
      id, Material material, LayerSetting layerSetting) : void\r\n\r\nClass: Shape\r\nNamespace:
      FunkyCode.Rendering.Light\r\nMethods:\r\n- static Mask(Light2D light, LightCollider2D
      id, LayerSetting layerSetting) : void\r\n\r\nClass: SkinnedMesh\r\nNamespace:
      FunkyCode.Rendering.Light\r\nMethods:\r\n- static Mask(Light2D light, LightCollider2D
      id, Material material, LayerSetting layerSetting) : void\r\n\r\nClass: Tile\r\nNamespace:
      FunkyCode.Rendering.Light\r\nFields:\r\n- static virtualSpriteRenderer : VirtualSpriteRenderer\r\nMethods:\r\n-
      static MaskSprite(LightTile tile, LayerSetting layerSetting, Material material,
      LightTilemapCollider2D tilemap, float lightSizeSquared) : void\r\n\r\nClass:
      UnityTilemap\r\nNamespace: FunkyCode.Rendering.Light\r\nFields:\r\n- static
      virtualSpriteRenderer : VirtualSpriteRenderer\r\nMethods:\r\n- static Sprite(Light2D
      light, LightTilemapCollider2D id, Material material, LayerSetting layerSetting)
      : void\r\n- static BumpedSprite(Light2D light, LightTilemapCollider2D id, Material
      material, LayerSetting layerSetting) : void\r\n- static MaskShape(Light2D light,
      LightTilemapCollider2D id, LayerSetting layerSetting) : void\r\n\r\nClass:
      Fast\r\nNamespace: FunkyCode.Rendering.Light.Shadow\r\nFields:\r\n- static
      pair : Pair2\r\n- static segmentData : Color\r\nMethods:\r\n- static Draw(List`1
      polygons, float translucency) : void\r\n\r\nClass: LegacyCPU\r\nNamespace:
      FunkyCode.Rendering.Light.Shadow\r\nFields:\r\n- static pair : Pair2\r\n- static
      projectedMiddle : Vector2\r\n- static projectedLeft : Vector2 - Middle Fin
      \r\n- static projectedRight : Vector2 - Detailed Shadow \r\n- static outerLeft
      : Vector2\r\n- static outerRight : Vector2\r\n- static edgeAWorld : Vector2
      - Left Fin \r\n- static edgeBWorld : Vector2\r\n- static edgeALocal : Vector2\r\n-
      static edgeBLocal : Vector2\r\n- static closestPoint : Vector2\r\n- static
      edgeAVector : Vector2\r\n- static edgeBVector : Vector2\r\n- static angleA
      : float\r\n- static angleB : float\r\n- static rotA : float\r\n- static rotB
      : float\r\n- static middle : Vector2\r\n- static sqrt : float\r\nMethods:\r\n-
      static Draw(List`1 polygons, float shadowDistanceMin, float shadowDistanceMax,
      float translucency) : void\r\n\r\nClass: LegacyGPU\r\nNamespace: FunkyCode.Rendering.Light.Shadow\r\nFields:\r\n-
      static pair : Pair2\r\n- static edgeAWorld : Vector2\r\n- static edgeBWorld
      : Vector2\r\nMethods:\r\n- static Draw(List`1 polygons, float distance, float
      translucency) : void\r\n\r\nClass: PerpendicularIntersection\r\nNamespace:
      FunkyCode.Rendering.Light.Shadow\r\nFields:\r\n- static pair : Pair2\r\nMethods:\r\n-
      static Draw(List`1 polygons, float shadowDistance) : void\r\n- static LineIntersectPolygons(Vector2
      startPoint, Vector2 endPoint, List`1 originlPoly) : Nullable`1\r\n\r\nClass:
      Soft\r\nNamespace: FunkyCode.Rendering.Light.Shadow\r\nMethods:\r\n- static
      Draw(List`1 polygons, float shadowTranslucency) : void\r\n\r\nClass: SoftDefault\r\nNamespace:
      FunkyCode.Rendering.Light.Shadow\r\nFields:\r\n- static pair : Pair2\r\n- static
      edgeAWorld : Vector2\r\n- static edgeBWorld : Vector2\r\nMethods:\r\n- static
      Draw(List`1 polygons, float translucency) : void\r\n\r\nClass: SoftDistance\r\nNamespace:
      FunkyCode.Rendering.Light.Shadow\r\nFields:\r\n- static pair : Pair2\r\n- static
      edgeAWorld : Vector2\r\n- static edgeBWorld : Vector2\r\n- static edgeALocal
      : Vector2\r\n- static edgeBLocal : Vector2\r\n- static projectedMiddle : Vector2\r\n-
      static projectedLeft : Vector2\r\n- static projectedRight : Vector2\r\n- static
      outerLeft : Vector2\r\n- static outerRight : Vector2\r\n- static edgeAVector
      : Vector2\r\n- static edgeBVector : Vector2\r\n- static sqrt : float\r\nMethods:\r\n-
      static Draw(List`1 polygons, float shadowDistanceMin, float shadowDistanceMax,
      float translucency) : void\r\n- static DrawLine(Vector2 point, Vector2 nextPoint,
      int type, float translucency) : void\r\n\r\nClass: SoftShadowSorter\r\nNamespace:
      FunkyCode\r\nFields:\r\n- static center : Vector2\r\n- static minPoint : Vector2\r\n-
      static maxPoint : Vector2\r\nMethods:\r\n- static Set(Polygon2 polygon, Light2D
      light) : void\r\n\r\nClass: SpriteProjection\r\nNamespace: FunkyCode.Rendering.Light.Shadow\r\nFields:\r\n-
      static pair : Pair2\r\nMethods:\r\n- static Draw(List`1 polygons, float shadowDistanceMin,
      float shadowDistanceMax, float translucency) : void\r\n- static LineIntersectPolygons(Vector2
      startPoint, Vector2 endPoint, List`1 originlPoly) : Nullable`1\r\n\r\nClass:
      TilemapCollider\r\nNamespace: FunkyCode.Rendering.Light.Shadow\r\n\r\nStruct:
      UVRect : ValueType\r\nNamespace: FunkyCode.Rendering.Light\r\nFields:\r\n-
      x0 : float\r\n- y0 : float\r\n- x1 : float\r\n- y1 : float\r\n\r\nClass: ShadowEngine\r\nNamespace:
      FunkyCode.Rendering.Light\r\nFields:\r\n- static light : Light2D\r\n- static
      lightOffset : Vector2\r\n- static drawOffset : Vector2\r\n- static lightSize
      : float\r\n- static continueDrawing : bool\r\n- static ignoreInside : bool\r\n-
      static dontdrawInside : bool\r\n- static objectOffset : Vector2\r\n- static
      flipX : bool\r\n- static flipY : bool\r\n- static spriteProjection : Sprite\r\n-
      static perpendicularIntersection : bool\r\n- static effectLayer : int\r\n-
      static effectPolygons : List`1 - Layer Effect \r\n- static softShadow : bool\r\n-
      static drawMode : int\r\n- static DRAW_MODE_LEGACY_CPU : int\r\n- static DRAW_MODE_LEGACY_GPU
      : int\r\n- static DRAW_MODE_SOFT_CONVEX : int\r\n- static DRAW_MODE_SOFT_VERTEX
      : int\r\n- static DRAW_MODE_SOFT_DISTANCE : int\r\n- static DRAW_MODE_SOFT_DEFAULT
      : int\r\n- static DRAW_MODE_PERPENDICULAR : int\r\n- static DRAW_MODE_SPRITEPROJECTION
      : int\r\n- static DRAW_MODE_FAST : int\r\nMethods:\r\n- static GetMaterial()
      : Material\r\n- static Draw(List`1 polygons, float shadowDistanceMin, float
      shadowDistanceMax, float shadowTranslucency) : void\r\n- static SetPass(Light2D
      lightObject, LayerSetting layer) : void\r\n- static GenerateEffectLayers()
      : void\r\n- static Prepare(Light2D light) : void\r\n\r\nClass: EdgePass\r\nNamespace:
      FunkyCode\r\nFields:\r\n- edgePosition : Vector2\r\n- edgeRotation : float\r\n-
      edgeSize : float\r\n- coreSize : float\r\n- shadowTranslucency : float\r\n-
      var_1 : float\r\n- var_2 : float\r\n- var_3 : float\r\n- var_4 : float\r\n-
      var_5 : float\r\n- var_6 : float\r\n- var_7 : float\r\n- leftEdgeLocal : Vector2\r\n-
      rightEdgeLocal : Vector2\r\n- leftEdge : Vector2\r\n- rightEdge : Vector2\r\n-
      leftOuterCore : float\r\n- leftCoreOut : Vector2\r\n- leftOuterToEdge : float\r\n-
      leftCoreOutToEdge : Vector2\r\n- leftInnerCore : float\r\n- leftCoreIn : Vector2\r\n-
      leftInnerToEdge : float\r\n- leftCoreInToEdge : Vector2\r\n- rightOuterCore
      : float\r\n- rightCoreOut : Vector2\r\n- rightOuterToEdge : float\r\n- rightCoreOutToEdge
      : Vector2\r\n- rightInnerCore : float\r\n- rightCoreIn : Vector2\r\n- rightInnerToEdge
      : float\r\n- rightCoreInToEdge : Vector2\r\n- edgeMiddle : Vector2\r\n- projectedMiddle
      : Vector2\r\nMethods:\r\n- SetVars() : void\r\n- Generate() : void\r\n- Draw()
      : void\r\n\r\nClass: SortList\r\nNamespace: FunkyCode.Rendering.Light.Sorting\r\nFields:\r\n-
      List : SortObject[]\r\nProperties:\r\n- Count : int\r\nMethods:\r\n- Add(Object
      collider, float dist) : void\r\n- Add(LightTilemapCollider2D tilemap, LightTile
      tile2D, float value) : void\r\n- Reset() : void\r\n- Sort() : void\r\n\r\nStruct:
      SortObject : ValueType\r\nNamespace: FunkyCode.Rendering.Light.Sorting\r\nFields:\r\n-
      Value : float\r\n- LightObject : Object\r\n- Tilemap : LightTilemapCollider2D\r\nMethods:\r\n-
      Compare(SortObject a, SortObject b) : int\r\n- static Sort() : IComparer`1\r\n\r\nClass:
      SortPass\r\nNamespace: FunkyCode.Rendering.Light.Sorting\r\nFields:\r\n- sortList
      : SortList\r\n- sortObject : SortObject\r\n- pass : Pass\r\nMethods:\r\n- Clear()
      : void\r\n- SortObjects() : void\r\n- AddTileMap(LightTilemapCollider2D id)
      : void\r\n- AddTiles(LightTilemapCollider2D id) : void\r\n\r\nClass: LightSource\r\nNamespace:
      FunkyCode.Rendering.Lightmap\r\nMethods:\r\n- static Draw(Light2D light, Camera
      camera) : void\r\n- static DrawOcclusion(Light2D light, Camera camera) : void\r\n-
      static DrawTranslucent(Light2D light, Camera camera) : void\r\n\r\nClass: LightSprite\r\nNamespace:
      FunkyCode.Rendering.Lightmap\r\n\r\nClass: Pass\r\nNamespace: FunkyCode.Rendering.Lightmap\r\nFields:\r\n-
      sortList : SortList\r\n- sortObject : SortObject\r\n- layerId : int\r\n- layer
      : LightmapLayer\r\n- camera : Camera\r\n- offset : Vector2\r\nMethods:\r\n-
      SortObjects() : void\r\n- Setup(LightmapLayer slayer, Camera camera) : bool\r\n\r\nClass:
      Particle\r\nNamespace: FunkyCode.Rendering.Lightmap\r\nMethods:\r\n- static
      DrawPass(Vector2 pos, Vector2 size, float angle) : void\r\n\r\nClass: ParticleRenderer\r\nNamespace:
      FunkyCode.Rendering.Lightmap\r\nMethods:\r\n- static Draw(LightParticleSystem2D
      id, Camera camera) : void\r\n\r\nClass: TextureRenderer\r\nNamespace: FunkyCode.Rendering.Lightmap\r\nMethods:\r\n-
      static Draw(LightTexture2D id, Camera camera) : void\r\n\r\nClass: TilemapRoom\r\nNamespace:
      FunkyCode.Rendering.Lightmap\r\nMethods:\r\n- static Draw(LightTilemapRoom2D
      id, Camera camera) : void\r\n\r\nStruct: MaterialPass : ValueType\r\nNamespace:
      FunkyCode\r\nFields:\r\n- material : Material\r\n- rect : Vector4\r\n- texture
      : Texture\r\n- color : Color\r\n- rotation : float\r\n- isSceneView : bool\r\n-
      passId : int\r\n\r\nClass: MaterialSystem\r\nNamespace: FunkyCode\r\nFields:\r\n-
      static materialPasses : MaterialPass[]\r\n- static Count : int\r\nMethods:\r\n-
      static Clear() : void\r\n- static Add(Material material, bool isSceneView,
      int passId, Camera camera, LightTexture lightTexture, LightmapPreset lightmapPreset)
      : void\r\n\r\nClass: GLExtended\r\nNamespace: FunkyCode\r\nFields:\r\n- static
      color : Color\r\nMethods:\r\n- static ResetColor() : void\r\n- static DrawMeshPass(MeshObject
      mesh, Vector3 position, Vector2 scale, float rotation) : void\r\n- static DrawMeshPass(MeshObject
      mesh) : void\r\n- static DrawMeshPass(List`1 meshes, Vector3 position, Vector2
      scale, float rotation) : void\r\n- static DrawMesh(MeshObject mesh, Vector3
      position, Vector2 scale, float rotation) : void\r\n- static DrawMesh(List`1
      meshes, Vector3 position, Vector2 scale, float rotation) : void\r\n\r\nClass:
      Sprite : Base\r\nNamespace: FunkyCode.Rendering.Universal\r\nMethods:\r\n-
      static Draw(SpriteMeshObject spriteMeshObject, SpriteRenderer spriteRenderer,
      Vector2 position, Vector2 scale, float rotation) : void\r\n\r\nClass: Texture
      : Base\r\nNamespace: FunkyCode.Rendering.Universal\r\n\r\nClass: Sprite : Base\r\nNamespace:
      FunkyCode.Rendering.Universal\r\nMethods:\r\n- static Draw(SpriteMeshObject
      spriteMeshObject, SpriteRenderer spriteRenderer, Vector2 position, Vector2
      scale, float rotation) : void\r\n\r\nClass: SceneView\r\nNamespace: FunkyCode\r\nMethods:\r\n-
      OnDisable() : void\r\n- OnEnable() : void\r\n- IsSceneViewActive() : bool\r\n\r\nClass:
      LayerSetting\r\nNamespace: FunkyCode\r\nFields:\r\n- layerID : int\r\n- type
      : LightLayerType\r\n- sorting : LightLayerSorting\r\n- sortingIgnore : LightLayerSortingIgnore\r\n-
      shadowEffect : LightLayerShadowEffect\r\n- shadowEffectLayer : int\r\n- maskLit
      : LightLayerMaskLit\r\n- maskLitDistance : float\r\nMethods:\r\n- GetLayerID()
      : int\r\n\r\nClass: DayMaskColor\r\nNamespace: FunkyCode\r\nMethods:\r\n- static
      Get(DayLightCollider2D id) : Color\r\n- static LitAbove() : Color\r\n\r\nClass:
      LayerSettingColor\r\nNamespace: FunkyCode\r\nMethods:\r\n- static Get(LightColliderShape
      lightShape, Vector2 position, LayerSetting layerSetting, MaskLit maskLit, float
      maskTranslucency, float maskLitCustom) : Color\r\n- static Get(Vector2 position,
      LayerSetting layerSetting, MaskLit maskLit, float maskTranslucency, float maskLitCustom)
      : Color\r\n- static LitAbove(float positionDistance, LayerSetting layerSetting)
      : Color\r\n\r\nClass: Lighting2D\r\nNamespace: FunkyCode\r\nFields:\r\n- static
      VERSION : int\r\n- static VERSION_STRING : string\r\n- static Materials : Lighting2DMaterials\r\nProperties:\r\n-
      static Disable : bool\r\n- static LightmapPresets : LightmapPreset[] - lightmaps
      \r\n- static QualitySettings : QualitySettings - quality \r\n- static DayLightingSettings
      : DayLightingSettings - day lighting \r\n- static RenderingMode : RenderingMode\r\n-
      static CoreAxis : CoreAxis\r\n- static DarknessColor : Color - set & get \r\n-
      static Resolution : float\r\n- static Profile : Profile - lightmaps \r\n- static
      ProjectSettings : ProjectSettings\r\nMethods:\r\n- static UpdateByProfile(Profile
      setProfile) : void\r\n- static RemoveProfile() : void\r\n\r\nClass: QualitySettings\r\nNamespace:
      FunkyCode.LightingSettings\r\nFields:\r\n- static LightingSourceTextureSizeArray
      : String[]\r\n- lightTextureSize : LightingSourceTextureSize\r\n- lightEffectTextureSize
      : LightingSourceTextureSize\r\n- lightFilterMode : FilterMode\r\n- lightmapFilterMode
      : FilterMode\r\n- updateMethod : UpdateMethod\r\n- coreAxis : CoreAxis\r\n-
      projection : Projection\r\n\r\nClass: Layers\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
      colliderLayers : LayersList\r\n- lightLayers : LayersList\r\n- dayLayers :
      LayersList\r\n\r\nClass: LayersList\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
      names : String[]\r\nMethods:\r\n- GetNames() : String[]\r\n- GetOcclusionNames()
      : String[]\r\n- GetTranslucencyNames() : String[]\r\n\r\nClass: DayLightingSettings\r\nNamespace:
      FunkyCode.LightingSettings\r\nFields:\r\n- direction : float\r\n- ShadowColor
      : Color\r\n- height : float\r\n- bumpMap : BumpMap\r\n\r\nClass: SortingLayer\r\nNamespace:
      FunkyCode.LightingSettings\r\nFields:\r\n- Order : int\r\nProperties:\r\n-
      Name : string\r\nMethods:\r\n- ApplyToMeshRenderer(MeshRenderer meshRenderer)
      : void\r\n\r\nClass: EditorView\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
      sceneViewLayer : int\r\n- gameViewLayer : int\r\n\r\nClass: Gizmos\r\nNamespace:
      FunkyCode.LightingSettings\r\nFields:\r\n- drawGizmos : EditorDrawGizmos\r\n-
      drawGizmosBounds : EditorGizmosBounds\r\n- drawGizmosChunks : EditorChunks\r\n-
      drawGizmosShadowCasters : EditorShadowCasters\r\n- drawIcons : EditorIcons\r\n-
      sceneViewLayer : int\r\n- gameViewLayer : int\r\n\r\nClass: Chunks\r\nNamespace:
      FunkyCode.LightingSettings\r\nFields:\r\n- enabled : bool\r\n- chunkSize :
      int\r\n\r\nClass: MeshMode\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
      enable : bool\r\n- alpha : float\r\n- shader : MeshModeShader\r\n- materials
      : Material[]\r\n- sortingLayer : SortingLayer\r\n\r\nClass: BumpMapMode\r\nNamespace:
      FunkyCode.LightingSettings\r\nFields:\r\n- type : NormalMapType\r\n- textureType
      : NormalMapTextureType\r\n- texture : Texture\r\n- sprite : Sprite\r\n- invertX
      : bool\r\n- invertY : bool\r\n- depth : float\r\n- spriteRenderer : SpriteRenderer\r\nMethods:\r\n-
      SetSpriteRenderer(SpriteRenderer spriteRenderer) : void\r\n- GetBumpTexture()
      : Texture\r\n- SelectMaterial(Material pixel, Material direction) : Material\r\n\r\nClass:
      DayNormalMapMode\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n- textureType
      : NormalMapTextureType\r\n- texture : Texture\r\n- sprite : Sprite\r\nMethods:\r\n-
      GetBumpTexture() : Texture\r\n\r\nClass: GlowMode\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
      enable : bool\r\n- glowRadius : float\r\n\r\nClass: LightEvent : UnityEvent`1\r\nNamespace:
      FunkyCode.LightSettings\r\n\r\nClass: EventPresetList\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
      list : EventPreset[]\r\nMethods:\r\n- GetBufferLayers() : String[]\r\n- Get()
      : EventPreset[]\r\n\r\nClass: EventPreset\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
      name : string\r\n- layerSetting : EventPresetLayers\r\n\r\nClass: EventPresetLayers\r\nNamespace:
      FunkyCode.LightingSettings\r\nFields:\r\n- list : LayerEventSetting[]\r\nMethods:\r\n-
      SetArray(LayerEventSetting[] array) : void\r\n- Get() : LayerEventSetting[]\r\n\r\nClass:
      LightmapPresetList\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
      list : LightmapPreset[]\r\nProperties:\r\n- Item : LightmapPreset\r\nMethods:\r\n-
      GetLightmapLayers() : String[]\r\n\r\nClass: LightmapPreset\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
      name : string\r\n- type : Type\r\n- hdr : HDR\r\n- darknessColor : Color\r\n-
      depth : int\r\n- resolution : float\r\n- dayLayers : LightmapLayerList\r\n-
      lightLayers : LightmapLayerList\r\n\r\nClass: LightmapLayerList\r\nNamespace:
      FunkyCode.LightingSettings\r\nFields:\r\n- list : LightmapLayer[]\r\nProperties:\r\n-
      Item : LightmapLayer\r\nMethods:\r\n- SetArray(LightmapLayer[] array) : void\r\n-
      Get() : LightmapLayer[]\r\n\r\nClass: LightmapLayer\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
      id : int\r\n- type : LayerType\r\n- sorting : LayerSorting\r\nMethods:\r\n-
      GetLayerID() : int\r\n\r\nClass: LightPresetList\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
      list : LightPreset[]\r\nProperties:\r\n- Item : LightPreset\r\nMethods:\r\n-
      GetPresetNames() : String[]\r\n- Get() : LightPreset[]\r\n\r\nClass: LightPreset\r\nNamespace:
      FunkyCode.LightingSettings\r\nFields:\r\n- name : string\r\n- layerSetting
      : LightPresetLayers\r\n\r\nClass: LightPresetLayers\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
      list : LayerSetting[]\r\nProperties:\r\n- Item : LayerSetting\r\nMethods:\r\n-
      SetArray(LayerSetting[] array) : void\r\n- Get() : LayerSetting[]\r\n\r\nClass:
      Profile : ScriptableObject\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
      lightmapPresets : LightmapPresetList\r\n- lightPresets : LightPresetList\r\n-
      eventPresets : EventPresetList\r\n- qualitySettings : QualitySettings\r\n-
      dayLightingSettings : DayLightingSettings\r\n- layers : Layers\r\nProperties:\r\n-
      DarknessColor : Color\r\n\r\nClass: ProjectSettings : ScriptableObject\r\nNamespace:
      FunkyCode.LightingSettings\r\nFields:\r\n- renderingMode : RenderingMode\r\n-
      editorView : EditorView\r\n- gizmos : Gizmos\r\n- chunks : Chunks\r\n- colorSpace
      : ColorSpace\r\n- managerInternal : ManagerInternal\r\n- managerInstance :
      ManagerInstance\r\n- shaderPreview : ShaderPreview\r\n- MaxLightSize : int\r\n-
      materialOffScreen : MaterialOffScreen\r\n- disable : bool\r\n- profile : Profile\r\nProperties:\r\n-
      Profile : Profile\r\n\r\nClass: SpriteMesh\r\nMethods:\r\n- Get(SpriteRenderer
      spriteRenderer, Vector2 size, Vector2 uv0, Vector2 uv1) : Mesh\r\n\r\nClass:
      SpriteMeshObject\r\nNamespace: FunkyCode\r\nMethods:\r\n- GetTiledMesh() :
      SpriteTiledMesh\r\n\r\nClass: SpriteTiledMesh\r\nNamespace: FunkyCode\r\nMethods:\r\n-
      GetMesh(SpriteRenderer spriteRenderer) : MeshObject\r\n\r\nClass: PhysicsShape\r\nNamespace:
      FunkyCode.SpriteExtension\r\nMethods:\r\n- Get() : List`1\r\n- GetSprite()
      : Sprite\r\n- GetMesh() : MeshObject\r\n\r\nClass: PhysicsShapeManager\r\nNamespace:
      FunkyCode.SpriteExtension\r\nFields:\r\n- static dictionary : Dictionary`2\r\nMethods:\r\n-
      static Clear() : void\r\n- static RequestCustomShape(Sprite originalSprite)
      : PhysicsShape\r\n- static RequestCustomShapeAccess(Sprite originalSprite)
      : PhysicsShape\r\n\r\nClass: TilemapCollider2D : TilemapCollider\r\nNamespace:
      FunkyCode.SuperTilemapEditorSupport\r\n\r\nClass: TilemapCollider2D : TilemapCollider\r\nNamespace:
      FunkyCode.SuperTilemapEditorSupport\r\n\r\nClass: TilemapCollider : Base\r\nNamespace:
      FunkyCode.SuperTilemapEditorSupport\r\nFields:\r\n- shadowTypeSTE : ShadowType\r\n-
      maskTypeSTE : MaskType\r\n- eventsInit : bool\r\n\r\nClass: TilemapRoom2D :
      Base\r\nNamespace: FunkyCode.SuperTilemapEditorSupport\r\nMethods:\r\n- Initialize()
      : void\r\n\r\nClass: TilemapRoom2D : Base\r\nNamespace: FunkyCode.SuperTilemapEditorSupport\r\nMethods:\r\n-
      Initialize() : void\r\n\r\nClass: Grid\r\nNamespace: FunkyCode.SuperTilemapEditorSupport.Light.Mask\r\nMethods:\r\n-
      static Draw(Light2D light, LightTilemapCollider2D id) : void\r\n\r\nClass:
      Grid\r\nNamespace: FunkyCode.SuperTilemapEditorSupport.Light.Mask\r\nMethods:\r\n-
      static Draw(Light2D light, LightTilemapCollider2D id) : void\r\n\r\nClass:
      Collider\r\nNamespace: FunkyCode.SuperTilemapEditorSupport.Light.Shadow\r\nMethods:\r\n-
      static Draw(Light2D light, LightTilemapCollider2D id) : void\r\n\r\nClass:
      Collider\r\nNamespace: FunkyCode.SuperTilemapEditorSupport.Light.Shadow\r\nMethods:\r\n-
      static Draw(Light2D light, LightTilemapCollider2D id) : void\r\n\r\nClass:
      TilemapCollider : Base\r\nNamespace: FunkyCode.SuperTilemapEditorSupport\r\nFields:\r\n-
      shadowTypeSTE : ShadowType\r\n- maskTypeSTE : MaskType\r\n- eventsInit : bool\r\n\r\nClass:
      Mesh2D : MonoBehaviour\r\nNamespace: FunkyCode.Utilities\r\nFields:\r\n- triangulation
      : Triangulation\r\n- material : Material - Optionable material \r\n- materialScale
      : Vector2\r\n- materialOffset : Vector2\r\n- sortingLayerName : string\r\n-
      sortingOrder : int\r\n- meshRenderer : MeshRenderer\r\nMethods:\r\n- Initialize()
      : void\r\n\r\nClass: MaterialManager\r\nNamespace: FunkyCode.Utilities\r\nMethods:\r\n-
      static GetVertexLitCopy() : SmartMaterial\r\n- static GetAdditiveCopy() : SmartMaterial\r\n-
      static GetAlphaCopy() : SmartMaterial\r\n- static GetSpriteCopy() : SmartMaterial\r\n\r\nClass:
      Max2D\r\nNamespace: FunkyCode.Utilities\r\nFields:\r\n- static shaderPath :
      string\r\n- static texCoord : Vector2\r\nMethods:\r\n- static DrawTriangle(float
      x0, float y0, float x1, float y1, float x2, float y2, Vector2 offset, float
      z) : void\r\n- static DrawTriangle(Vector2 vA, Vector2 vB, Vector2 vC, Vector2
      scale, float z) : void\r\n- static DrawTriangle(Vector2 vA, Vector2 vB, Vector2
      vC, Vector2 offset, Vector2 scale, float z) : void\r\n- static DrawQuad(Vector2
      vA, Vector2 vB, Vector2 vC, Vector2 vD, float z) : void\r\n\r\nClass: Mesh2DSubmesh\r\nNamespace:
      FunkyCode.Utilities\r\nFields:\r\n- uv : Vector2[]\r\n- vertices : Vector3[]\r\n\r\nClass:
      Mesh2DMesh\r\nNamespace: FunkyCode.Utilities\r\nFields:\r\n- submeshes : List`1\r\n-
      verticesCount : int\r\nMethods:\r\n- Add(Mesh2DSubmesh m) : void\r\n\r\nClass:
      Max2DMesh\r\nNamespace: FunkyCode.Utilities\r\nMethods:\r\n- static Draw(Mesh
      mesh, Transform transform, Material material) : void\r\n- static Draw(Mesh
      mesh, Material material) : void\r\n- static CreatePolygon(Transform transform,
      Polygon2D polygon, float lineOffset, float lineWidth, bool connectedLine) :
      Mesh\r\n- static CreateLine(Pair2D pair, Vector3 transformScale, float lineWidth,
      float z) : Mesh2DSubmesh\r\n- static Export(Mesh2DMesh trianglesList) : Mesh\r\n\r\nClass:
      SmartMaterial\r\nNamespace: FunkyCode.Utilities\r\nFields:\r\n- material :
      Material\r\nMethods:\r\n- static LoadShader(string path) : Shader\r\n- SetTexture(Texture
      texture) : void\r\n\r\nClass: DelaunayTriangle\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n-
      Points : FixedArray3`1\r\n- Neighbors : FixedArray3`1\r\n- EdgeIsDelaunay :
      FixedBitArray3\r\nProperties:\r\n- EdgeIsConstrained : FixedBitArray3\r\n-
      IsInterior : bool\r\nMethods:\r\n- IndexOf(TriangulationPoint p) : int\r\n-
      IndexCWFrom(TriangulationPoint p) : int\r\n- IndexCCWFrom(TriangulationPoint
      p) : int\r\n- Contains(TriangulationPoint p) : bool\r\n- MarkNeighbor(DelaunayTriangle
      t) : void\r\n- ClearNeighbors() : void\r\n- ClearNeighbor(DelaunayTriangle
      triangle) : void\r\n- Clear() : void\r\n- OppositePoint(DelaunayTriangle t,
      TriangulationPoint p) : TriangulationPoint\r\n- NeighborCWFrom(TriangulationPoint
      point) : DelaunayTriangle\r\n- NeighborCCWFrom(TriangulationPoint point) :
      DelaunayTriangle\r\n- NeighborAcrossFrom(TriangulationPoint point) : DelaunayTriangle\r\n-
      PointCCWFrom(TriangulationPoint point) : TriangulationPoint\r\n- PointCWFrom(TriangulationPoint
      point) : TriangulationPoint\r\n- Legalize(TriangulationPoint oPoint, TriangulationPoint
      nPoint) : void\r\n- ToString() : string\r\n- MarkNeighborEdges() : void\r\n-
      MarkEdge(DelaunayTriangle triangle) : void\r\n- MarkEdge(List`1 tList) : void\r\n-
      MarkConstrainedEdge(int index) : void\r\n- MarkConstrainedEdge(DTSweepConstraint
      edge) : void\r\n- MarkConstrainedEdge(TriangulationPoint p, TriangulationPoint
      q) : void\r\n- Area() : double\r\n- Centroid() : TriangulationPoint\r\n- EdgeIndex(TriangulationPoint
      p1, TriangulationPoint p2) : int\r\n- GetConstrainedEdgeCCW(TriangulationPoint
      p) : bool\r\n- GetConstrainedEdgeCW(TriangulationPoint p) : bool\r\n- GetConstrainedEdgeAcross(TriangulationPoint
      p) : bool\r\n- SetConstrainedEdgeCCW(TriangulationPoint p, bool ce) : void\r\n-
      SetConstrainedEdgeCW(TriangulationPoint p, bool ce) : void\r\n- SetConstrainedEdgeAcross(TriangulationPoint
      p, bool ce) : void\r\n- GetDelaunayEdgeCCW(TriangulationPoint p) : bool\r\n-
      GetDelaunayEdgeCW(TriangulationPoint p) : bool\r\n- GetDelaunayEdgeAcross(TriangulationPoint
      p) : bool\r\n- SetDelaunayEdgeCCW(TriangulationPoint p, bool ce) : void\r\n-
      SetDelaunayEdgeCW(TriangulationPoint p, bool ce) : void\r\n- SetDelaunayEdgeAcross(TriangulationPoint
      p, bool ce) : void\r\n- GetEdge(int idx, DTSweepConstraint& edge) : bool\r\n-
      GetEdgeCCW(TriangulationPoint p, DTSweepConstraint& edge) : bool\r\n- GetEdgeCW(TriangulationPoint
      p, DTSweepConstraint& edge) : bool\r\n- GetEdgeAcross(TriangulationPoint p,
      DTSweepConstraint& edge) : bool\r\n\r\nClass: DTSweep\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nMethods:\r\n-
      static Triangulate(DTSweepContext tcx) : void\r\n\r\nClass: AdvancingFront\r\nNamespace:
      FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n- Head : AdvancingFrontNode\r\n-
      Tail : AdvancingFrontNode\r\nMethods:\r\n- AddNode(AdvancingFrontNode node)
      : void\r\n- RemoveNode(AdvancingFrontNode node) : void\r\n- ToString() : string\r\n-
      LocateNode(TriangulationPoint point) : AdvancingFrontNode\r\n- LocatePoint(TriangulationPoint
      point) : AdvancingFrontNode\r\n\r\nClass: AdvancingFrontNode\r\nNamespace:
      FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n- Next : AdvancingFrontNode\r\n-
      Prev : AdvancingFrontNode\r\n- Value : double\r\n- Point : TriangulationPoint\r\n-
      Triangle : DelaunayTriangle\r\nProperties:\r\n- HasNext : bool\r\n- HasPrev
      : bool\r\n\r\nClass: DTSweepBasin\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n-
      leftNode : AdvancingFrontNode\r\n- bottomNode : AdvancingFrontNode\r\n- rightNode
      : AdvancingFrontNode\r\n- width : double\r\n- leftHighest : bool\r\n\r\nClass:
      DTSweepConstraint : TriangulationConstraint\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\n\r\nClass:
      DTSweepDebugContext : TriangulationDebugContext\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
      PrimaryTriangle : DelaunayTriangle\r\n- SecondaryTriangle : DelaunayTriangle\r\n-
      ActivePoint : TriangulationPoint\r\n- ActiveNode : AdvancingFrontNode\r\n-
      ActiveConstraint : DTSweepConstraint\r\n- IsDebugContext : bool\r\nMethods:\r\n-
      Clear() : void\r\n\r\nClass: DTSweepEdgeEvent\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n-
      ConstrainedEdge : DTSweepConstraint\r\n- Right : bool\r\n\r\nClass: DTSweepPointComparator\r\nNamespace:
      FunkyCode.Utilities.Polygon2DTriangulation\r\nMethods:\r\n- Compare(TriangulationPoint
      p1, TriangulationPoint p2) : int\r\n\r\nClass: PointOnEdgeException : NotImplementedException\r\nNamespace:
      FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n- A : TriangulationPoint\r\n-
      B : TriangulationPoint\r\n- C : TriangulationPoint\r\n\r\nClass: DTSweepContext
      : TriangulationContext\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n-
      Front : AdvancingFront\r\n- Basin : DTSweepBasin\r\n- EdgeEvent : DTSweepEdgeEvent\r\nProperties:\r\n-
      Head : TriangulationPoint\r\n- Tail : TriangulationPoint\r\n- Algorithm : TriangulationAlgorithm\r\n-
      IsDebugEnabled : bool\r\nMethods:\r\n- RemoveFromList(DelaunayTriangle triangle)
      : void\r\n- MeshClean(DelaunayTriangle triangle) : void\r\n- Clear() : void\r\n-
      AddNode(AdvancingFrontNode node) : void\r\n- RemoveNode(AdvancingFrontNode
      node) : void\r\n- LocateNode(TriangulationPoint point) : AdvancingFrontNode\r\n-
      CreateAdvancingFront() : void\r\n- MapTriangleToNodes(DelaunayTriangle t) :
      void\r\n- PrepareTriangulation(ITriangulatable t) : void\r\n- FinalizeTriangulation()
      : void\r\n- NewConstraint(TriangulationPoint a, TriangulationPoint b) : TriangulationConstraint\r\n\r\nClass:
      PolygonUtil\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nMethods:\r\n-
      static CalculateWindingOrder(IList`1 l) : WindingOrderType\r\n- static PolygonsAreSame2D(IList`1
      poly1, IList`1 poly2) : bool\r\n- static PointInPolygon2D(IList`1 polygon,
      Point2D p) : bool\r\n- static PolygonsIntersect2D(IList`1 poly1, Rect2D boundRect1,
      IList`1 poly2, Rect2D boundRect2) : bool\r\n- PolygonContainsPolygon(IList`1
      poly1, Rect2D boundRect1, IList`1 poly2, Rect2D boundRect2) : bool\r\n- static
      PolygonContainsPolygon(IList`1 poly1, Rect2D boundRect1, IList`1 poly2, Rect2D
      boundRect2, bool runIntersectionTest) : bool\r\n- static ClipPolygonToEdge2D(Point2D
      edgeBegin, Point2D edgeEnd, IList`1 poly, List`1& outPoly) : void\r\n- static
      ClipPolygonToPolygon(IList`1 poly, IList`1 clipPoly, List`1& outPoly) : void\r\n-
      static PolygonUnion(Point2DList polygon1, Point2DList polygon2, Point2DList&
      union) : PolyUnionError\r\n- static PolygonIntersect(Point2DList polygon1,
      Point2DList polygon2, Point2DList& intersectOut) : PolyUnionError\r\n- static
      PolygonSubtract(Point2DList polygon1, Point2DList polygon2, Point2DList& subtract)
      : PolyUnionError\r\n- static PolygonSubtractInternal(PolygonOperationContext
      ctx) : void\r\n- static PolygonOperation(PolyOperation operations, Point2DList
      polygon1, Point2DList polygon2, Dictionary`2& results) : PolyUnionError\r\n-
      static PolygonOperation(PolygonOperationContext ctx) : PolyUnionError\r\n-
      static SplitComplexPolygon(Point2DList verts, double epsilon) : List`1\r\n\r\nClass:
      EdgeIntersectInfo\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
      EdgeOne : Edge\r\n- EdgeTwo : Edge\r\n- IntersectionPoint : Point2D\r\n\r\nClass:
      SplitComplexPolygonNode\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
      NumConnected : int\r\n- Position : Point2D\r\n- Item : SplitComplexPolygonNode\r\nMethods:\r\n-
      Equals(Object obj) : bool\r\n- Equals(SplitComplexPolygonNode pn) : bool\r\n-
      GetHashCode() : int\r\n- ToString() : string\r\n- AddConnection(SplitComplexPolygonNode
      toMe) : void\r\n- RemoveConnection(SplitComplexPolygonNode fromMe) : void\r\n-
      ClearConnections() : void\r\n- GetRightestConnection(SplitComplexPolygonNode
      incoming) : SplitComplexPolygonNode\r\n- GetRightestConnection(Point2D incomingDir)
      : SplitComplexPolygonNode\r\n\r\nClass: PolygonOperationContext\r\nNamespace:
      FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n- mOperations : PolyOperation\r\n-
      mOriginalPolygon1 : Point2DList\r\n- mOriginalPolygon2 : Point2DList\r\n- mPoly1
      : Point2DList\r\n- mPoly2 : Point2DList\r\n- mIntersections : List`1\r\n- mStartingIndex
      : int\r\n- mError : PolyUnionError\r\n- mPoly1VectorAngles : List`1\r\n- mPoly2VectorAngles
      : List`1\r\n- mOutput : Dictionary`2\r\nProperties:\r\n- Union : Point2DList\r\n-
      Intersect : Point2DList\r\n- Subtract : Point2DList\r\nMethods:\r\n- Clear()
      : void\r\n- Init(PolyOperation operations, Point2DList polygon1, Point2DList
      polygon2) : bool\r\n- PointInPolygonAngle(Point2D point, Point2DList polygon)
      : bool\r\n- VectorAngle(Point2D p1, Point2D p2) : double\r\n\r\nClass: Contour
      : Point2DList\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
      Item : TriangulationPoint\r\n- Name : string\r\n- Triangles : IList`1\r\n-
      TriangulationMode : TriangulationMode\r\n- FileName : string\r\n- DisplayFlipX
      : bool\r\n- DisplayFlipY : bool\r\n- DisplayRotate : float\r\n- Precision :
      double\r\n- MinX : double\r\n- MaxX : double\r\n- MinY : double\r\n- MaxY :
      double\r\n- Bounds : Rect2D\r\nMethods:\r\n- ToString() : string\r\n- IndexOf(TriangulationPoint
      p) : int\r\n- Add(TriangulationPoint p) : void\r\n- AddRange(IEnumerator`1
      iter, WindingOrderType windingOrder) : void\r\n- AddRange(IList`1 points, WindingOrderType
      windingOrder) : void\r\n- Insert(int idx, TriangulationPoint p) : void\r\n-
      Remove(TriangulationPoint p) : bool\r\n- Contains(TriangulationPoint p) : bool\r\n-
      CopyTo(TriangulationPoint[] array, int arrayIndex) : void\r\n- GetNumHoles(bool
      parentIsHole) : int\r\n- GetNumHoles() : int\r\n- GetHole(int idx) : Contour\r\n-
      GetActualHoles(bool parentIsHole, List`1& holes) : void\r\n- GetHoleEnumerator()
      : Enumerator\r\n- InitializeHoles(ConstrainedPointSet cps) : void\r\n- static
      InitializeHoles(List`1 holes, ITriangulatable parent, ConstrainedPointSet cps)
      : void\r\n- Prepare(TriangulationContext tcx) : void\r\n- AddTriangle(DelaunayTriangle
      t) : void\r\n- AddTriangles(IEnumerable`1 list) : void\r\n- ClearTriangles()
      : void\r\n- FindPointInContour() : Point2D\r\n- IsPointInsideContour(Point2D
      p) : bool\r\n\r\nClass: Polygon : Point2DList\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
      Points : IList`1\r\n- Triangles : IList`1\r\n- TriangulationMode : TriangulationMode\r\n-
      FileName : string\r\n- DisplayFlipX : bool\r\n- DisplayFlipY : bool\r\n- DisplayRotate
      : float\r\n- Precision : double\r\n- MinX : double\r\n- MaxX : double\r\n-
      MinY : double\r\n- MaxY : double\r\n- Bounds : Rect2D\r\n- Item : TriangulationPoint\r\n-
      Holes : IList`1\r\nMethods:\r\n- IndexOf(TriangulationPoint p) : int\r\n- Add(Point2D
      p) : void\r\n- Add(TriangulationPoint p) : void\r\n- Add(PolygonPoint p) :
      void\r\n- AddRange(IList`1 points, WindingOrderType windingOrder) : void\r\n-
      AddRange(IList`1 points, WindingOrderType windingOrder) : void\r\n- Insert(int
      idx, TriangulationPoint p) : void\r\n- Remove(TriangulationPoint p) : bool\r\n-
      RemovePoint(PolygonPoint p) : void\r\n- Contains(TriangulationPoint p) : bool\r\n-
      CopyTo(TriangulationPoint[] array, int arrayIndex) : void\r\n- AddSteinerPoint(TriangulationPoint
      point) : void\r\n- AddSteinerPoints(List`1 points) : void\r\n- ClearSteinerPoints()
      : void\r\n- AddHole(Polygon poly) : void\r\n- AddTriangle(DelaunayTriangle
      t) : void\r\n- AddTriangles(IEnumerable`1 list) : void\r\n- ClearTriangles()
      : void\r\n- IsPointInside(TriangulationPoint p) : bool\r\n- Prepare(TriangulationContext
      tcx) : void\r\n\r\nClass: PolygonPoint : TriangulationPoint\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
      Next : PolygonPoint\r\n- Previous : PolygonPoint\r\nMethods:\r\n- static ToBasePoint(PolygonPoint
      p) : Point2D\r\n- static ToTriangulationPoint(PolygonPoint p) : TriangulationPoint\r\n\r\nClass:
      PolygonSet\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
      Polygons : IEnumerable`1\r\nMethods:\r\n- Add(Polygon p) : void\r\n\r\nInterface:
      ITriangulatable\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
      Triangles : IList`1\r\n- TriangulationMode : TriangulationMode\r\n- FileName
      : string\r\n- DisplayFlipX : bool\r\n- DisplayFlipY : bool\r\n- DisplayRotate
      : float\r\n- Precision : double\r\n- MinX : double\r\n- MaxX : double\r\n-
      MinY : double\r\n- MaxY : double\r\n- Bounds : Rect2D\r\nMethods:\r\n- Prepare(TriangulationContext
      tcx) : void\r\n- AddTriangle(DelaunayTriangle t) : void\r\n- AddTriangles(IEnumerable`1
      list) : void\r\n- ClearTriangles() : void\r\n\r\nClass: Edge\r\nNamespace:
      FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n- EdgeStart :
      Point2D\r\n- EdgeEnd : Point2D\r\n\r\nClass: TriangulationConstraint : Edge\r\nNamespace:
      FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n- P : TriangulationPoint\r\n-
      Q : TriangulationPoint\r\n- ConstraintCode : UInt32\r\nMethods:\r\n- ToString()
      : string\r\n- CalculateContraintCode() : void\r\n- static CalculateContraintCode(TriangulationPoint
      p, TriangulationPoint q) : UInt32\r\n\r\nClass: TriangulationContext\r\nNamespace:
      FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n- Triangles : List`1\r\n-
      Points : List`1\r\nProperties:\r\n- DebugContext : TriangulationDebugContext\r\n-
      TriangulationMode : TriangulationMode\r\n- Triangulatable : ITriangulatable\r\n-
      StepCount : int\r\n- Algorithm : TriangulationAlgorithm\r\n- IsDebugEnabled
      : bool\r\n- DTDebugContext : DTSweepDebugContext\r\nMethods:\r\n- Done() :
      void\r\n- PrepareTriangulation(ITriangulatable t) : void\r\n- NewConstraint(TriangulationPoint
      a, TriangulationPoint b) : TriangulationConstraint\r\n- Update(string message)
      : void\r\n- Clear() : void\r\n\r\nClass: TriangulationDebugContext\r\nNamespace:
      FunkyCode.Utilities.Polygon2DTriangulation\r\nMethods:\r\n- Clear() : void\r\n\r\nClass:
      TriangulationPoint : Point2D\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n-
      static kVertexCodeDefaultPrecision : double\r\nProperties:\r\n- X : double\r\n-
      Y : double\r\n- VertexCode : UInt32\r\n- Edges : List`1\r\n- HasEdges : bool\r\nMethods:\r\n-
      ToString() : string\r\n- GetHashCode() : int\r\n- Equals(Object obj) : bool\r\n-
      Set(double x, double y) : void\r\n- static CreateVertexCode(double x, double
      y, double precision) : UInt32\r\n- AddEdge(DTSweepConstraint e) : void\r\n-
      HasEdge(TriangulationPoint p) : bool\r\n- GetEdge(TriangulationPoint p, DTSweepConstraint&
      edge) : bool\r\n- static ToPoint2D(TriangulationPoint p) : Point2D\r\n\r\nClass:
      TriangulationPointEnumerator\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
      Current : TriangulationPoint\r\nMethods:\r\n- MoveNext() : bool\r\n- Reset()
      : void\r\n\r\nClass: TriangulationPointList : Point2DList\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\n\r\nClass:
      TriangulationUtil\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nMethods:\r\n-
      static SmartIncircle(Point2D pa, Point2D pb, Point2D pc, Point2D pd) : bool\r\n-
      static InScanArea(Point2D pa, Point2D pb, Point2D pc, Point2D pd) : bool\r\n-
      static Orient2d(Point2D pa, Point2D pb, Point2D pc) : Orientation\r\n- static
      PointInBoundingBox(double xmin, double xmax, double ymin, double ymax, Point2D
      p) : bool\r\n- static PointOnLineSegment2D(Point2D lineStart, Point2D lineEnd,
      Point2D p, double epsilon) : bool\r\n- static PointOnLineSegment2D(double x1,
      double y1, double x2, double y2, double x, double y, double epsilon) : bool\r\n-
      static RectsIntersect(Rect2D r1, Rect2D r2) : bool\r\n- static LinesIntersect2D(Point2D
      ptStart0, Point2D ptEnd0, Point2D ptStart1, Point2D ptEnd1, bool firstIsSegment,
      bool secondIsSegment, bool coincidentEndPointCollisions, Point2D& pIntersectionPt,
      double epsilon) : bool\r\n- static LinesIntersect2D(Point2D ptStart0, Point2D
      ptEnd0, Point2D ptStart1, Point2D ptEnd1, Point2D& pIntersectionPt, double
      epsilon) : bool\r\n- static LI2DDotProduct(Point2D v0, Point2D v1) : double\r\n-
      static RaysIntersect2D(Point2D ptRayOrigin0, Point2D ptRayVector0, Point2D
      ptRayOrigin1, Point2D ptRayVector1, Point2D& ptIntersection) : bool\r\n\r\nClass:
      PolygonGenerator\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nMethods:\r\n-
      static RandomCircleSweep(double scale, int vertexCount) : Polygon\r\n- static
      RandomCircleSweep2(double scale, int vertexCount) : Polygon\r\n\r\nClass: PointGenerator\r\nNamespace:
      FunkyCode.Utilities.Polygon2DTriangulation\r\nMethods:\r\n- static UniformDistribution(int
      n, double scale) : List`1\r\n- static UniformGrid(int n, double scale) : List`1\r\n\r\nClass:
      PointSet : Point2DList\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
      Points : IList`1\r\n- Triangles : IList`1\r\n- FileName : string\r\n- DisplayFlipX
      : bool\r\n- DisplayFlipY : bool\r\n- DisplayRotate : float\r\n- Precision :
      double\r\n- MinX : double\r\n- MaxX : double\r\n- MinY : double\r\n- MaxY :
      double\r\n- Bounds : Rect2D\r\n- TriangulationMode : TriangulationMode\r\n-
      Item : TriangulationPoint\r\nMethods:\r\n- IndexOf(TriangulationPoint p) :
      int\r\n- Add(Point2D p) : void\r\n- Add(TriangulationPoint p) : void\r\n- AddRange(IEnumerator`1
      iter, WindingOrderType windingOrder) : void\r\n- AddRange(List`1 points) :
      bool\r\n- TryGetPoint(double x, double y, TriangulationPoint& p) : bool\r\n-
      Insert(int idx, TriangulationPoint item) : void\r\n- Remove(Point2D p) : bool\r\n-
      Remove(TriangulationPoint p) : bool\r\n- RemoveAt(int idx) : void\r\n- Contains(TriangulationPoint
      p) : bool\r\n- CopyTo(TriangulationPoint[] array, int arrayIndex) : void\r\n-
      AddTriangle(DelaunayTriangle t) : void\r\n- AddTriangles(IEnumerable`1 list)
      : void\r\n- ClearTriangles() : void\r\n- Initialize() : bool\r\n- Prepare(TriangulationContext
      tcx) : void\r\n\r\nClass: ConstrainedPointSet : PointSet\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
      TriangulationMode : TriangulationMode\r\nMethods:\r\n- Add(Point2D p) : void\r\n-
      Add(TriangulationPoint p) : void\r\n- AddRange(List`1 points) : bool\r\n- AddHole(List`1
      points, string name) : bool\r\n- AddConstraints(List`1 constraints) : bool\r\n-
      AddConstraint(TriangulationConstraint tc) : bool\r\n- TryGetConstraint(UInt32
      constraintCode, TriangulationConstraint& tc) : bool\r\n- GetNumConstraints()
      : int\r\n- GetConstraintEnumerator() : Enumerator\r\n- GetNumHoles() : int\r\n-
      GetHole(int idx) : Contour\r\n- GetActualHoles(List`1& holes) : int\r\n- Initialize()
      : bool\r\n- Prepare(TriangulationContext tcx) : void\r\n- AddTriangle(DelaunayTriangle
      t) : void\r\n\r\nStruct: FixedBitArray3 : ValueType\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n-
      _0 : bool\r\n- _1 : bool\r\n- _2 : bool\r\nProperties:\r\n- Item : bool\r\nMethods:\r\n-
      Contains(bool value) : bool\r\n- IndexOf(bool value) : int\r\n- Clear() : void\r\n-
      Clear(bool value) : void\r\n- GetEnumerator() : IEnumerator`1\r\n\r\nClass:
      MathUtil\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n-
      static EPSILON : double\r\nMethods:\r\n- static AreValuesEqual(double val1,
      double val2) : bool\r\n- static AreValuesEqual(double val1, double val2, double
      tolerance) : bool\r\n- static IsValueBetween(double val, double min, double
      max, double tolerance) : bool\r\n- static RoundWithPrecision(double f, double
      precision) : double\r\n- static Clamp(double a, double low, double high) :
      double\r\n- static Swap(T& a, T& b) : void\r\n- static Jenkins32Hash(Byte[]
      data, UInt32 nInitialValue) : UInt32\r\n\r\nClass: Point2D\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
      X : double\r\n- Y : double\r\n- Xf : float\r\n- Yf : float\r\nMethods:\r\n-
      ToString() : string\r\n- GetHashCode() : int\r\n- Equals(Object obj) : bool\r\n-
      Equals(Point2D p) : bool\r\n- Equals(Point2D p, double epsilon) : bool\r\n-
      CompareTo(Point2D other) : int\r\n- Set(double x, double y) : void\r\n- Set(Point2D
      p) : void\r\n- Add(Point2D p) : void\r\n- Add(double scalar) : void\r\n- Subtract(Point2D
      p) : void\r\n- Subtract(double scalar) : void\r\n- Multiply(Point2D p) : void\r\n-
      Multiply(double scalar) : void\r\n- Divide(Point2D p) : void\r\n- Divide(double
      scalar) : void\r\n- Negate() : void\r\n- Magnitude() : double\r\n- MagnitudeSquared()
      : double\r\n- MagnitudeReciprocal() : double\r\n- Normalize() : void\r\n- Dot(Point2D
      p) : double\r\n- Cross(Point2D p) : double\r\n- Clamp(Point2D low, Point2D
      high) : void\r\n- Abs() : void\r\n- Reciprocal() : void\r\n- Translate(Point2D
      vector) : void\r\n- Translate(double x, double y) : void\r\n- Scale(Point2D
      vector) : void\r\n- Scale(double scalar) : void\r\n- Scale(double x, double
      y) : void\r\n- Rotate(double radians) : void\r\n- RotateDegrees(double degrees)
      : void\r\n- static Dot(Point2D lhs, Point2D rhs) : double\r\n- static Cross(Point2D
      lhs, Point2D rhs) : double\r\n- static Clamp(Point2D a, Point2D low, Point2D
      high) : Point2D\r\n- static Min(Point2D a, Point2D b) : Point2D\r\n- static
      Max(Point2D a, Point2D b) : Point2D\r\n- static Abs(Point2D a) : Point2D\r\n-
      static Reciprocal(Point2D a) : Point2D\r\n- static Perpendicular(Point2D lhs,
      double scalar) : Point2D\r\n- static Perpendicular(double scalar, Point2D rhs)
      : Point2D\r\n\r\nClass: Point2DEnumerator\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
      Current : Point2D\r\nMethods:\r\n- MoveNext() : bool\r\n- Reset() : void\r\n\r\nClass:
      Point2DList\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n-
      static kMaxPolygonVertices : int\r\n- static kLinearSlop : double\r\n- static
      kAngularSlop : double\r\nProperties:\r\n- BoundingBox : Rect2D\r\n- WindingOrder
      : WindingOrderType\r\n- Epsilon : double\r\n- Item : Point2D\r\n- Count : int\r\n-
      IsReadOnly : bool\r\nMethods:\r\n- ToString() : string\r\n- Clear() : void\r\n-
      IndexOf(Point2D p) : int\r\n- Add(Point2D p) : void\r\n- AddRange(Point2DList
      l) : void\r\n- AddRange(IEnumerator`1 iter, WindingOrderType windingOrder)
      : void\r\n- Insert(int idx, Point2D item) : void\r\n- Remove(Point2D p) : bool\r\n-
      RemoveAt(int idx) : void\r\n- RemoveRange(int idxStart, int count) : void\r\n-
      Contains(Point2D p) : bool\r\n- CopyTo(Point2D[] array, int arrayIndex) : void\r\n-
      CalculateBounds() : void\r\n- CalculateEpsilon() : double\r\n- CalculateWindingOrder()
      : WindingOrderType\r\n- NextIndex(int index) : int\r\n- PreviousIndex(int index)
      : int\r\n- GetSignedArea() : double\r\n- GetArea() : double\r\n- GetCentroid()
      : Point2D\r\n- Translate(Point2D vector) : void\r\n- Scale(Point2D value) :
      void\r\n- Rotate(double radians) : void\r\n- IsDegenerate() : bool\r\n- IsConvex()
      : bool\r\n- IsSimple() : bool\r\n- CheckPolygon() : PolygonError\r\n- static
      GetErrorString(PolygonError error) : string\r\n- RemoveDuplicateNeighborPoints()
      : void\r\n- Simplify() : void\r\n- Simplify(double bias) : void\r\n- MergeParallelEdges(double
      tolerance) : void\r\n- ProjectToAxis(Point2D axis, Double& min, Double& max)
      : void\r\n\r\nClass: Rect2D\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
      MinX : double\r\n- MaxX : double\r\n- MinY : double\r\n- MaxY : double\r\n-
      Left : double\r\n- Right : double\r\n- Top : double\r\n- Bottom : double\r\n-
      Width : double\r\n- Height : double\r\n- Empty : bool\r\nMethods:\r\n- GetHashCode()
      : int\r\n- Equals(Object obj) : bool\r\n- Equals(Rect2D r) : bool\r\n- Equals(Rect2D
      r, double epsilon) : bool\r\n- Clear() : void\r\n- Set(double xmin, double
      xmax, double ymin, double ymax) : void\r\n- Set(Rect2D b) : void\r\n- SetSize(double
      w, double h) : void\r\n- Contains(double x, double y) : bool\r\n- Contains(Point2D
      p) : bool\r\n- Contains(Rect2D r) : bool\r\n- ContainsInclusive(double x, double
      y) : bool\r\n- ContainsInclusive(double x, double y, double epsilon) : bool\r\n-
      ContainsInclusive(Point2D p) : bool\r\n- ContainsInclusive(Point2D p, double
      epsilon) : bool\r\n- ContainsInclusive(Rect2D r) : bool\r\n- ContainsInclusive(Rect2D
      r, double epsilon) : bool\r\n- Intersects(Rect2D r) : bool\r\n- GetCenter()
      : Point2D\r\n- IsNormalized() : bool\r\n- Normalize() : void\r\n- AddPoint(Point2D
      p) : void\r\n- Inflate(double w, double h) : void\r\n- Inflate(double left,
      double top, double right, double bottom) : void\r\n- Offset(double w, double
      h) : void\r\n- SetPosition(double x, double y) : void\r\n- Intersection(Rect2D
      r1, Rect2D r2) : bool\r\n- Union(Rect2D r1, Rect2D r2) : void\r\n\r\nClass:
      TriangulationWrapper\r\nNamespace: FunkyCode.Utilities\r\nMethods:\r\n- static
      CreateMesh(Polygon polygon) : Mesh\r\n- static CreateTriangle(Polygon polygon)
      : Mesh\r\n- static CreateMesh(Vector2[] vertices, Int32[] indices, Vector2[]
      uv) : Mesh\r\n\r\nClass: UnityDefaultTriangulator\r\nNamespace: FunkyCode.Utilities\r\nMethods:\r\n-
      static Create(Vector2[] vertices2D) : Mesh\r\n- Triangulate() : Int32[]\r\n\r\nClass:
      PolygonTriangulator2D : MonoBehaviour\r\nNamespace: FunkyCode.Utilities\r\nMethods:\r\n-
      static TriangulateSimple(Polygon2D polygon, Vector2 UVScale, Vector2 UVOffset)
      : Mesh\r\n- static Triangulate(Polygon2D polygon, Vector2 UVScale, Vector2
      UVOffset, Triangulation triangulation) : Mesh\r\n- static TriangulateAdvanced(Polygon2D
      polygon, Vector2 UVScale, Vector2 UVOffset) : Mesh\r\n\r\nClass: PolygonTriangulator2
      : MonoBehaviour\r\nNamespace: FunkyCode.Utilities\r\nMethods:\r\n- static TriangulateSimple(Polygon2
      polygon, Vector2 UVScale, Vector2 UVOffset) : Mesh\r\n- static Triangulate(Polygon2
      polygon, Vector2 UVScale, Vector2 UVOffset, Triangulation triangulation) :
      Mesh\r\n- static TriangulateAdvanced(Polygon2 polygon, Vector2 UVScale, Vector2
      UVOffset) : Mesh\r\n\r\nClass: UICanvasScale : MonoBehaviour\r\nNamespace:
      FunkyCode.Utilities\r\nFields:\r\n- screenRatioScale : bool\r\n- rect : Rect\r\n\r\nClass:
      UITextScale : MonoBehaviour\r\nNamespace: FunkyCode.Utilities\r\nFields:\r\n-
      ratio : float\r\n- rect : Rect\r\n\r\nClass: Polygon2\r\nNamespace: FunkyCode.Utilities\r\nFields:\r\n-
      points : Vector2[]\r\nMethods:\r\n- GetRect() : Rect\r\n- Copy() : Polygon2\r\n-
      ToWorldSpace(Transform transform) : Polygon2\r\n- ToScaleSelf(Vector2 scale,
      Nullable`1 center) : void\r\n- ToRotationSelf(float rotation, Nullable`1 center)
      : void\r\n- ToOffsetSelf(Vector2 pos) : void\r\n- IsClockwise() : bool\r\n-
      Normalize() : void\r\n- static CreateRect(Vector2 size) : Polygon2\r\n- static
      CreateIsometric(Vector2 size) : Polygon2\r\n- static CreateHexagon(Vector2
      size) : Polygon2\r\n- CreateMesh(GameObject gameObject, Vector2 UVScale, Vector2
      UVOffset, Triangulation triangulation) : Mesh\r\n- CreateMesh(Vector2 UVScale,
      Vector2 UVOffset, Triangulation triangulation) : Mesh\r\n- ToWorldSpaceSelfUNIVERSAL(Transform
      transform) : void\r\n- ToWorldSpaceSelfXY(Transform transform) : void\r\n-
      ToWorldSpaceSelfFlipped(Transform transform) : void\r\n- ToWorldSpaceSelfXZ(Transform
      transform) : void\r\n- ToWorldSpaceSelfXZFlipped(Transform transform) : void\r\n-
      PointInPoly(Vector2 point) : bool\r\n\r\nClass: Polygon2Collider2D\r\nNamespace:
      FunkyCode.Utilities\r\nFields:\r\n- static defaultCircleVerticesCount : int\r\nMethods:\r\n-
      static CreateFromCompositeCollider(CompositeCollider2D compositeCollider) :
      List`1\r\n- static CreateFromEdgeCollider(EdgeCollider2D edgeCollider) : Polygon2\r\n-
      static CreateFromCircleCollider(CircleCollider2D circleCollider, int pointsCount)
      : Polygon2\r\n- static CreateFromBoxCollider(BoxCollider2D boxCollider) : Polygon2\r\n-
      static CreateFromCapsuleCollider(CapsuleCollider2D capsuleCollider, int pointsCount)
      : Polygon2\r\n\r\nClass: Polygon2Collider3D\r\nNamespace: FunkyCode.Utilities\r\nFields:\r\n-
      static defaultCircleVerticesCount : int\r\nMethods:\r\n- static CreateFromBoxCollider(BoxCollider
      boxCollider) : Polygon2\r\n- static CreateFromMeshCollider(MeshCollider meshCollider)
      : List`1\r\n- static CreateFromSphereCollider(SphereCollider sphereCollider,
      int pointsCount) : Polygon2\r\n- static CreateFromCapsuleCollider(CapsuleCollider
      capsuleCollider, int pointsCount) : Polygon2\r\n\r\nClass: Polygon2Helper\r\nNamespace:
      FunkyCode.Utilities\r\nMethods:\r\n- static GetAxis(Polygon2 polygon, float
      rotation) : Pair2\r\n- static GetRect(List`1 polygons) : Rect\r\n- static GetDayRect(List`1
      polygons, float height) : Rect\r\n- static GetIsoRect(List`1 polygons) : Rect\r\n\r\nClass:
      Polygon2ListCollider2D : Polygon2Collider2D\r\nNamespace: FunkyCode.Utilities\r\nMethods:\r\n-
      static CreateFromGameObject(GameObject gameObject) : List`1\r\n- static CreateFromPolygonColliderToWorldSpace(PolygonCollider2D
      collider) : List`1\r\n- static CreateFromPolygonColliderToLocalSpace(PolygonCollider2D
      collider) : List`1\r\n\r\nClass: Polygon2ListCollider3D : Polygon2Collider3D\r\nNamespace:
      FunkyCode.Utilities\r\nMethods:\r\n- static CreateFromGameObject(GameObject
      gameObject) : List`1\r\n\r\nClass: Vector2Extensions\r\nNamespace: FunkyCode.Utilities\r\nMethods:\r\n-
      static Atan2(Vector2 a) : float\r\n- static Atan2(Vector2 a, Vector2 b) : float\r\n-
      static Push(Vector2 a, float direction, float distance) : Vector2\r\n- static
      RotToVec(Vector2 a, float rotation, float distance) : Vector2\r\n- static RotToVec(Vector2
      a, float rotation) : Vector2\r\n- static TransformToWorldXY(Vector2 a, Transform
      transform) : Vector2\r\n- static TransformToWorldXYFlipped(Vector2 a, Transform
      transform) : Vector2\r\n- static TransformToWorldXZFlipped(Vector2 a, Transform
      transform) : Vector2\r\n- static TransformToWorldXZ(Vector2 a, Transform transform)
      : Vector2\r\n\r\nClass: DoublePair2\r\nNamespace: FunkyCode.Utilities\r\nFields:\r\n-
      A : Vector2\r\n- B : Vector2\r\n- C : Vector2\r\nMethods:\r\n- static GetList(Vector2[]
      list, bool connect) : List`1\r\n- static GetListCopy(List`1 list, bool connect)
      : List`1\r\n\r\nClass: Math2D\r\nNamespace: FunkyCode.Utilities\r\nMethods:\r\n-
      static Range(float value, float min, float max) : float\r\n- static NormalizeRotation(float
      rotation) : float\r\n- static ClosestPointOnLine(Vector2 vA, Vector2 vB) :
      Vector2\r\n- static ClosestPointOnLine(Vector2 vPoint, Vector2 vA, Vector2
      vB) : Vector2\r\n- static GetPitchYawRollRad(Quaternion rotation) : Vector3\r\n-
      static GetPitchYawRollDeg(Quaternion rotation) : Vector3\r\n- static GetBounds(List`1
      pointsList) : Rect\r\n- static GetBounds(Pair2D pair) : Rect\r\n- static PolyInPoly(Polygon2D
      polyA, Polygon2D polyB) : bool\r\n- static PolyCollidePoly(Polygon2D polyA,
      Polygon2D polyB) : bool\r\n- static PolyIntersectPoly(Polygon2D polyA, Polygon2D
      polyB) : bool\r\n- static SliceIntersectPoly(List`1 slice, Polygon2D poly)
      : bool\r\n- static SliceIntersectSlice(List`1 sliceA, List`1 sliceB) : bool\r\n-
      static LineIntersectPoly(Pair2D line, Polygon2D poly) : bool\r\n- static LineIntersectLine(Pair2D
      lineA, Pair2D lineB) : bool\r\n- static PolygonIntersectItself(List`1 points)
      : bool\r\n- static SliceIntersectItself(List`1 slice) : bool\r\n- static GetPointLineIntersectLine(Pair2D
      lineA, Pair2D lineB) : Vector2D\r\n- static GetPointLineIntersectLine2(Pair2D
      lineA, Pair2D lineB) : Nullable`1\r\n- static GetPointLineIntersectLine3(Vector2
      a_a, Vector2 a_b, Vector2 b_a, Vector2 b_b) : Nullable`1\r\n- static GetPointLineIntersectLine4(Vector2
      a_a, Vector2 a_b, Vector2 b_a, Vector2 b_b) : bool\r\n- static PointInPoly(Vector2
      point, Polygon2 poly) : bool\r\n- static GetListLineIntersectPoly(Pair2D line,
      Polygon2D poly) : List`1\r\n- static GetListLineIntersectSlice(Pair2D pair,
      List`1 slice) : List`1\r\n- static PolygonIntersectCircle(Polygon2D poly, Vector2D
      circle, float radius) : bool\r\n- static LineIntersectCircle(Pair2D line, Vector2D
      circle, float radius) : bool\r\n- static IsAPointLeftOfVectorOrOnTheLine(Vector2
      a, Vector2 b, Vector2 p) : float\r\n- static PointInPoly(Vector2D point, Polygon2D
      poly) : bool\r\n\r\nClass: Mathd\r\nNamespace: FunkyCode.Utilities\r\nMethods:\r\n-
      static Distance(double x1, double y1, double x2, double y2) : double\r\n\r\nClass:
      Pair2D\r\nNamespace: FunkyCode.Utilities\r\nFields:\r\n- A : Vector2D - First
      vector of a pair \r\n- B : Vector2D - Second vector of a pair \r\nMethods:\r\n-
      static GetList(List`1 list, bool connect) : List`1\r\n- static GetList(Vector2[]
      list, bool connect) : List`1\r\n- static Zero() : Pair2D\r\n\r\nStruct: Pair2
      : ValueType\r\nNamespace: FunkyCode.Utilities\r\nDescription: 2D points list
      connected by pairs \r\nFields:\r\n- A : Vector2 - First vector of a pair \r\n-
      B : Vector2 - Second vector of a pair \r\nMethods:\r\n- static Zero() : Pair2\r\n\r\nClass:
      Polygon2D\r\nNamespace: FunkyCode.Utilities\r\nDescription: Does not include
      holes??? \r\nFields:\r\n- pointsList : List`1\r\n- holesList : List`1\r\nMethods:\r\n-
      AddPoint(Vector2D point) : void\r\n- AddPoint(Vector2 point) : void\r\n- AddPoint(float
      pointX, float pointY) : void\r\n- AddPoints(List`1 points) : void\r\n- AddHole(Polygon2D
      poly) : void\r\n- PointInPoly(Vector2D point) : bool\r\n- PointInPoly(Vector2
      point) : bool\r\n- PolyInPoly(Polygon2D poly) : bool\r\n- PointInHole(Vector2D
      point) : Polygon2D\r\n- IsClockwise() : bool\r\n- Normalize() : void\r\n- GetArea()
      : double\r\n- GetRect() : Rect\r\n- LineIntersectHoles(Pair2D pair) : List`1\r\n-
      SliceIntersectPoly(List`1 slice) : bool\r\n- SliceIntersectHoles(List`1 slice)
      : List`1\r\n- GetListLineIntersectPoly(Pair2D line) : List`1\r\n- static CreateRect(Vector2
      size) : Polygon2D\r\n- static CreateIsometric(Vector2 size) : Polygon2D\r\n-
      static CreateHexagon(Vector2 size) : Polygon2D\r\n- CreateMesh(GameObject gameObject,
      Vector2 UVScale, Vector2 UVOffset, Triangulation triangulation) : Mesh\r\n-
      CreateMesh(Vector2 UVScale, Vector2 UVOffset, Triangulation triangulation)
      : Mesh\r\n- CreatePolygonCollider(GameObject gameObject) : PolygonCollider2D\r\n-
      CreateEdgeCollider(GameObject gameObject) : EdgeCollider2D\r\n- static SpriteToMesh(GameObject
      gameObject, VirtualSpriteRenderer spriteRenderer, Triangulation triangulation)
      : void\r\n- Copy() : Polygon2D\r\n- ToLocalSpace(Transform transform) : Polygon2D\r\n-
      ToWorldSpace(Transform transform) : Polygon2D\r\n- ToOffset(Vector2D pos) :
      Polygon2D\r\n- ToScale(Vector2 scale, Vector2D center) : Polygon2D\r\n- ToRotation(float
      rotation, Vector2D center) : Polygon2D\r\n- ToScaleItself(Vector2 scale, Vector2D
      center) : void\r\n- ToRotationItself(float rotation, Vector2D center) : void\r\n-
      ToOffsetItself(Vector2 pos) : void\r\n- ToWorldSpaceItselfUNIVERSAL(Transform
      transform) : void\r\n- ToWorldSpaceItself(Transform transform) : void\r\n-
      ToWorldSpaceItselfFlipped(Transform transform) : void\r\n- ToWorldSpaceItselfXZ(Transform
      transform) : void\r\n- ToWorldSpaceItselfXZFlipped(Transform transform) : void\r\n\r\nClass:
      Polygon2DCollider2D\r\nNamespace: FunkyCode.Utilities\r\nFields:\r\n- static
      defaultCircleVerticesCount : int\r\nMethods:\r\n- static CreateFromCompositeCollider(CompositeCollider2D
      compositeCollider) : List`1\r\n- static CreateFromEdgeCollider(EdgeCollider2D
      edgeCollider) : Polygon2D\r\n- static CreateFromCircleCollider(CircleCollider2D
      circleCollider, int pointsCount) : Polygon2D\r\n- static CreateFromBoxCollider(BoxCollider2D
      boxCollider) : Polygon2D\r\n- static CreateFromCapsuleCollider(CapsuleCollider2D
      capsuleCollider, int pointsCount) : Polygon2D\r\n\r\nClass: Polygon2DCollider3D\r\nNamespace:
      FunkyCode.Utilities\r\nFields:\r\n- static defaultCircleVerticesCount : int\r\nMethods:\r\n-
      static CreateFromBoxCollider(BoxCollider boxCollider) : Polygon2D\r\n- static
      CreateFromMeshCollider(MeshCollider meshCollider) : List`1\r\n- static CreateFromSphereCollider(SphereCollider
      sphereCollider, int pointsCount) : Polygon2D\r\n- static CreateFromCapsuleCollider(CapsuleCollider
      capsuleCollider, int pointsCount) : Polygon2D\r\n\r\nClass: Polygon2DHelper\r\nNamespace:
      FunkyCode.Utilities\r\nMethods:\r\n- static CreateMesh(List`1 polygons, GameObject
      gameObject, Vector2 UVScale, Vector2 UVOffset, Triangulation triangulation)
      : Mesh\r\n- static GetRect(List`1 polygons) : Rect\r\n\r\nClass: Polygon2DListCollider2D
      : Polygon2DCollider2D\r\nNamespace: FunkyCode.Utilities\r\nMethods:\r\n- static
      CreateFromPolygonColliderToWorldSpace(PolygonCollider2D collider) : List`1\r\n-
      static CreateFromPolygonColliderToLocalSpace(PolygonCollider2D collider) :
      List`1\r\n- static CreateFromGameObject(GameObject gameObject) : List`1\r\n\r\nClass:
      Polygon2DListCollider3D : Polygon2DCollider3D\r\nNamespace: FunkyCode.Utilities\r\nMethods:\r\n-
      static CreateFromGameObject(GameObject gameObject) : List`1\r\n\r\nClass: Vector2D\r\nNamespace:
      FunkyCode.Utilities\r\nFields:\r\n- x : double\r\n- y : double\r\nMethods:\r\n-
      TransformToWorldXY(Transform transform) : void\r\n- TransformToWorldXYFlipped(Transform
      transform) : void\r\n- TransformToWorldXZFlipped(Transform transform) : void\r\n-
      TransformToWorldXZ(Transform transform) : void\r\n- ToString() : string\r\n-
      static Zero() : Vector2D\r\n- Copy() : Vector2D\r\n- Set(double px, double
      py) : void\r\n- Set(Vector2D point) : void\r\n- Push(double rot, double distance)
      : void\r\n- Push(double rot, double distance, Vector2 scale) : void\r\n- Inc(double
      px, double py) : void\r\n- Dec(double px, double py) : void\r\n- Inc(Vector2D
      point) : void\r\n- Dec(Vector2D point) : void\r\n- RotToVecItself(double rotation)
      : void\r\n- static Distance(Vector2D a, Vector2D b) : double\r\n- static Atan2(Vector2D
      a, Vector2D b) : double\r\n- static RotToVec(double rotation) : Vector2D\r\n-
      static VecToRot(Vector2 vec) : double\r\n- ToVector2() : Vector2\r\n- ToVector3()
      : Vector3\r\n\r\nClass: Vector2DList\r\nNamespace: FunkyCode.Utilities\r\nMethods:\r\n-
      static ToWorldSpace(Transform transform, List`1 pointsList) : List`1\r\n- static
      GetListSortedToPoint(List`1 pointsList, Vector2D point) : List`1\r\n- static
      GetListStartingPoint(List`1 pointsList, Vector2D point) : List`1\r\n- static
      GetListStartingIntersectLine(List`1 pointsList, Pair2D line) : List`1\r\n-
      static GetListStartingIntersectSlice(List`1 pointsList, List`1 slice) : List`1\r\n\r\nClass:
      DestroyTimer : MonoBehaviour\r\nNamespace: FunkyCode.Utilities\r\n\r\nClass:
      TimerHelper\r\nNamespace: FunkyCode.Utilities\r\nFields:\r\n- time : float\r\nMethods:\r\n-
      Reset() : void\r\n- static Create() : TimerHelper\r\n- GetMillisecs() : float\r\n-
      Get() : float\r\n\r\nClass: VirtualSpriteRenderer\r\nNamespace: FunkyCode.Utilities\r\nFields:\r\n-
      sprite : Sprite\r\n- color : Color\r\n- material : Material\r\n- flipX : bool\r\n-
      flipY : bool\r\n- drawMode : SpriteDrawMode\r\n- tileMode : SpriteTileMode\r\n-
      size : Vector2\r\nMethods:\r\n- Set(SpriteRenderer spriteRenderer) : void\r\n\r\nClass:
      Setup\r\nNamespace: Merkab\r\nMethods:\r\n- static CreateDefaultFolders() :
      void\r\n- static ImportMyFavoriteAssets() : void\r\n- static ImportBasics()
      : void\r\n- static InstallUnityAINavigation() : void\r\n- static InstallOpenSource()
      : void\r\n\r\nClass: Assets\r\nNamespace: Merkab\r\nMethods:\r\n- static ImportAssets(string
      asset, string subfolder, string folder) : void\r\n\r\nInterface: IAgentOverride\r\nNamespace:
      NavMeshPlus.Extensions\r\nMethods:\r\n- UpdateAgent() : void\r\n\r\nClass:
      AgentDefaultOverride\r\nNamespace: NavMeshPlus.Extensions\r\nMethods:\r\n-
      UpdateAgent() : void\r\n\r\nClass: AgentOverride2d : MonoBehaviour\r\nNamespace:
      NavMeshPlus.Extensions\r\nProperties:\r\n- Agent : NavMeshAgent\r\n- agentOverride
      : IAgentOverride\r\n\r\nClass: AgentRotate2d : MonoBehaviour\r\nNamespace:
      NavMeshPlus.Extensions\r\n\r\nClass: AgentRotateSmooth2d : MonoBehaviour\r\nNamespace:
      NavMeshPlus.Extensions\r\nFields:\r\n- angularSpeed : float\r\n\r\nClass: CollectSources2d
      : NavMeshExtension\r\nNamespace: NavMeshPlus.Extensions\r\nProperties:\r\n-
      overrideByGrid : bool\r\n- useMeshPrefab : GameObject\r\n- compressBounds :
      bool\r\n- overrideVector : Vector3\r\nMethods:\r\n- CalculateWorldBounds(NavMeshSurface
      surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n- CollectSources(NavMeshSurface
      surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n\r\nClass:
      CollectSourcesCache2d : NavMeshExtension\r\nNamespace: NavMeshPlus.Extensions\r\nProperties:\r\n-
      IsDirty : bool\r\n- SourcesCount : int\r\n- CahcheCount : int\r\n- Cache :
      List`1\r\nMethods:\r\n- AddSource(GameObject gameObject, NavMeshBuildSource
      source) : bool\r\n- UpdateSource(GameObject gameObject) : bool\r\n- RemoveSource(GameObject
      gameObject) : bool\r\n- UpdateNavMesh(NavMeshData data) : AsyncOperation\r\n-
      UpdateNavMesh() : AsyncOperation\r\n- CollectSources(NavMeshSurface surface,
      List`1 sources, NavMeshBuilderState navMeshState) : void\r\n- PostCollectSources(NavMeshSurface
      surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n\r\nClass:
      CollectTilemapSourcesCache2d : NavMeshExtension\r\nNamespace: NavMeshPlus.Extensions\r\nMethods:\r\n-
      UpdateNavMesh(NavMeshData data) : AsyncOperation\r\n- UpdateNavMesh() : AsyncOperation\r\n-
      PostCollectSources(NavMeshSurface surface, List`1 sources, NavMeshBuilderState
      navNeshState) : void\r\n\r\nClass: NavMeshAgentAttribute : PropertyAttribute\r\nNamespace:
      NavMeshPlus.Extensions\r\n\r\nClass: NavMeshAreaAttribute : PropertyAttribute\r\nNamespace:
      NavMeshPlus.Extensions\r\nDescription: See also NavMeshAreaAttributePropertyDrawer
      \r\n\r\nClass: NavMeshBuilder2dState\r\nNamespace: NavMeshPlus.Extensions\r\nFields:\r\n-
      spriteMeshMap : Dictionary`2\r\n- coliderMeshMap : Dictionary`2\r\n- lookupCallback
      : Action`2\r\n- defaultArea : int\r\n- layerMask : int\r\n- agentID : int\r\n-
      overrideByGrid : bool\r\n- useMeshPrefab : GameObject\r\n- compressBounds :
      bool\r\n- overrideVector : Vector3\r\n- CollectGeometry : NavMeshCollectGeometry\r\n-
      CollectObjects : CollectObjects\r\n- parent : GameObject\r\n- hideEditorLogs
      : bool\r\nProperties:\r\n- Root : IEnumerable`1\r\nMethods:\r\n- GetMesh(Sprite
      sprite) : Mesh\r\n- GetMesh(Collider2D collider) : Mesh\r\n- SetRoot(IEnumerable`1
      root) : void\r\n- GetRoot() : IEnumerable`1\r\n- Dispose() : void\r\n\r\nClass:
      NavMeshBuilder2d\r\nNamespace: NavMeshPlus.Extensions\r\nMethods:\r\n- static
      CollectSources(List`1 sources, NavMeshBuilder2dState builder) : void\r\n- static
      CollectSources(GameObject root, List`1 sources, NavMeshBuilder2dState builder)
      : void\r\n- static CollectSources(List`1 sources, NavMeshBuilder2dState builder,
      NavMeshModifier modifier, int area) : void\r\n- static CollectSources(List`1
      sources, SpriteRenderer spriteRenderer, int area, NavMeshBuilder2dState builder)
      : void\r\n- static CollectSources(List`1 sources, Collider2D collider, int
      area, NavMeshBuilder2dState builder) : void\r\n- static CollectTileSources(List`1
      sources, Tilemap tilemap, int area, NavMeshBuilder2dState builder) : void\r\n-
      static GetCellTransformMatrix(Tilemap tilemap, Vector3 scale, Vector3Int vec3int)
      : Matrix4x4\r\n\r\nClass: NavMeshBuilderState\r\nNamespace: NavMeshPlus.Extensions\r\nFields:\r\n-
      worldToLocal : Matrix4x4\r\n- worldBounds : Bounds\r\n- roots : IEnumerable`1\r\nMethods:\r\n-
      GetExtraState(bool dispose) : T\r\n- Dispose() : void\r\n\r\nClass: CompositeDisposable\r\nNamespace:
      NavMeshPlus.Extensions\r\nMethods:\r\n- Add(IDisposable dispose) : void\r\n-
      Add(Object dispose) : void\r\n- Dispose() : void\r\n\r\nClass: NavMeshExtension
      : MonoBehaviour\r\nNamespace: NavMeshPlus.Extensions\r\nProperties:\r\n- Order
      : int\r\n- NavMeshSurfaceOwner : NavMeshSurface\r\nMethods:\r\n- CollectSources(NavMeshSurface
      surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n- CalculateWorldBounds(NavMeshSurface
      surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n- PostCollectSources(NavMeshSurface
      surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n\r\nInterface:
      INavMeshExtensionsProvider\r\nNamespace: NavMeshPlus.Extensions\r\nProperties:\r\n-
      Count : int\r\n- Item : NavMeshExtension\r\nMethods:\r\n- Add(NavMeshExtension
      extension, int order) : void\r\n- Remove(NavMeshExtension extension) : void\r\n\r\nClass:
      NavMeshExtensionMeta\r\nNamespace: NavMeshPlus.Extensions\r\nFields:\r\n- order
      : int\r\n- extension : NavMeshExtension\r\n\r\nClass: NavMeshExtensionsProvider\r\nNamespace:
      NavMeshPlus.Extensions\r\nProperties:\r\n- Item : NavMeshExtension\r\n- Count
      : int\r\nMethods:\r\n- Add(NavMeshExtension extension, int order) : void\r\n-
      Remove(NavMeshExtension extension) : void\r\n\r\nClass: NavMeshLink : MonoBehaviour\r\nNamespace:
      NavMeshPlus.Components\r\nProperties:\r\n- agentTypeID : int\r\n- startPoint
      : Vector3\r\n- endPoint : Vector3\r\n- width : float\r\n- costModifier : int\r\n-
      bidirectional : bool\r\n- autoUpdate : bool\r\n- area : int\r\nMethods:\r\n-
      UpdateLink() : void\r\n\r\nClass: NavMeshModifier : MonoBehaviour\r\nNamespace:
      NavMeshPlus.Components\r\nProperties:\r\n- overrideArea : bool\r\n- area :
      int\r\n- ignoreFromBuild : bool\r\n- static activeModifiers : List`1\r\nMethods:\r\n-
      AffectsAgentType(int agentTypeID) : bool\r\n\r\nClass: NavMeshModifierTilemap
      : MonoBehaviour\r\nNamespace: NavMeshPlus.Components\r\nMethods:\r\n- GetModifierMap()
      : Dictionary`2\r\n- CacheModifiers() : void\r\n- HasDuplicateTileModifiers()
      : bool\r\n- TryGetTileModifier(Vector3Int coords, Tilemap tilemap, TileModifier&
      modifier) : bool\r\n- AffectsAgentType(int agentTypeID) : bool\r\n\r\nClass:
      NavMeshModifierVolume : MonoBehaviour\r\nNamespace: NavMeshPlus.Components\r\nProperties:\r\n-
      size : Vector3\r\n- center : Vector3\r\n- area : int\r\n- static activeModifiers
      : List`1\r\nMethods:\r\n- AffectsAgentType(int agentTypeID) : bool\r\n\r\nClass:
      NavMeshSurface : MonoBehaviour\r\nNamespace: NavMeshPlus.Components\r\nProperties:\r\n-
      agentTypeID : int\r\n- collectObjects : CollectObjects\r\n- size : Vector3\r\n-
      center : Vector3\r\n- layerMask : LayerMask\r\n- useGeometry : NavMeshCollectGeometry\r\n-
      defaultArea : int\r\n- ignoreNavMeshAgent : bool\r\n- ignoreNavMeshObstacle
      : bool\r\n- overrideTileSize : bool\r\n- tileSize : int\r\n- overrideVoxelSize
      : bool\r\n- voxelSize : float\r\n- buildHeightMesh : bool\r\n- minRegionArea
      : float\r\n- hideEditorLogs : bool\r\n- navMeshData : NavMeshData\r\n- navMeshDataInstance
      : NavMeshDataInstance\r\n- NevMeshExtensions : INavMeshExtensionsProvider\r\n-
      static activeSurfaces : List`1\r\nMethods:\r\n- AddData() : void\r\n- RemoveData()
      : void\r\n- GetBuildSettings() : NavMeshBuildSettings\r\n- BuildNavMesh() :
      void\r\n- BuildNavMeshAsync() : AsyncOperation\r\n- UpdateNavMesh(NavMeshData
      data) : AsyncOperation\r\n- static GetWorldBounds(Matrix4x4 mat, Bounds bounds)
      : Bounds\r\n- CalculateWorldBounds(List`1 sources) : Bounds\r\n\r\nClass: RootSources2d
      : NavMeshExtension\r\nNamespace: NavMeshPlus.Extensions\r\nProperties:\r\n-
      RootSources : List`1\r\nMethods:\r\n- CollectSources(NavMeshSurface surface,
      List`1 sources, NavMeshBuilderState navNeshState) : void\r\n\r\nClass: RotateAgentInstantly\r\nNamespace:
      NavMeshPlus.Extensions\r\nMethods:\r\n- UpdateAgent() : void\r\n\r\nClass:
      RotateAgentSmoothly\r\nNamespace: NavMeshPlus.Extensions\r\nFields:\r\n- rotateSpeed
      : float\r\nMethods:\r\n- UpdateAgent() : void\r\n\r\nClass: Demo_Camera : MonoBehaviour\r\nNamespace:
      SpriteShadersUltimate.Demo\r\n\r\nClass: Demo_ColorPicker : MonoBehaviour\r\nNamespace:
      SpriteShadersUltimate.Demo\r\nFields:\r\n- targetMaterial : Material\r\n- propertyName
      : string\r\nMethods:\r\n- SetTarget(Material newMaterial, string newProperty,
      string shaderName) : void\r\n- LoadColor(Color color) : void\r\n- UpdateColor(float
      hue, float saturation) : void\r\n- SliderChanged() : void\r\n- OnPointerEnter(PointerEventData
      eventData) : void\r\n- OnPointerExit(PointerEventData eventData) : void\r\n\r\nClass:
      Demo_Display : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nDescription:
      Selected: \r\nFields:\r\n- static selected : Demo_Display - Selected: \r\n-
      firstProperty : string\r\n- ignorePlayer : bool\r\n- cycleTime : float\r\nMethods:\r\n-
      ChangeIndex() : void\r\n- HasAlternatives() : bool\r\n- UpdateIndex() : void\r\n-
      Select() : void\r\n- Deselect() : void\r\n- ResetMaterial() : void\r\n- InstantiateMaterial()
      : Material\r\n\r\nClass: Demo_DisplayTitle : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nFields:\r\n-
      target : Transform\r\n\r\nClass: Demo_FloatPicker : MonoBehaviour\r\nNamespace:
      SpriteShadersUltimate.Demo\r\nFields:\r\n- targetMaterial : Material\r\n- propertyName
      : string\r\nMethods:\r\n- SetTarget(Material newMaterial, string newProperty,
      string shaderName) : void\r\n- LoadFloat(float floatValue) : void\r\n- UpdateFloat(float
      floatValue) : void\r\n- SliderChanged() : void\r\n\r\nClass: Demo_GUI : MonoBehaviour\r\nNamespace:
      SpriteShadersUltimate.Demo\r\nFields:\r\n- static instance : Demo_GUI\r\nMethods:\r\n-
      CreateTitle(string title, Transform target) : void\r\n- UpdateHud() : void\r\n-
      static IsKeyword(string propName) : bool\r\n- BackButton() : void\r\n- ResetMaterialButton()
      : void\r\n- AlternativeButton() : void\r\n- UpdateScroll() : void\r\n\r\nClass:
      Demo_Player : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nFields:\r\n-
      static instance : Demo_Player\r\n- idleSprites : List`1\r\n- runningSprites
      : List`1\r\n- hurtSprites : List`1\r\n- ignoreMaterials : bool\r\nMethods:\r\n-
      GetHurt(Vector2 velocity) : void\r\n- ApplyMaterial(Material material) : void\r\n-
      SnapPosition(Vector3 newPosition) : void\r\n- ResetPosition() : void\r\n- ResetMaterial()
      : void\r\n\r\nClass: Demo_Shaders : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nFields:\r\n-
      static instance : Demo_Shaders\r\n- static zoomFactor : float\r\nMethods:\r\n-
      AllowMovement() : bool\r\n- FadeInGUI() : bool\r\n\r\nClass: Demo_SpriteFader
      : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nMethods:\r\n- SetFade(bool
      fadeState) : void\r\n\r\nClass: Demo_Trigger : MonoBehaviour\r\nNamespace:
      SpriteShadersUltimate.Demo\r\nFields:\r\n- events : List`1\r\nMethods:\r\n-
      ChangeState(bool isActive) : void\r\n\r\nClass: Demo_TriggerEvent\r\nNamespace:
      SpriteShadersUltimate.Demo\r\nFields:\r\n- delay : float\r\n- fader : ShaderFaderSSU\r\n-
      faderState : bool\r\n- negateState : bool\r\n- snapPlayer : bool\r\n- isRelative
      : bool\r\n- snapPosition : Vector3\r\n- hurtPlayer : bool\r\n- velocity : Vector2\r\nMethods:\r\n-
      Play(Transform source) : void\r\n\r\nClass: Demo_VectorFollow : MonoBehaviour\r\nNamespace:
      SpriteShadersUltimate.Demo\r\nFields:\r\n- propertyName : string - Public:
      \r\n- trackedTransform : Transform\r\n\r\nClass: Demo_VectorPicker : MonoBehaviour\r\nNamespace:
      SpriteShadersUltimate.Demo\r\nFields:\r\n- targetMaterial : Material\r\n- propertyName
      : string\r\nMethods:\r\n- SetTarget(Material newMaterial, string newProperty,
      string shaderName) : void\r\n- LoadVector(Vector2 vectorValue) : void\r\n-
      UpdateVector(Vector2 vectorValue) : void\r\n- SliderChanged() : void\r\n\r\nClass:
      ImageSSU : InstancerSSU\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n-
      updateChanges : bool - Updates material when RectTransform changes. \r\nMethods:\r\n-
      UpdateMaterial() : void\r\n\r\nClass: InteractiveSquishSSU : MonoBehaviour\r\nFields:\r\n-
      squishSpeed : float\r\n- staySquished : bool\r\n- squishDuration : float\r\n\r\nClass:
      InteractiveWindSSU : InstancerSSU\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n-
      rotationFactor : float\r\n- bendInSpeed : float\r\n- bendOutSpeed : float\r\n-
      stayBent : bool\r\n- minBendSpeed : float\r\n- hyperPerformanceMode : bool\r\n-
      randomOffsetZ : bool\r\n- customMaterial : bool\r\n- inactiveShader : string\r\n-
      inactiveMaterial : Material\r\n- randomizeWiggle : bool\r\n- allowCustomLayer
      : bool\r\nMethods:\r\n- UpdateShader() : void\r\n- static DefaultCollider(BoxCollider2D
      box) : void\r\n\r\nClass: WindManagerSSU : MonoBehaviour\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n-
      windNoiseScale : float\r\n- windNoiseSpeed : float\r\n- windIntensityFrom :
      float\r\n- windIntensityTo : float\r\nMethods:\r\n- ModifyIfChanged(Single&
      currentValue, Single& oldValue, string globalShaderName) : void\r\n\r\nClass:
      WindParallaxSSU : MonoBehaviour\r\nNamespace: SpriteShadersUltimate\r\n\r\nClass:
      InstancerSSU : MonoBehaviour\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n-
      runtimeMaterial : Material\r\n\r\nClass: MaterialInstancerSSU : InstancerSSU\r\nNamespace:
      SpriteShadersUltimate\r\n\r\nClass: ShaderFaderSSU : MonoBehaviour\r\nNamespace:
      SpriteShadersUltimate\r\nFields:\r\n- automaticFading : bool - Fading: \r\n-
      isFaded : bool\r\n- fadeValue : float\r\n- duration : float\r\n- unscaledTime
      : bool\r\n- fadeCurve : AnimationCurve\r\n- getChildObjects : bool - Materials:
      \r\n- poolMaterials : bool\r\n- renderers : List`1\r\n- graphics : List`1\r\n-
      floatProperties : List`1 - Properties: \r\n- vectorProperties : List`1\r\n-
      colorProperties : List`1\r\nMethods:\r\n- UpdateMaterials() : void\r\n- UpdateSingleMaterial(Material
      mat, float fadeFactor) : void\r\n- ReloadMaterials() : void\r\n\r\nClass: BaseFaderSSU\r\nNamespace:
      SpriteShadersUltimate\r\nFields:\r\n- propertyName : string\r\n- fromTime :
      float\r\n- toTime : float\r\n\r\nClass: FloatFaderSSU : BaseFaderSSU\r\nNamespace:
      SpriteShadersUltimate\r\nFields:\r\n- fromValue : float\r\n- toValue : float\r\n\r\nClass:
      VectorFaderSSU : BaseFaderSSU\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n-
      fromValue : Vector4\r\n- toValue : Vector4\r\n\r\nClass: ColorFaderSSU : BaseFaderSSU\r\nNamespace:
      SpriteShadersUltimate\r\nFields:\r\n- fromValue : Color\r\n- toValue : Color\r\n\r\nClass:
      SpriteSheetSSU : MonoBehaviour\r\nNamespace: SpriteShadersUltimate\r\nDescription:
      Attach this to sprite renderers or images with a sprite shaders ultimate material.
      Enable Sprite Sheet Fix and let this component update the Sprite Sheet Rect
      variable. \r\nFields:\r\n- updateChanges : bool\r\nMethods:\r\n- UpdateSpriteRect()
      : void\r\n- static GetSheetVector(Sprite sprite) : Vector4\r\n\r\nClass: UnscaledTimeSSU
      : MonoBehaviour\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n- dontDestroyOnLoad
      : bool\r\n\r\n"
    Messages:
    - Id: 
      Role: system
      Content: "# Custom LLM Instructions for *Hairvest Moon* (Unity Project)\r\n\r\n##
        Project Overview\r\n\r\nYou are assisting with the development of **Hairvest
        Moon**, a 2D top-down pixel art farming/stealth hybrid in Unity. The player
        is a cursed farmer who turns into a werewolf at night. The project uses Unity's
        Input System and emphasizes clean architecture, farming interactions, and
        dual-mode gameplay (day/night).\r\n\r\n---\r\n\r\n## Your Role\r\n\r\nYou
        should:\r\n- Write **clean, idiomatic Unity C# code** (Unity Codestyle).\r\n-
        Be **modular and extensible** in your architecture: prefer composition over
        inheritance.\r\n- Use **ScriptableObjects, event-driven design, and clean
        separation of logic**.\r\n- Follow a **single-scene design** with modular
        systems for state, interaction, and UI.\r\n- Support **keyboard/mouse and
        gamepad** inputs, automatically detecting control scheme.\r\n- Focus on **tile-based
        logic and targeting**, including world interaction highlights and context-aware
        tool use.\r\n\r\n---\r\n\r\n## Developer Profile\r\n\r\nThe developer is
        **intermediate level** with:\r\n- Comfort in Unity C# coding, design patterns,
        state machines, input systems.\r\n- Knowledge of ScriptableObjects, modular
        gameplay logic, and editor tooling.\r\n- A preference for clarity, modularity,
        and minimal boilerplate.\r\n\r\nAvoid beginner-style over-explanation, but
        be clear and practical.\r\n\r\n---\r\n\r\n## Coding Guidelines\r\n\r\n- Use
        **Unity Codestyle**.\r\n- Always include:\r\n  - Required `using` statements.\r\n 
        - XML-style summaries (`///`) for all classes and public members.\r\n  -
        Method-level summaries (avoid line-by-line comments unless needed).\r\n-
        Be **concise in explanations**, but **precise and thorough in code structure**.\r\n-
        When asked to modify or extend a script, always **ask for the source code**
        if not already provided.\r\n\r\n---\r\n\r\n## Architectural Notes\r\n\r\nThis
        project uses:\r\n- Modular **Input \u2192 Facing \u2192 Targeting \u2192
        Interaction** chain\r\n- **Tilemap-based interaction** and grid logic\r\n-
        Contextual UI feedback (e.g., tool sliders, tile highlights)\r\n- **Feature/strategy-based
        interactables and puzzles**\r\n- Robust handling of **control scheme switching**,
        **player state**, and **zone-based logic**\r\n\r\nDesign should focus on:\r\n-
        **Testability**, **modularity**, and **flexibility**\r\n- Avoiding tight
        coupling or overly specific single-use logic\r\n\r\n---\r\n\r\n## Systems
        Already Implemented\r\n\r\n- `InputController`: wraps Unity Input System,
        auto-detects mouse/gamepad\r\n- `PlayerFacingController`: handles player
        facing logic based on movement or look input\r\n- `TileTargetingSystem`:
        provides tile under cursor (mouse) or in facing arc (gamepad)\r\n- `FarmToolHandler`:
        holds-to-interact mechanic, applies tool logic to valid tiles\r\n\r\nUnity
        version to use: 6000.1.5f1"
      Skip: 0
      Attachments: []
    - Id: 
      Role: user
      Content: "Here is what I have in my project:\r\nClass: GameEventWiring : MonoBehaviour\r\nNamespace:
        HairvestMoon.Core\r\nFields:\r\n- farmGrowthSystem : FarmGrowthSystem\r\n-
        cropVisualSystem : CropVisualSystem\r\n- waterDecaySystem : WaterDecaySystem\r\n-
        waterVisualSystem : WaterVisualSystem\r\n- toolSelector : ToolSelector\r\n-
        gameManager : GameManager\r\n- inputController : InputController\r\n- gameTimeManager
        : GameTimeManager\r\n- gameStateManager : GameStateManager\r\n- playerController
        : Player_Controller\r\n- playerStateController : PlayerStateController\r\n-
        debugUIOverlay : DebugUIOverlay\r\nMethods:\r\n- InitializeEvents() : void\r\n\r\nClass:
        GameInitializer : MonoBehaviour\r\nFields:\r\n- gameManager : GameManager\r\n-
        gameStateManager : GameStateManager\r\n- gameTimeManager : GameTimeManager\r\n-
        inputController : InputController\r\n- playerStateController : PlayerStateController\r\n-
        playerController : Player_Controller\r\n- playerFacingController : PlayerFacingController\r\n-
        tileTargetingSystem : TileTargetingSystem\r\n- seedDatabase : SeedDatabase\r\n-
        inventorySystem : InventorySystem\r\n- backpackInventorySystem : BackpackInventorySystem\r\n-
        backpackEquipSystem : BackpackEquipSystem\r\n- backpackEquipInstallManager
        : BackpackEquipInstallManager\r\n- backpackUpgradeManager : BackpackUpgradeManager\r\n-
        backpackInventoryUI : BackpackInventoryUI\r\n- seedSelectionUI : SeedSelectionUI\r\n-
        wateringSelectionUI : WateringSelectionUI\r\n- hoeSelectionUI : HoeSelectionUI\r\n-
        harvestSelectionUI : HarvestSelectionUI\r\n- selectionTooltipUI : SelectionTooltipUI\r\n-
        inventoryOverviewUI : InventoryOverviewUI\r\n- backpackCapacityBarUI : BackpackCapacityBarUI\r\n-
        mainMenuUIManager : MainMenuUIManager\r\n- toolSystem : ToolSystem\r\n- toolSelector
        : ToolSelector\r\n- farmToolHandler : FarmToolHandler\r\n- debugUIOverlay
        : DebugUIOverlay\r\n- gameEventWiring : GameEventWiring\r\n\r\nClass: GameManager
        : MonoBehaviour\r\nNamespace: HairvestMoon.Core\r\nProperties:\r\n- static
        Instance : GameManager\r\nMethods:\r\n- InitializeSingleton() : void\r\n-
        HandleDusk() : void\r\n- HandleDawn() : void\r\n- HandleMenuToggle() : void\r\n\r\nClass:
        GameStateManager : MonoBehaviour\r\nNamespace: HairvestMoon.Core\r\nDescription:
        Broadcasts changes via OnGameStateChanged Used to lock input, pause systems,
        manage cutscenes or tasks \r\nProperties:\r\n- static Instance : GameStateManager\r\n-
        CurrentState : GameState\r\n- IsInputLocked : bool\r\nMethods:\r\n- InitializeSingleton()
        : void\r\n- SetState(GameState newState) : void\r\n- IsFreeRoam() : bool\r\n\r\nClass:
        GameTimeManager : MonoBehaviour\r\nNamespace: HairvestMoon.Core\r\nProperties:\r\n-
        static Instance : GameTimeManager\r\n- CurrentHour : int\r\n- CurrentMinute
        : int\r\n- Day : int\r\n- IsTimeFrozen : bool\r\n- TimeScale : float\r\nMethods:\r\n-
        InitializeSingleton() : void\r\n- AdvanceDay() : void\r\n- SetTimeScale(float
        scale) : void\r\n- FastForwardToHour(int targetHour) : void\r\n- GetCurrentHourProgress()
        : float\r\n- GetFormattedTime() : string\r\n- FreezeTime() : void\r\n- ResumeTime()
        : void\r\n- IsNight() : bool\r\n- IsMorning() : bool\r\n- IsEvening() : bool\r\n\r\nClass:
        InputController : MonoBehaviour\r\nNamespace: HairvestMoon.Core\r\nProperties:\r\n-
        static Instance : InputController\r\n- MoveInput : Vector2\r\n- LookInput
        : Vector2\r\n- LookInputThisFrame : bool -  True if the look input was actively
        moved this frame.  \r\n- CurrentMode : ControlMode\r\nMethods:\r\n- InitializeSingleton()
        : void\r\n- InitInput() : void\r\n- HandleInputLock(bool locked) : void\r\n-
        OnMove(CallbackContext context) : void\r\n- OnLook(CallbackContext context)
        : void\r\n- OnGamepadLook(CallbackContext context) : void\r\n- OnAttack(CallbackContext
        context) : void\r\n- OnInteract(CallbackContext context) : void\r\n- OnCrouch(CallbackContext
        context) : void\r\n- OnJump(CallbackContext context) : void\r\n- OnNext(CallbackContext
        context) : void\r\n- OnPrevious(CallbackContext context) : void\r\n- OnSprint(CallbackContext
        context) : void\r\n- OnPause(CallbackContext context) : void\r\n\r\nClass:
        CropData : ScriptableObject\r\nNamespace: HairvestMoon\r\nFields:\r\n- cropName
        : string\r\n- cropIcon : Sprite\r\n- growthStages : Sprite[]\r\n- growthDurationMinutes
        : int\r\n- harvestYield : int\r\n- harvestedItem : ItemData\r\nMethods:\r\n-
        GetHarvestItem() : ItemData\r\n\r\nClass: ItemData : ScriptableObject\r\nNamespace:
        HairvestMoon\r\nFields:\r\n- itemID : string\r\n- itemName : string\r\n-
        description : string\r\n- itemIcon : Sprite\r\n- itemType : ItemType\r\n-
        toolType : ToolType\r\n- sellPrice : int\r\n\r\nClass: SeedData : ScriptableObject\r\nNamespace:
        HairvestMoon\r\nFields:\r\n- seedItem : ItemData\r\n- cropData : CropData\r\n\r\nClass:
        CropVisualSystem : MonoBehaviour\r\nNamespace: HairvestMoon.Farming\r\nDescription:
        Handles rendering crop sprites based on growth stages after growth tick occurs.
        \r\nMethods:\r\n- RefreshCropVisuals(int hour, int minute) : void\r\n\r\nClass:
        FarmGrowthSystem : MonoBehaviour\r\nNamespace: HairvestMoon.Farming\r\nDescription:
        Handles daily crop growth only. Subscribes to GameTimeManager.OnDawn to tick
        crops once per day. \r\nMethods:\r\n- HandleMinuteGrowthTick(int hour, int
        minute) : void\r\n\r\nClass: FarmTileDataManager : MonoBehaviour\r\nNamespace:
        HairvestMoon.Farming\r\nDescription: Stores logical gameplay state for each
        farm tile. Tracks tilling, watering, and crop growth. Interfaces with tilemaps
        and farming tools to apply gameplay effects. \r\nFields:\r\n- static HoursPerWatering
        : float\r\nProperties:\r\n- static Instance : FarmTileDataManager\r\n- CropTilemap
        : Tilemap\r\n- AllTileData : Dictionary`2\r\nMethods:\r\n- IsTileTillable(Vector3Int
        pos) : bool\r\n- GetTileData(Vector3Int pos) : FarmTileData\r\n- SetTilled(Vector3Int
        pos, bool value) : void\r\n- SetWatered(Vector3Int pos, bool value) : void\r\n-
        UpdateWaterVisual(Vector3Int pos, FarmTileData data) : void\r\n- IsTilled(Vector3Int
        pos) : bool\r\n- IsWatered(Vector3Int pos) : bool\r\n\r\nClass: FarmTileData\r\nNamespace:
        HairvestMoon.Farming\r\nFields:\r\n- isTilled : bool\r\n- isWatered : bool\r\n-
        waterMinutesRemaining : float\r\n- static MinutesPerWatering : float\r\n-
        plantedCrop : CropData\r\n- wateredMinutesAccumulated : float\r\nMethods:\r\n-
        GetGrowthProgressPercent() : float\r\n- HasRipeCrop() : bool\r\n\r\nClass:
        FarmToolHandler : MonoBehaviour\r\nNamespace: HairvestMoon.Farming\r\nMethods:\r\n-
        Initialize() : void\r\n- SetSelectedSeed(SeedData newSeed) : void\r\n\r\nClass:
        SeedDatabase : MonoBehaviour\r\nNamespace: HairvestMoon.Farming\r\nProperties:\r\n-
        static Instance : SeedDatabase\r\n- AllSeeds : List`1\r\nMethods:\r\n- InitializeSingleton()
        : void\r\n- GetSeedDataByItem(ItemData item) : SeedData\r\n\r\nClass: WaterDecaySystem
        : MonoBehaviour\r\nNamespace: HairvestMoon.Farming\r\nDescription: Handles
        hourly water decay. Subscribes to GameTimeManager.OnNewHour. \r\nMethods:\r\n-
        HandleWaterDecayPerMinute(int hour, int minute) : void\r\n\r\nClass: WaterVisualSystem
        : MonoBehaviour\r\nMethods:\r\n- RefreshSliders(int hour, int minute) : void\r\n-
        HandleWateredTile(Vector3Int pos, FarmTileData data) : void\r\n\r\nClass:
        TileTargetingSystem : MonoBehaviour\r\nNamespace: HairvestMoon.Interaction\r\nFields:\r\n-
        Grid : Grid\r\n- selectionHighlightTilemap : Tilemap\r\n- highlightTile :
        Tile\r\n- highlightRange : int\r\n- coneSize : Vector2Int\r\n- footPositionYOffset
        : float\r\n- mouseTargetMaxDistance : float\r\n- drawDebugGizmos : bool\r\n-
        gizmoColor : Color\r\nProperties:\r\n- static Instance : TileTargetingSystem\r\n-
        CurrentTargetedTile : Nullable`1\r\nMethods:\r\n- InitializeSingleton() :
        void\r\n\r\nClass: BackpackEquipInstallManager : MonoBehaviour\r\nNamespace:
        HairvestMoon.Inventory\r\nProperties:\r\n- static Instance : BackpackEquipInstallManager\r\nMethods:\r\n-
        InitializeSingleton() : void\r\n- TryEquip(ItemData item) : bool\r\n\r\nClass:
        BackpackEquipSystem : MonoBehaviour\r\nNamespace: HairvestMoon.Inventory\r\nFields:\r\n-
        hoeTool : ItemData\r\n- wateringTool : ItemData\r\n- seedTool : ItemData\r\n-
        harvestTool : ItemData\r\n- hoeUpgrade : ItemData\r\n- wateringUpgrade :
        ItemData\r\n- seedUpgrade : ItemData\r\n- harvestUpgrade : ItemData\r\nProperties:\r\n-
        static Instance : BackpackEquipSystem\r\nMethods:\r\n- InitializeSingleton()
        : void\r\n- EquipTool(ItemData toolItem) : void\r\n- EquipUpgrade(ItemData
        upgradeItem) : void\r\n\r\nClass: BackpackInventorySystem : MonoBehaviour\r\nNamespace:
        HairvestMoon.Inventory\r\nFields:\r\n- backpack : List`1 - Check slot limit
        for non-stackables \r\n- maxBackpackSlots : int - Check slot limit for non-stackables
        \r\nProperties:\r\n- static Instance : BackpackInventorySystem\r\nMethods:\r\n-
        InitializeSingleton() : void\r\n- CanAddItem(ItemData newItem, int amount)
        : bool\r\n- AddItem(ItemData newItem, int amount) : bool\r\n- RemoveItem(ItemData
        item, int amount) : bool\r\n- GetQuantity(ItemData queryItem) : int\r\n-
        ForceRefresh() : void\r\n- GetAllSlots() : List`1\r\n\r\nClass: BackpackUpgradeManager
        : MonoBehaviour\r\nNamespace: HairvestMoon.Inventory\r\nProperties:\r\n-
        static Instance : BackpackUpgradeManager\r\n- SlotsPerUpgrade : int\r\n-
        BaseSlots : int\r\nMethods:\r\n- InitializeSingleton() : void\r\n- Initialize()
        : void\r\n- UpgradeBackpack() : void\r\n- GetUpgradeLevel() : int\r\n- GetMaxUpgrades()
        : int\r\n- GetCurrentSlots() : int\r\n\r\nClass: InventorySystem : MonoBehaviour\r\nNamespace:
        HairvestMoon.Inventory\r\nDescription: Manages the player's inventory, including
        adding items, tracking discovered items, and querying item quantities. \r\nFields:\r\n-
        maxSlots : int\r\n- inventory : List`1\r\n- discoveredItems : HashSet`1\r\nProperties:\r\n-
        static Instance : InventorySystem\r\nMethods:\r\n- InitializeSingleton()
        : void\r\n- MarkDiscovered(ItemData item) : void\r\n- AddItem(ItemData newItem,
        int amount) : bool\r\n- GetQuantity(ItemData queryItem) : int\r\n- RemoveItem(ItemData
        item, int amount) : bool\r\n- GetOwnedItemsByType(ItemType type) : List`1\r\n-
        GetDiscoveredItemsByType(ItemType type) : List`1\r\n- GetAllSlots() : List`1\r\n-
        ForceRefresh() : void\r\n- DebugPrintFromInspector() : void\r\n- DebugAddTestSeeds()
        : void\r\n\r\nClass: WorldItemPickup : MonoBehaviour\r\nNamespace: HairvestMoon.Inventory\r\nFields:\r\n-
        itemData : ItemData\r\n- quantity : int\r\n\r\nClass: Player_Controller :
        MonoBehaviour\r\nNamespace: HairvestMoon.Player\r\nProperties:\r\n- static
        Position : Vector3\r\nMethods:\r\n- InitializeSingleton() : void\r\n- HandleGameStateChanged(GameState
        newState) : void\r\n\r\nClass: PlayerFacingController : MonoBehaviour\r\nNamespace:
        HairvestMoon.Player\r\nDescription: Determines the player's current facing
        direction based on movement or look input. Prioritizes movement, and defers
        to look input only after intentional use. \r\nProperties:\r\n- static Instance
        : PlayerFacingController\r\n- CurrentFacing : FacingDirection\r\nMethods:\r\n-
        InitializeSingleton() : void\r\n- UpdateFacing(Vector2 moveInput, Vector2
        lookInput, ControlMode mode) : void - Updates the facing direction each frame
        based on input and control mode. \r\n- GetFacingOffset() : Vector3Int\r\n\r\nClass:
        PlayerFormData\r\nNamespace: HairvestMoon.Player\r\nFields:\r\n- FormType
        : PlayerForm\r\n- VisualRoot : GameObject\r\n- Animator : Animator\r\n- Renderer
        : SpriteRenderer\r\n- MoveSpeed : float\r\n\r\nClass: PlayerStateController
        : MonoBehaviour\r\nNamespace: HairvestMoon.Player\r\nProperties:\r\n- static
        Instance : PlayerStateController\r\n- CurrentForm : PlayerForm\r\n- CurrentAnimator
        : Animator\r\n- CurrentSpriteRenderer : SpriteRenderer\r\n- MoveSpeed : float\r\nMethods:\r\n-
        InitializeSingleton() : void\r\n- InitializePlayerState() : void\r\n- EnterWerewolfForm()
        : void\r\n- ExitWerewolfForm() : void\r\n- IsWerewolf() : bool\r\n\r\nClass:
        ToolSelector : MonoBehaviour\r\nNamespace: HairvestMoon.Tool\r\nDescription:
        Handles tool selection via keyboard hotkeys and input actions for next/previous.
        Updates ToolSystem and notifies UI. \r\nProperties:\r\n- static Instance
        : ToolSelector\r\nMethods:\r\n- InitializeSingleton() : void\r\n- HandleNext()
        : void\r\n- HandlePrevious() : void\r\n- SelectToolExternally(ToolType tool)
        : void\r\n- InitialSetTool() : void\r\n\r\nClass: ToolSystem : MonoBehaviour\r\nNamespace:
        HairvestMoon.Tool\r\nDescription: Core tool system management: handles current
        tool state and tool capacity. \r\nFields:\r\n- waterCanCapacity : float\r\n-
        waterPerUse : float\r\nProperties:\r\n- static Instance : ToolSystem\r\n-
        CurrentTool : ToolType\r\nMethods:\r\n- InitializeSingleton() : void\r\n-
        SetTool(ToolType tool) : void\r\n- ConsumeWaterFromCan() : void\r\n- RefillWaterCan(float
        refillAmount) : void\r\n- RefillWaterToFull() : void\r\n\r\nClass: BackpackCapacityBarUI
        : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nMethods:\r\n- InitializeUI()
        : void\r\n\r\nClass: BackpackInventoryUI : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nMethods:\r\n-
        InitializeUI() : void\r\n- RefreshUI() : void\r\n\r\nClass: BackpackSlotUI
        : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nMethods:\r\n- Initialize(ItemData
        itemData, int quantity, Action`1 clickCallback) : void\r\n- SetSelected(bool
        isSelected) : void\r\n\r\nClass: EquipSlotUI : MonoBehaviour\r\nNamespace:
        HairvestMoon.UI\r\nMethods:\r\n- SetSlot(ItemData item) : void\r\n\r\nClass:
        HarvestSelectionUI : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nProperties:\r\n-
        static Instance : HarvestSelectionUI\r\nMethods:\r\n- InitializeSingleton()
        : void\r\n- InitializeUI() : void\r\n- OpenHarvestMenu() : void\r\n- CloseHarvestMenu()
        : void\r\n- GetCurrentSelectedItem() : ItemData\r\n\r\nClass: HoeSelectionUI
        : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nProperties:\r\n- static
        Instance : HoeSelectionUI\r\nMethods:\r\n- InitializeSingleton() : void\r\n-
        InitializeUI() : void\r\n- OpenHoeMenu() : void\r\n- CloseHoeMenu() : void\r\n-
        GetCurrentSelectedItem() : ItemData\r\n\r\nClass: InventoryOverviewUI : MonoBehaviour\r\nNamespace:
        HairvestMoon.UI\r\nMethods:\r\n- InitializeUI() : void\r\n- RefreshUI() :
        void\r\n\r\nClass: InventorySlotUI : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nMethods:\r\n-
        Initialize(ItemData itemData) : void\r\n- UpdateDisplay() : void\r\n\r\nClass:
        ItemDescriptionUI : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nMethods:\r\n-
        SetItem(ItemData item) : void\r\n- Clear() : void\r\n\r\nClass: MainMenuUIManager
        : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nProperties:\r\n- static
        Instance : MainMenuUIManager\r\nMethods:\r\n- InitializeSingleton() : void\r\n-
        InitializeUI() : void\r\n- OpenMenu() : void\r\n- CloseMenu() : void\r\n-
        OpenTab(int index) : void\r\n- NextTab() : void\r\n- PreviousTab() : void\r\n\r\nClass:
        SeedSelectionUI : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nProperties:\r\n-
        static Instance : SeedSelectionUI\r\nMethods:\r\n- InitializeSingleton()
        : void\r\n- InitializeUI() : void\r\n- OpenSeedMenu() : void\r\n- CloseSeedMenu()
        : void\r\n\r\nClass: SelectionTooltipUI : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nProperties:\r\n-
        static Instance : SelectionTooltipUI\r\nMethods:\r\n- InitializeSingleton()
        : void\r\n- InitializeUI() : void\r\n- ShowTooltip(ItemData item) : void\r\n-
        HideTooltip() : void\r\n\r\nClass: ToolHotbarUI : MonoBehaviour\r\nNamespace:
        HairvestMoon.UI\r\nDescription: Manages the visual UI of tool slots and highlights
        the selected one. \r\nMethods:\r\n- HighlightTool(ToolType selected) : void\r\n\r\nClass:
        ToolSlot : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nDescription: A
        UI button representing a tool in the hotbar. \r\nProperties:\r\n- Tool :
        ToolType\r\nMethods:\r\n- SetHighlighted(bool isHighlighted) : void\r\n\r\nClass:
        UpgradeSelectionSlot : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nProperties:\r\n-
        Item : ItemData\r\nMethods:\r\n- Initialize(ItemData item, Action`1 clickCallback)
        : void\r\n- SetSelected(bool selected) : void\r\n\r\nClass: WaterCanUI :
        MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nDescription: Displays water
        can capacity using both text and slider for real-time feedback. \r\n\r\nClass:
        WateringSelectionUI : MonoBehaviour\r\nNamespace: HairvestMoon.UI\r\nProperties:\r\n-
        static Instance : WateringSelectionUI\r\nMethods:\r\n- InitializeSingleton()
        : void\r\n- InitializeUI() : void\r\n- OpenWateringMenu() : void\r\n- CloseWateringMenu()
        : void\r\n- GetCurrentSelectedItem() : ItemData\r\n\r\nClass: BoolEvent :
        ScriptableObject\r\nNamespace: HairvestMoon.Utility\r\nMethods:\r\n- Raise(bool
        value) : void\r\n- Register(Action`1 callback) : void\r\n- Unregister(Action`1
        callback) : void\r\n\r\nClass: DebugUIOverlay : MonoBehaviour\r\nNamespace:
        HairvestMoon.Utility\r\nProperties:\r\n- static Instance : DebugUIOverlay\r\nMethods:\r\n-
        InitializeSingleton() : void\r\n- UpdateTimeText(int hour, int minute) :
        void\r\n- UpdateStateText(GameState state) : void\r\n- ShowLastAction(string
        text) : void\r\n\r\nClass: DeveloperTestPanel : MonoBehaviour\r\nNamespace:
        HairvestMoon.Utility\r\n\r\nClass: CodeBuddyDemo : MonoBehaviour\r\nNamespace:
        CodeBuddy.Demo\r\nMethods:\r\n- JoinDiscord() : void\r\n- OpenDocumentation()
        : void\r\n\r\nClass: DungeonPlayerController : MonoBehaviour\r\n\r\nClass:
        SortingOrderByY : MonoBehaviour\r\nFields:\r\n- sortingOrder : int\r\n- spriteRenderer
        : SpriteRenderer\r\n\r\nClass: FollowRacer : MonoBehaviour\r\n\r\nClass:
        RacerController : MonoBehaviour\r\nFields:\r\n- static instance : RacerController\r\n-
        audioSource : AudioSource\r\n- speed : float\r\nMethods:\r\n- Updates() :
        void\r\n\r\nClass: RacerOtherController : MonoBehaviour\r\nFields:\r\n- speed
        : float\r\n- audioSource : AudioSource\r\n- type : Type\r\n\r\nClass: RacerRoad
        : MonoBehaviour\r\nFields:\r\n- static list : List`1\r\nMethods:\r\n- OnEnable()
        : void\r\n\r\nClass: BasicEvents : MonoBehaviour\r\nNamespace: FunkyCode\r\n\r\nClass:
        LightSpriteSample : MonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n-
        sprite : Sprite\r\n- lightSprite : LightSprite2D\r\n\r\nClass: GUIFPS : MonoBehaviour\r\nMethods:\r\n-
        Get() : string\r\n\r\nClass: MainDemoManager : MonoBehaviour\r\nFields:\r\n-
        scenesCount : int\r\n\r\nClass: DemoFollowMouse : MonoBehaviour\r\nMethods:\r\n-
        static GetMousePosition() : Vector2\r\n\r\nClass: DemoLightColorChange :
        MonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n- speed : float\r\n-
        time : float\r\n- colors : Color[]\r\n\r\nClass: DayLightCollider2D : MonoBehaviour\r\nNamespace:
        FunkyCode\r\nFields:\r\n- shadowLayer : int\r\n- maskLayer : int\r\n- shadowType
        : ShadowType\r\n- maskType : MaskType\r\n- shadowEffect : ShadowEffect\r\n-
        shadowDistance : float\r\n- shadowThickness : float\r\n- shadowSoftness :
        float\r\n- shadowTranslucency : float\r\n- maskLit : MaskLit\r\n- depth :
        Depth\r\n- depthFalloff : DepthFalloff\r\n- depthCustomValue : int\r\n- mainShape
        : DayLightColliderShape\r\n- normalMapMode : DayNormalMapMode\r\n- spriteMeshObject
        : SpriteMeshObject\r\n- static List : List`1\r\nProperties:\r\n- isStatic
        : bool\r\nMethods:\r\n- OnEnable() : void\r\n- OnDisable() : void\r\n- GetDepth()
        : int\r\n- InAnyCamera() : bool\r\n- static ForceUpdateAll() : void\r\n-
        ForceUpdate() : void\r\n- UpdateLoop() : void\r\n- Initialize() : void\r\n\r\nClass:
        DayLightingTile\r\nNamespace: FunkyCode\r\nFields:\r\n- polygons : List`1\r\n-
        height : float\r\n- rect : Rect\r\nMethods:\r\n- GetDayRect() : Rect\r\n-
        InCamera(Camera camera) : bool\r\n\r\nClass: DayLightTilemapCollider2D :
        MonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n- tilemapType : MapType\r\n-
        shadowLayer : int\r\n- shadowTranslucency : float\r\n- shadowSoftness : float\r\n-
        shadowTileType : ShadowTileType\r\n- height : float\r\n- maskLayer : int\r\n-
        maskLit : MaskLit\r\n- transform2D : DayLightTilemapColliderTransform\r\n-
        rectangle : Rectangle\r\n- isometric : Isometric\r\n- hexagon : Hexagon\r\n-
        superTilemapEditor : TilemapCollider2D\r\n- dayTiles : List`1\r\nProperties:\r\n-
        static List : List`1\r\nMethods:\r\n- ShadowsDisabled() : bool\r\n- MasksDisabled()
        : bool\r\n- OnEnable() : void\r\n- OnDisable() : void\r\n- GetCurrentTilemap()
        : Base\r\n- Initialize() : void\r\n- GetTileList() : List`1\r\n- GetTilemapProperties()
        : TilemapProperties\r\n\r\nClass: LightBlink : MonoBehaviour\r\nNamespace:
        FunkyCode\r\nFields:\r\n- primaryColor : Color\r\n- secondaryColor : Color\r\n\r\nClass:
        LightCycleBuffer\r\nNamespace: FunkyCode\r\nFields:\r\n- gradient : Gradient\r\n\r\nClass:
        LightDayProperties\r\nNamespace: FunkyCode\r\nFields:\r\n- shadowOffset :
        float\r\n- shadowHeight : AnimationCurve\r\n- shadowAlpha : AnimationCurve\r\n\r\nClass:
        LightCycle : MonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n- time :
        float\r\n- dayProperties : LightDayProperties\r\n- nightProperties : LightCycleBuffer[]\r\nMethods:\r\n-
        SetTime(float setTime) : void\r\n\r\nClass: LightFlicker : MonoBehaviour\r\nNamespace:
        FunkyCode\r\nFields:\r\n- flickersPerSecond : float\r\n- flickerRangeMin
        : float\r\n- flickerRangeMax : float\r\n\r\nClass: LightEventListener : MonoBehaviour\r\nNamespace:
        FunkyCode\r\nFields:\r\n- useDistance : bool\r\n- visability : float\r\n-
        CollisionInfo : Nullable`1\r\n\r\nClass: LightEventListenerCount : MonoBehaviour\r\nNamespace:
        FunkyCode\r\nFields:\r\n- lights : List`1\r\n\r\nClass: LightEventListenerCountGUI
        : MonoBehaviour\r\nNamespace: FunkyCode\r\n\r\nClass: LightEventListenerGUI
        : MonoBehaviour\r\nNamespace: FunkyCode\r\n\r\nClass: LightCollider2D : MonoBehaviour\r\nNamespace:
        FunkyCode\r\nFields:\r\n- shadowType : ShadowType - shadow \r\n- shadowLayer
        : int\r\n- shadowDistance : ShadowDistance\r\n- shadowDistanceMin : float\r\n-
        shadowDistanceMax : float\r\n- shadowTranslucency : float\r\n- maskType :
        MaskType - mask \r\n- maskLit : MaskLit\r\n- maskPivot : MaskPivot\r\n- maskLayer
        : int\r\n- maskLitCustom : float\r\n- bumpMapMode : BumpMapMode\r\n- lightOnEnter
        : LightEvent\r\n- lightOnExit : LightEvent\r\n- mainShape : LightColliderShape\r\n-
        spriteMeshObject : SpriteMeshObject\r\n- static List : List`1\r\n- static
        ListEventReceivers : List`1\r\n- static layerManagerMask : LightColliderLayer`1\r\n-
        static layerManagerShadow : LightColliderLayer`1\r\nProperties:\r\n- isStatic
        : bool\r\nMethods:\r\n- ShadowDisabled() : bool\r\n- AddEventOnEnter(UnityAction`1
        call) : void\r\n- AddEventOnExit(UnityAction`1 call) : void\r\n- AddEvent(CollisionEvent2D
        collisionEvent) : void\r\n- RemoveEvent(CollisionEvent2D collisionEvent)
        : void\r\n- static ForceUpdateAll() : void\r\n- static GetMaskList(int layer)
        : List`1\r\n- static GetShadowList(int layer) : List`1\r\n- CollisionEvent(LightCollision2D
        collision) : void\r\n- InLight(Light2D light) : bool\r\n- UpdateNearbyLights()
        : void\r\n- Initialize() : void\r\n- UpdateLoop() : void\r\n\r\nClass: LightTilemapCollider2D
        : MonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n- mapType : MapType\r\n-
        shadowLayer : int\r\n- maskLayer : int\r\n- shadowTranslucency : float\r\n-
        shadowTileType : ShadowTileType\r\n- bumpMapMode : BumpMapMode\r\n- rectangle
        : Rectangle\r\n- isometric : Isometric\r\n- hexagon : Hexagon\r\n- superTilemapEditor
        : TilemapCollider2D\r\n- lightingTransform : LightTilemapTransform\r\n- static
        List : List`1\r\n- static layerManagerMask : LightColliderLayer`1\r\n- static
        layerManagerCollision : LightColliderLayer`1\r\nMethods:\r\n- static GetMaskList(int
        layer) : List`1\r\n- static GetShadowList(int layer) : List`1\r\n- ShadowsDisabled()
        : bool\r\n- MasksDisabled() : bool\r\n- InLight(Light2D light) : bool\r\n-
        RefreshTile(Vector3Int position) : void\r\n- OnEnable() : void\r\n- OnDisable()
        : void\r\n- Update() : void\r\n- GetCurrentTilemap() : Base\r\n- Initialize()
        : void\r\n- GetTileList() : List`1\r\n- GetTilemapProperties() : TilemapProperties\r\n\r\nClass:
        Light2D : LightingMonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n- lightType
        : LightType\r\n- lightPresetId : int - settings \r\n- eventPresetId : int\r\n-
        lightLayer : int - light layer \r\n- occlusionLayer : int\r\n- translucentLayer
        : int\r\n- translucentPresetId : int\r\n- color : Color\r\n- size : float\r\n-
        spotAngleInner : float\r\n- spotAngleOuter : float\r\n- coreSize : float
        - soft shadow \r\n- falloff : float\r\n- lightStrength : float\r\n- outerAngle
        : float - legacy shadow \r\n- lightRadius : float\r\n- shadowDistanceClose
        : float\r\n- shadowDistanceFar : float\r\n- maskTranslucencyQuality : MaskTranslucencyQuality\r\n-
        maskTranslucencyStrength : float\r\n- applyRotation : Rotation\r\n- textureSize
        : LightingSourceTextureSize\r\n- meshMode : MeshMode\r\n- bumpMap : BumpMap\r\n-
        whenInsideCollider : WhenInsideCollider\r\n- lightSprite : LightSprite\r\n-
        sprite : Sprite\r\n- spriteFlipX : bool\r\n- spriteFlipY : bool\r\n- transform2D
        : LightTransform\r\n- freeForm : LightFreeForm\r\n- freeFormFalloff : float\r\n-
        freeFormPoint : float\r\n- freeFormFalloffStrength : float\r\n- freeFormPoints
        : FreeFormPoints\r\n- eventHandling : LightEventHandling\r\n- static List
        : List`1 - Internal \r\n- drawingEnabled : bool\r\n- drawingTranslucencyEnabled
        : bool\r\nProperties:\r\n- Buffer : LightBuffer2D\r\nMethods:\r\n- AddEvent(CollisionEvent2D
        collisionEvent) : void\r\n- AddCollider(LightCollider2D id) : void\r\n- GetLightPresetLayers()
        : LayerSetting[]\r\n- GetTranslucencyPresetLayers() : LayerSetting[]\r\n-
        GetEventPreset() : EventPreset\r\n- static GetDefaultSprite() : Sprite\r\n-
        GetSprite() : Sprite\r\n- ForceUpdate() : void\r\n- static ForceUpdateAll()
        : void\r\n- OnEnable() : void\r\n- OnDisable() : void\r\n- Free() : void\r\n-
        InCameras() : bool\r\n- InCamera(Camera camera) : bool\r\n- IfDrawLightCollider(LightCollider2D
        lightCollider) : bool\r\n- GetTextureSize() : Vector2Int\r\n- IsPixelPerfect()
        : bool\r\n- GetBuffer() : LightBuffer2D\r\n- UpdateLoop() : void\r\n- DrawMeshMode()
        : void\r\n\r\nClass: LightParticleSystem2D : MonoBehaviour\r\nNamespace:
        FunkyCode\r\nFields:\r\n- lightLayer : int\r\n- color : Color\r\n- useParticleColor
        : bool\r\n- scale : float\r\n- customParticle : Texture\r\n- particleArray
        : Particle[]\r\n- static List : List`1\r\nMethods:\r\n- OnEnable() : void\r\n-
        OnDisable() : void\r\n- GetParticleSystem() : ParticleSystem\r\n- GetParticleSystemRenderer()
        : ParticleSystemRenderer\r\n\r\nClass: LightRoom2D : MonoBehaviour\r\nNamespace:
        FunkyCode\r\nFields:\r\n- lightLayer : int\r\n- color : Color\r\n- shape
        : LightingRoomShape\r\n- spriteMeshObject : SpriteMeshObject\r\n- static
        List : List`1\r\nMethods:\r\n- OnEnable() : void\r\n- OnDisable() : void\r\n-
        Awake() : void\r\n- Initialize() : void\r\n\r\nClass: LightSprite2D : MonoBehaviour\r\nNamespace:
        FunkyCode\r\nFields:\r\n- lightLayer : int\r\n- type : Type\r\n- spriteMode
        : SpriteMode\r\n- sprite : Sprite\r\n- color : Color\r\n- flipX : bool\r\n-
        flipY : bool\r\n- lightSpriteTransform : LightSpriteTransform\r\n- lightSpriteShape
        : LightSpriteShape\r\n- meshMode : MeshMode\r\n- glowMode : GlowMode\r\n-
        spriteRenderer : VirtualSpriteRenderer\r\n- spriteMeshObject : SpriteMeshObject\r\n-
        static List : List`1\r\nMethods:\r\n- OnEnable() : void\r\n- OnDisable()
        : void\r\n- InCamera(Camera camera) : bool\r\n- static GetDefaultSprite()
        : Sprite\r\n- GetSprite() : Sprite\r\n- GetSpriteOrigin() : Sprite\r\n- GetSpriteRenderer()
        : SpriteRenderer\r\n- UpdateLoop() : void\r\n- DrawMesh() : void\r\n\r\nClass:
        LightTexture2D : MonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n- lightLayer
        : int\r\n- texture : Texture\r\n- color : Color\r\n- size : Vector2\r\n-
        shaderMode : ShaderMode\r\n- static List : List`1\r\nMethods:\r\n- OnEnable()
        : void\r\n- OnDisable() : void\r\n- InCamera(Camera camera) : bool\r\n\r\nClass:
        LightTilemapRoom2D : MonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n-
        lightLayer : int\r\n- mapType : MapType\r\n- maskType : MaskType\r\n- shaderType
        : ShaderType\r\n- color : Color\r\n- superTilemapEditor : TilemapRoom2D\r\n-
        rectangle : Rectangle\r\n- lightingTransform : LightingTilemapRoomTransform\r\n-
        static List : List`1\r\nMethods:\r\n- OnEnable() : void\r\n- OnDisable()
        : void\r\n- GetCurrentTilemap() : Base\r\n- Initialize() : void\r\n- Update()
        : void\r\n- GetTilemapProperties() : TilemapProperties\r\n- GetTileList()
        : List`1\r\n- GetRadius() : float\r\n\r\nClass: LightingManager2D : LightingMonoBehaviour\r\nNamespace:
        FunkyCode\r\nFields:\r\n- cameras : LightingCameras\r\n- version : int\r\n-
        version_string : string\r\n- setProfile : Profile\r\n- profile : Profile\r\n-
        foldout_cameras : Boolean[]\r\n- foldout_lightmapPresets : Boolean[,]\r\n-
        foldout_lightmapMaterials : Boolean[,]\r\nMethods:\r\n- GetCamera(int id)
        : Camera\r\n- static ForceUpdate() : void\r\n- static Get() : LightingManager2D\r\n-
        Awake() : void\r\n- FixTransform() : void\r\n- SetupProfile() : void\r\n-
        UpdateInternal() : void\r\n- UpdateProfile() : void\r\n\r\nClass: LightingMeshRenderer
        : LightingMonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n- owner : Object\r\n-
        getSpriteMesh : Mesh\r\n- getMeshLight : Mesh\r\nProperties:\r\n- static
        List : List`1\r\n- Free : bool\r\nMethods:\r\n- GetMaterials() : Material[]\r\n-
        static GetCount() : int\r\n- OnEnable() : void\r\n- OnDisable() : void\r\n-
        Initialize() : void\r\n- Reset() : void\r\n- LateUpdate() : void\r\n- IsRendered()
        : bool\r\n- ClearMaterial() : void\r\n- UpdateLight(Light2D id, MeshMode
        meshMode) : void\r\n- UpdateLightSprite(LightSprite2D id, MeshMode meshMode)
        : void\r\n- GetMeshSprite() : Mesh\r\n- GetMeshLight() : Mesh\r\n\r\nClass:
        OnRenderMode : LightingMonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n-
        mainBuffer : LightMainBuffer2D\r\n- meshRenderer : MeshRenderer\r\n- meshFilter
        : MeshFilter\r\n- static List : List`1\r\nMethods:\r\n- OnEnable() : void\r\n-
        OnDisable() : void\r\n- static Get(LightMainBuffer2D buffer) : OnRenderMode\r\n-
        Initialize(LightMainBuffer2D mainBuffer) : void\r\n- UpdateLoop() : void\r\n-
        UpdatePosition() : void\r\n\r\nClass: LightOcclusion2D : MonoBehaviour\r\nNamespace:
        FunkyCode\r\nFields:\r\n- occlusionType : OcclusionType\r\n- occlusionSize
        : float\r\n- shape : LightingOcclusionShape\r\n- occlusionGameObject : GameObject\r\n-
        meshFilter : MeshFilter\r\n- meshRenderer : MeshRenderer\r\nMethods:\r\n-
        GetOcclusionGameObject() : GameObject\r\n- GetMeshFilter() : MeshFilter\r\n-
        GetMeshRenderer() : MeshRenderer\r\n- GetOcclusionShape() : LightingOcclussion\r\n-
        OnEnable() : void\r\n- Initialize() : void\r\n- Update() : void\r\n\r\nClass:
        LightTilemapOcclusion2D : MonoBehaviour\r\nNamespace: FunkyCode\r\nFields:\r\n-
        tilemapType : MapType\r\n- onlyColliders : bool\r\n- sortingLayer : SortingLayer\r\nMethods:\r\n-
        Initialize() : void\r\n- Update() : void\r\n- SetupMap() : void\r\n- GenerateMesh()
        : void\r\n\r\nStruct: CameraLightmap : ValueType\r\nNamespace: FunkyCode\r\nFields:\r\n-
        rendering : Rendering\r\n- sceneView : SceneView\r\n- overlay : Overlay\r\n-
        overlayLayerType : OverlayLayerType\r\n- overlayMaterial : OverlayMaterial\r\n-
        overlayPosition : OverlayPosition\r\n- output : Output\r\n- sortingLayer
        : SortingLayer\r\n- customMaterial : Material\r\n- customMaterialInstance
        : Material\r\n- materialsType : MaterialType - Output Materials \r\n- materials
        : LightmapMaterials\r\n- renderLayerId : int\r\n- id : int\r\n- presetId
        : int\r\n- customPosition : float\r\nMethods:\r\n- GetMaterials() : LightmapMaterials\r\n-
        GetMaterial() : Material\r\n\r\nStruct: CameraSettings : ValueType\r\nNamespace:
        FunkyCode\r\nFields:\r\n- static initCount : int\r\n- id : int\r\n- cameraType
        : CameraType\r\n- customCamera : Camera\r\nProperties:\r\n- Lightmaps : CameraLightmap[]\r\nMethods:\r\n-
        GetLightmap(int index) : CameraLightmap\r\n- GetTypeName() : string\r\n-
        GetLayerId(int bufferId) : int\r\n- GetCamera() : Camera\r\n- GetHashCode()
        : int\r\n\r\nClass: LightingCameras\r\nNamespace: FunkyCode\r\nFields:\r\n-
        cameraSettings : CameraSettings[]\r\n- static count : int\r\nProperties:\r\n-
        Length : int\r\nMethods:\r\n- Get(int id) : CameraSettings\r\n- Set(int id,
        CameraSettings settings) : void\r\n\r\nClass: LightmapMaterials\r\nNamespace:
        FunkyCode\r\nFields:\r\n- materials : Material[]\r\nMethods:\r\n- static
        ClearMaterial(Material material) : void\r\n- static SetMaterial(int id, MaterialPass
        materialPass) : void\r\n- static SetDayLight() : void\r\n- Add(Material material)
        : void\r\n- Remove(Material material) : void\r\n\r\nClass: LightmapShaders\r\nNamespace:
        FunkyCode\r\nFields:\r\n- static previewTexture : Texture\r\n- static ActivePassLightmaps
        : LightmapPreset[]\r\nMethods:\r\n- static GetPreviewTexture() : Texture\r\n-
        static ResetShaders() : void\r\n- static SetShaders(bool isSceneView, int
        id, Camera camera, LightTexture lightTexture, LightmapPreset lightmapPreset)
        : void\r\n- static SetDayLight() : void\r\n\r\nClass: TilemapManager\r\nNamespace:
        FunkyCode.Chunks\r\nFields:\r\n- display : LightTile[]\r\n- static ChunkSize
        : int\r\n- maps : List`1[,]\r\nMethods:\r\n- GetTiles(Rect worldRect) : int\r\n-
        Update(List`1 tiles, Base tilemapCollider) : void\r\n- static Transform(Vector2
        position) : Vector2Int\r\n- static TransformBounds(Vector2 position) : Vector2Int\r\n\r\nClass:
        CameraTransform\r\nNamespace: FunkyCode\r\nFields:\r\n- static List : List`1\r\nProperties:\r\n-
        Camera : Camera\r\nMethods:\r\n- static Update() : void\r\n- static GetRadius(Camera
        camera) : float\r\n- static GetWorldRect(Camera camera) : Rect\r\n- static
        GetCamera(Camera camera) : CameraTransform\r\n- Update(bool force) : void\r\n-
        WorldRect() : Rect\r\n\r\nClass: DayLightColliderShape\r\nNamespace: FunkyCode\r\nFields:\r\n-
        shadowType : ShadowType\r\n- maskType : MaskType\r\n- transform : Transform\r\n-
        transform2D : DayLightingColliderTransform\r\n- spriteShape : SpriteShape\r\n-
        spritePhysicsShape : SpritePhysicsShape\r\n- colliderShape : Collider2DShape\r\n-
        height : float\r\n- thickness : float\r\n- isStatic : bool\r\nMethods:\r\n-
        SetTransform(Transform t) : void\r\n- ResetLocal() : void\r\n- ResetWorld()
        : void\r\n- GetMeshes() : List`1\r\n- GetPolygonsLocal() : List`1\r\n- GetPolygonsWorld()
        : List`1\r\n- GetShadowBounds() : Rect\r\n\r\nClass: DayLightingColliderTransform\r\nNamespace:
        FunkyCode\r\nFields:\r\n- updateNeeded : bool\r\n- position : Vector2\r\n-
        scale : Vector2\r\n- rotation : float\r\nMethods:\r\n- Reset() : void\r\n-
        SetShape(DayLightColliderShape shape) : void\r\n- Update() : void\r\n\r\nClass:
        DayLightTilemapColliderTransform\r\nNamespace: FunkyCode\r\nFields:\r\n-
        moved : bool\r\nMethods:\r\n- Update(DayLightTilemapCollider2D id) : void\r\n\r\nClass:
        FreeFormPoints\r\nNamespace: FunkyCode\r\nFields:\r\n- points : List`1\r\n\r\nClass:
        LightFreeForm\r\nNamespace: FunkyCode\r\nFields:\r\n- polygon : Polygon2\r\n-
        worldRect : Rect\r\n- UpdateNeeded : bool\r\nMethods:\r\n- ForceUpdate()
        : void\r\n- Update(Light2D source) : void\r\n\r\nClass: LightTransform\r\nNamespace:
        FunkyCode\r\nFields:\r\n- position : Vector2\r\n- rotation : float\r\n- WorldRect
        : Rect\r\nProperties:\r\n- UpdateNeeded : bool\r\nMethods:\r\n- ForceUpdate()
        : void\r\n- ClearUpdate() : void\r\n- Update(Light2D light) : void\r\n\r\nClass:
        LightColliderShape\r\nNamespace: FunkyCode\r\nFields:\r\n- shadowType : ShadowType\r\n-
        maskType : MaskType\r\n- maskPivot : MaskPivot\r\n- transform2D : LightColliderTransform\r\n-
        transform : Transform\r\n- collider2DShape : Collider2DShape\r\n- compositeShape
        : CompositeCollider2DShape\r\n- spriteShape : SpriteShape\r\n- spritePhysicsShape
        : SpritePhysicsShape\r\n- meshShape : MeshRendererShape\r\n- skinnedMeshShape
        : SkinnedMeshRendererShape\r\n- collider3DShape : Collider3DShape\r\nMethods:\r\n-
        GetShadowShape() : Base\r\n- GetMaskShape() : Base\r\n- SetTransform(LightCollider2D
        lightCollider2D) : void\r\n- ResetLocal() : void\r\n- ResetWorld() : void\r\n-
        RectOverlap(Rect rect) : bool\r\n- GetWorldRect() : Rect\r\n- GetSortingOrder()
        : int\r\n- GetSortingLayer() : int\r\n- GetIsoWorldRect() : Rect\r\n- GetMeshes()
        : List`1\r\n- GetPolygonsLocal() : List`1\r\n- GetPolygonsWorld() : List`1\r\n-
        GetPivotPoint() : Vector2\r\n- IsEdgeCollider() : bool\r\n\r\nClass: LightColliderTransform\r\nNamespace:
        FunkyCode\r\nFields:\r\n- shadowHeight : float\r\n- shadowTranslucency :
        float\r\nProperties:\r\n- UpdateNeeded : bool\r\n- Position : Vector2\r\n-
        Scale : Vector2\r\n- Rotation : float\r\nMethods:\r\n- SetShape(LightColliderShape
        shape, LightCollider2D lightCollider) : void\r\n- Reset() : void\r\n- Update(bool
        force) : void\r\n\r\nClass: LightingOcclussion\r\nNamespace: FunkyCode\r\nFields:\r\n-
        polygonPoints : List`1\r\n- outlinePoints : List`1\r\n- polygonPairs : List`1\r\nMethods:\r\n-
        static PreparePolygon(Polygon2 polygon, float size) : Polygon2\r\n\r\nClass:
        OcclusionMesh\r\nNamespace: FunkyCode\r\nFields:\r\n- tileCount : int\r\n-
        vertices : List`1\r\n- uv : List`1\r\n- triangles : List`1\r\n- colors :
        List`1\r\nMethods:\r\n- AddTile(int id, Vector2Int tilePosition, TileRotation
        tileRotation, Color color, bool flipX, bool flipY) : void\r\n- Export() :
        Mesh\r\n\r\nClass: LightingRoomShape\r\nNamespace: FunkyCode\r\nFields:\r\n-
        type : RoomType\r\n- colliderShape : Collider2DShape\r\n- spriteShape : SpriteShape\r\nMethods:\r\n-
        SetTransform(Transform t) : void\r\n- ResetLocal() : void\r\n- ResetWorld()
        : void\r\n- GetMeshes() : List`1\r\n\r\nClass: LightSpriteTransform\r\nNamespace:
        FunkyCode\r\nFields:\r\n- applyRotation : bool\r\n- scale : Vector2\r\n-
        rotation : float\r\n- position : Vector2\r\n\r\nClass: LightSpriteShape\r\nNamespace:
        FunkyCode\r\nFields:\r\n- update : bool\r\nMethods:\r\n- Set(VirtualSpriteRenderer
        spriteRenderer, Transform transform, LightSpriteTransform lightSpriteTransform)
        : void\r\n- Update() : void\r\n- GetWorldRect() : Rect\r\n- GetSpriteWorldPolygon()
        : Polygon2\r\n\r\nClass: LightTile\r\nNamespace: FunkyCode\r\nFields:\r\n-
        gridPosition : Vector3Int\r\n- worldPosition : Nullable`1\r\n- worldRotation
        : float\r\n- worldScale : Vector2\r\n- worldRadius : float\r\n- occluded
        : bool\r\n- colliderType : ColliderType\r\n- uv : Rect\r\n- scale : Vector2\r\n-
        rotation : float\r\n- spriteMeshObject : SpriteMeshObject\r\nMethods:\r\n-
        SetSprite(Sprite sprite) : void\r\n- GetSprite() : Sprite\r\n- NotInRange(Vector2
        pos, float sourceSize) : bool\r\n- ResetLocal() : void\r\n- ResetWorld()
        : void\r\n- UpdateTransform(Base tilemap) : void\r\n- GetWorldPosition(Base
        tilemap) : Vector2\r\n- SetLocalPolygons(List`1 localPolygons) : void\r\n-
        GetWorldPolygons(Base tilemap) : List`1\r\n- GetLocalPolygons(Base tilemap)
        : List`1\r\n- GetPhysicsShapePolygons() : List`1\r\n- GetDynamicMesh() :
        MeshObject\r\n- static GetStaticMesh(Base tilemap) : MeshObject\r\n\r\nClass:
        LightTilemapTransform\r\nNamespace: FunkyCode\r\nFields:\r\n- position :
        Vector2\r\n- rotation : float\r\n- tilemapAnchor : Vector3\r\n- tilemapCellSize
        : Vector3\r\n- tilemapGapSize : Vector3\r\n- sortingOrder : int\r\n- sortingLayerID
        : int\r\n- tilemapRenderer : TilemapRenderer\r\nProperties:\r\n- UpdateNeeded
        : bool\r\nMethods:\r\n- Update(LightTilemapCollider2D tilemapCollider2D)
        : void\r\n- GetTilemapRenderer(GameObject gameObject) : TilemapRenderer\r\n-
        GetTilemap(GameObject gameObject) : Tilemap\r\n- GetGrid(GameObject gameObject)
        : Grid\r\n\r\nClass: TilemapEvents\r\nNamespace: FunkyCode\r\nMethods:\r\n-
        static Initialize() : void\r\n- static Events(Tilemap tilemap, SyncTile[]
        s) : void\r\n\r\nClass: TilemapProperties\r\nNamespace: FunkyCode\r\nFields:\r\n-
        cellSize : Vector2\r\n- cellAnchor : Vector2\r\n- cellGap : Vector2\r\n-
        colliderOffset : Vector2\r\n- area : BoundsInt\r\n- tilemap : Tilemap\r\n-
        grid : Grid\r\n- transform : Transform\r\n\r\nClass: Base\r\nNamespace: FunkyCode.LightTilemapCollider\r\nFields:\r\n-
        shadowType : ShadowType\r\n- maskType : MaskType\r\n- gameObject : GameObject\r\n-
        transform : Transform\r\n- chunkManager : TilemapManager\r\nProperties:\r\n-
        MapTiles : List`1\r\n- Properties : TilemapProperties\r\nMethods:\r\n- ShadowsDisabled()
        : bool\r\n- MasksDisabled() : bool\r\n- TileWorldPosition(LightTile tile)
        : Vector2\r\n- TileWorldRotation(LightTile tile) : float\r\n- TileWorldScale()
        : Vector2\r\n- TilemapType() : MapType\r\n- IsPhysicsShape() : bool\r\n-
        Initialize() : void\r\n- SetGameObject(GameObject gameObject) : void\r\n-
        UpdateProperties() : bool\r\n- ResetWorld() : void\r\n- GetRect() : Rect\r\n-
        GetRadius() : float\r\n\r\nClass: Hexagon : Base\r\nNamespace: FunkyCode.LightTilemapCollider\r\nMethods:\r\n-
        TilemapType() : MapType\r\n- Initialize() : void\r\n- TileWorldPosition(LightTile
        tile) : Vector2\r\n- TileWorldRotation(LightTile tile) : float\r\n- TileWorldScale()
        : Vector2\r\n\r\nClass: Isometric : Base\r\nNamespace: FunkyCode.LightTilemapCollider\r\nFields:\r\n-
        ZasY : bool\r\nMethods:\r\n- TilemapType() : MapType\r\n- Initialize() :
        void\r\n- TileWorldPosition(LightTile tile) : Vector2\r\n- TileWorldRotation(LightTile
        tile) : float\r\n- TileWorldScale() : Vector2\r\n- IsPhysicsShape() : bool\r\n\r\nClass:
        Rectangle : Base\r\nNamespace: FunkyCode.LightTilemapCollider\r\nFields:\r\n-
        compositeColliders : List`1\r\n- shadowOptimization : bool\r\nMethods:\r\n-
        TilemapType() : MapType\r\n- static GetITilemap(Tilemap tilemap) : ITilemap\r\n-
        IsPhysicsShape() : bool\r\n- Initialize() : void\r\n- TileWorldPosition(LightTile
        tile) : Vector2\r\n- TileWorldRotation(LightTile tile) : float\r\n- TileWorldScale()
        : Vector2\r\n- RefreshTile(Vector3Int positionInt) : void\r\n- GetTileToRefresh(Vector3Int
        gridPosition) : LightTile\r\n- GetTile(Vector3Int position) : bool\r\n\r\nClass:
        OcclusionTileset\r\nNamespace: FunkyCode\r\nFields:\r\n- uv : TileUV[]\r\n-
        texture : Texture2D\r\n- sprites : Sprite[]\r\nMethods:\r\n- static Load(string
        path) : OcclusionTileset\r\n\r\nClass: LightingTilemapRoomTransform\r\nNamespace:
        FunkyCode\r\nFields:\r\n- position : Vector2\r\n- rotation : float\r\n- tilemapAnchor
        : Vector3\r\n- tilemapCellSize : Vector3\r\n- tilemapGapSize : Vector3\r\nProperties:\r\n-
        UpdateNeeded : bool\r\nMethods:\r\n- Update(LightTilemapRoom2D tilemapRoom2D)
        : void\r\n- GetTilemap(GameObject gameObject) : Tilemap\r\n- GetGrid(GameObject
        gameObject) : Grid\r\n\r\nClass: LightingDebug\r\nNamespace: FunkyCode\r\nFields:\r\n-
        static atlasTimer : float\r\n- static timer : TimerHelper\r\nMethods:\r\n-
        static OnGUI() : void\r\n- static RightBottomPanel() : void\r\n- static SecondUpdate()
        : void\r\n\r\nClass: LightCollider : Base\r\nNamespace: FunkyCode.EventHandling\r\nFields:\r\n-
        static removePointsColliding : Vector2[]\r\n- static removePointsCollidingCount
        : int\r\n- static removeCollisions : LightCollision2D[]\r\n- static removeCollisionsCount
        : int\r\nMethods:\r\n- static GetCollisions(List`1 collisions, Light2D lightingSource)
        : void\r\n- static RemoveHiddenPoints(List`1 collisions, Light2D light, EventPreset
        eventPreset) : List`1\r\n\r\nStruct: LightCollision2D : ValueType\r\nNamespace:
        FunkyCode\r\nFields:\r\n- light : Light2D\r\n- collider : LightCollider2D\r\n-
        points : List`1\r\n- state : State\r\n\r\nClass: LightTilemap : Base\r\nNamespace:
        FunkyCode.EventHandling\r\nFields:\r\n- static removePointsColliding : Vector2[]\r\n-
        static removePointsCollidingCount : int\r\n- static removeCollisions : LightCollision2D[]\r\n-
        static removeCollisionsCount : int\r\nMethods:\r\n- static RemoveHiddenPoints(List`1
        collisions, Light2D light, EventPreset eventPreset) : List`1\r\n\r\nClass:
        Object\r\nNamespace: FunkyCode.EventHandling\r\nFields:\r\n- listenersCache
        : List`1\r\n- listenersInLight : List`1\r\n- listenersInLightColliders :
        List`1\r\nMethods:\r\n- Update(Light2D light, EventPreset eventPreset) :
        void\r\n\r\nClass: LightingOcclusionShape\r\nNamespace: FunkyCode\r\nFields:\r\n-
        shadowType : ShadowType\r\n- colliderShape : Collider2DShape\r\n- spritePhysicsShape
        : SpritePhysicsShape\r\n- transform : Transform\r\nMethods:\r\n- SetTransform(Transform
        t) : void\r\n- ResetLocal() : void\r\n- ResetWorld() : void\r\n- IsEdgeCollider()
        : bool\r\n- GetMeshes() : List`1\r\n- GetPolygonsLocal() : List`1\r\n- GetPolygonsWorld()
        : List`1\r\n\r\nClass: Collider2DShape : Base\r\nNamespace: FunkyCode.LightShape\r\nFields:\r\n-
        edgeCollider2D : bool\r\nMethods:\r\n- GetMeshes() : List`1\r\n- GetPolygonsLocal()
        : List`1\r\n- GetPolygonsWorld() : List`1\r\n\r\nClass: Collider3DShape :
        Base\r\nNamespace: FunkyCode.LightShape\r\nFields:\r\n- edgeCollider2D :
        bool\r\nMethods:\r\n- GetMeshes() : List`1\r\n- GetPolygonsLocal() : List`1\r\n-
        GetPolygonsWorld() : List`1\r\n\r\nClass: CompositeCollider2DShape : Base\r\nNamespace:
        FunkyCode.LightShape\r\nMethods:\r\n- GetCompositeCollider() : CompositeCollider2D\r\n-
        GetMeshes() : List`1\r\n- GetPolygonsWorld() : List`1\r\n- GetPolygonsLocal()
        : List`1\r\n\r\nClass: MeshRendererShape : Base\r\nNamespace: FunkyCode.LightShape\r\nProperties:\r\n-
        Mesh : Mesh\r\nMethods:\r\n- GetSortingLayer() : int\r\n- GetSortingOrder()
        : int\r\n- ResetLocal() : void\r\n- GetMeshFilter() : MeshFilter\r\n- GetMeshRenderer()
        : MeshRenderer\r\n- GetMeshes() : List`1\r\n- GetPolygonsWorld() : List`1\r\n\r\nClass:
        SkinnedMeshRendererShape : Base\r\nNamespace: FunkyCode.LightShape\r\nMethods:\r\n-
        GetSkinnedMeshRenderer() : SkinnedMeshRenderer\r\n- GetMeshes() : List`1\r\n-
        GetPolygonsWorld() : List`1\r\n\r\nClass: SpritePhysicsShape : Base\r\nNamespace:
        FunkyCode.LightShape\r\nFields:\r\n- physicsShape : PhysicsShape\r\nMethods:\r\n-
        ResetLocal() : void\r\n- GetOriginalSprite() : Sprite\r\n- GetSpriteRenderer()
        : SpriteRenderer\r\n- GetPhysicsShape() : PhysicsShape\r\n- GetMeshes() :
        List`1\r\n- GetPolygonsWorld() : List`1\r\n- GetPolygonsLocal() : List`1\r\n\r\nClass:
        SpriteShape : Base\r\nNamespace: FunkyCode.LightShape\r\nMethods:\r\n- GetSortingLayer()
        : int\r\n- GetSortingOrder() : int\r\n- GetPolygonsLocal() : List`1\r\n-
        GetPolygonsWorld() : List`1\r\n- ResetLocal() : void\r\n- GetSpriteRenderer()
        : SpriteRenderer\r\n- GetOriginalSprite() : Sprite\r\n\r\nClass: Base\r\nNamespace:
        FunkyCode.LightShape\r\nMethods:\r\n- GetSortingOrder() : int\r\n- GetSortingLayer()
        : int\r\n- GetMeshes() : List`1\r\n- GetPolygonsLocal() : List`1\r\n- GetPolygonsWorld()
        : List`1\r\n- SetTransform(Transform transform) : void\r\n- ResetLocal()
        : void\r\n- ResetWorld() : void\r\n- GetWorldRect() : Rect\r\n- GetDayRect(float
        shadowDistance) : Rect\r\n- GetIsoWorldRect() : Rect\r\n- GetPivotPoint_ShapeCenter()
        : Vector2\r\n- GetPivotPoint_TransformCenter() : Vector2\r\n- GetPivotPoint_LowestY()
        : Vector2\r\n\r\nClass: BumpMask\r\nNamespace: FunkyCode.Lighting2DMaterial\r\nMethods:\r\n-
        Reset() : void\r\n- Initialize() : void\r\n- GetNormalMapSpritePixelToLight()
        : Material\r\n- GetNormalMapSpriteObjectToLight() : Material\r\n- GetBumpedDaySprite()
        : Material\r\n\r\nClass: Lights\r\nNamespace: FunkyCode.Lighting2DMaterial\r\nMethods:\r\n-
        Reset() : void\r\n- Initialize() : void\r\n- GetPointLight() : Material\r\n-
        GetSpriteLight() : Material\r\n- GetFreeFormLight() : Material\r\n- GetFreeFormEdgeLight()
        : Material\r\n- GetLightOcclusion() : Material\r\n- GetPointOcclusion() :
        Material\r\n- GetFreeFormOcclusion() : Material\r\n\r\nClass: Mask\r\nNamespace:
        FunkyCode.Lighting2DMaterial\r\nMethods:\r\n- Reset() : void\r\n- GetMask()
        : Material\r\n- GetMaskTranslucency() : Material\r\n- GetDayMask() : Material\r\n-
        Initialize() : void\r\n\r\nClass: Room\r\nNamespace: FunkyCode.Lighting2DMaterial\r\nMethods:\r\n-
        Reset() : void\r\n- Initialize() : void\r\n- GetRoomMask() : Material\r\n-
        GetRoomMultiply() : Material\r\n\r\nClass: Shadow\r\nNamespace: FunkyCode.Lighting2DMaterial\r\nMethods:\r\n-
        Reset() : void\r\n- Initialize() : void\r\n- GetDepthDayShadow() : Material\r\n-
        GetAlphaShadow() : Material\r\n- GetSoftShadow() : Material\r\n- GetSoftShadowDefault()
        : Material\r\n- GetFastShadow() : Material\r\n- GetLegacyGPUShadow() : Material\r\n-
        GetSoftDistanceShadow() : Material\r\n- GetLegacyCPUShadow() : Material\r\n-
        GetPenumbraSprite() : Sprite\r\n- GetPenumbraSprite2() : Sprite\r\n- GetDayCPUShadow()
        : Material\r\n- GetSpriteShadow() : Material\r\n- GetSpriteProjectionMaterial()
        : Material\r\n\r\nClass: Lighting2DMaterials\r\nNamespace: FunkyCode\r\nFields:\r\n-
        mask : Mask\r\n- bumpMask : BumpMask\r\n- shadow : Shadow\r\n- room : Room\r\n-
        lights : Lights\r\nMethods:\r\n- Initialize() : bool\r\n- Reset() : void\r\n-
        GetLightSprite() : Material\r\n- GetMaskBlurVertical() : Material\r\n- GetMaskBlurHorizontal()
        : Material\r\n- GetAdditive() : Material\r\n- GetMultiplyHDR() : Material\r\n-
        GetAlphaColor() : Material\r\n- GetOcclusionEdge() : Material\r\n- GetOcclusionBlur()
        : Material\r\n\r\nClass: LightingMaterial\r\nNamespace: FunkyCode\r\nMethods:\r\n-
        static Load(Material material) : LightingMaterial\r\n- static Load(string
        path) : LightingMaterial\r\n- SetTexture(string path) : void\r\n- SetTexture(Texture
        setTexture) : void\r\n- Get() : Material\r\n\r\nClass: MeshRendererManager\r\nNamespace:
        FunkyCode\r\nMethods:\r\n- static AddBuffer(Object source) : LightingMeshRenderer\r\n-
        static Pull(Object source) : LightingMeshRenderer\r\n\r\nClass: GizmosHelper\r\nNamespace:
        FunkyCode\r\nMethods:\r\n- static DrawRect(Vector3 position, Rect rect) :
        void\r\n- static IsoConvert(Vector3 vector) : Vector3\r\n- static DrawIsoRect(Vector3
        position, Rect rect) : void\r\n- static DrawCircle(Vector3 position, float
        rotation, float angle, float size) : void\r\n- static DrawPolygons(List`1
        polygons, Vector3 position) : void\r\n- static DrawPolygon(Polygon2 polygon,
        Vector3 position) : void\r\n\r\nClass: LightingMonoBehaviour : MonoBehaviour\r\nNamespace:
        FunkyCode\r\nMethods:\r\n- DestroySelf() : void\r\n\r\nClass: LightingPosition\r\nNamespace:
        FunkyCode\r\nMethods:\r\n- static GetPosition2D(Vector3 position3D) : Vector2\r\n-
        static GetPosition3D(Vector2 position2D) : Vector3\r\n- static GetPosition3D(Vector2
        position2D, Vector3 position3D) : Vector3\r\n- static GetPosition3DWorld(Vector2
        position2D, Vector3 position3D) : Vector3\r\n- static GetRotation2D(Transform
        transform) : float\r\n- static GetCameraPlanePosition(Camera camera) : Vector3\r\n-
        static GetCameraCustomPosition(Camera camera, float position) : Vector3\r\n-
        static GetCameraRotation(Camera camera) : float\r\n\r\nClass: LightingRender2D\r\nNamespace:
        FunkyCode\r\nFields:\r\n- static preRenderMesh : Mesh\r\nMethods:\r\n- static
        GetMesh() : Mesh\r\n- static GetTextureSize(LightingSourceTextureSize textureSize)
        : Vector2Int\r\n- static GetSize(Camera camera) : Vector3\r\n- static PostRender(LightMainBuffer2D
        mainBuffer) : void\r\n- static OnRender(LightMainBuffer2D mainBuffer) : void\r\n-
        static PreRender(LightMainBuffer2D mainBuffer) : void\r\n\r\nClass: LightTexture\r\nNamespace:
        FunkyCode\r\nFields:\r\n- renderTexture : RenderTexture\r\n- width : int\r\n-
        height : int\r\n- setWidth : int\r\n- setHeight : int\r\nMethods:\r\n- Create()
        : void\r\n\r\nClass: MeshBrush\r\nNamespace: FunkyCode\r\nFields:\r\n- vertices
        : List`1\r\n- uv : List`1\r\n- triangles : List`1\r\n- colors : List`1\r\nMethods:\r\n-
        Clear() : void\r\n- AddMesh(Mesh mesh, Vector3 offset) : void\r\n- Export()
        : Mesh\r\n\r\nClass: MeshObject\r\nNamespace: FunkyCode\r\nFields:\r\n- mesh
        : Mesh\r\n- vertices : Vector3[]\r\n- uv : Vector2[]\r\n- triangles : Int32[]\r\nMethods:\r\n-
        static Get(Mesh meshOrigin) : MeshObject\r\n\r\nStruct: SpriteTransform :
        ValueType\r\nNamespace: FunkyCode\r\nFields:\r\n- position : Vector2\r\n-
        scale : Vector2\r\n- rotation : float\r\n- uv : Rect\r\n\r\nClass: LightBuffer\r\nNamespace:
        FunkyCode.Rendering\r\nMethods:\r\n- static Render(Light2D light) : void\r\n-
        static RenderTranslucency(Light2D light) : void\r\n- static RenderFreeForm(Light2D
        light) : void\r\n- static UpdateName(LightBuffer2D buffer) : void\r\n- static
        InitializeRenderTexture(LightBuffer2D buffer, Vector2Int textureSize) : void\r\n-
        static InitializeFreeFormTexture(LightBuffer2D buffer, Vector2Int textureSize)
        : void\r\n- static InitializeTranslucencyTexture(LightBuffer2D buffer, Vector2Int
        textureSize) : void\r\n\r\nClass: LightBuffer2D\r\nNamespace: FunkyCode\r\nFields:\r\n-
        name : string\r\n- renderTexture : LightTexture\r\n- translucencyTexture
        : LightTexture\r\n- translucencyTextureBlur : LightTexture\r\n- freeFormTexture
        : LightTexture\r\n- updateNeeded : bool\r\n- static List : List`1\r\nProperties:\r\n-
        Light : Light2D\r\n- Free : bool\r\nMethods:\r\n- static Clear() : void\r\n-
        DestroySelf() : void\r\n- Initiate(Vector2Int textureSize) : void\r\n- Render()
        : void\r\n\r\nClass: LightMainBuffer\r\nNamespace: FunkyCode.Rendering\r\nMethods:\r\n-
        static Update(LightMainBuffer2D buffer) : void\r\n- static DrawPost(LightMainBuffer2D
        buffer) : void\r\n- static DrawOn(LightMainBuffer2D buffer) : void\r\n- static
        Render(LightMainBuffer2D buffer) : void\r\n- static GetScreenResolution(LightMainBuffer2D
        buffer) : Vector2Int\r\n- static InitializeRenderTexture(LightMainBuffer2D
        buffer) : void\r\n\r\nClass: LightMainBuffer2D\r\nNamespace: FunkyCode\r\nFields:\r\n-
        name : string\r\n- updateNeeded : bool\r\n- type : Type\r\n- hdr : HDR\r\n-
        renderTexture : LightTexture\r\n- cameraSettings : CameraSettings\r\n- cameraLightmap
        : CameraLightmap\r\n- sceneView : bool\r\n- static List : List`1\r\nProperties:\r\n-
        IsActive : bool\r\nMethods:\r\n- static Clear() : void\r\n- DestroySelf()
        : void\r\n- static Get(bool sceneView, CameraSettings cameraSettings, CameraLightmap
        lightmap, LightmapPreset lightmapPreset) : LightMainBuffer2D\r\n- GetLightmapPreset()
        : LightmapPreset\r\n- ClearMaterial() : void\r\n- GetMaterial() : Material\r\n-
        Update() : void\r\n- Render() : void\r\n\r\nClass: Manager\r\nNamespace:
        FunkyCode.Buffers\r\nMethods:\r\n- static AddBuffer(Light2D light) : LightBuffer2D\r\n-
        static PullBuffer(Light2D light) : LightBuffer2D\r\n- static FreeBuffer(LightBuffer2D
        buffer) : void\r\n\r\nClass: Main\r\nNamespace: FunkyCode.Rendering.Day\r\nMethods:\r\n-
        static Draw(Camera camera, LightmapPreset lightmapPreset) : void\r\n- static
        IsDrawing(Camera camera, LightmapPreset lightmapPreset) : bool\r\n\r\nClass:
        SpriteRenderer2D\r\nNamespace: FunkyCode.Rendering.Day\r\nFields:\r\n- static
        currentTexture : Texture2D\r\nMethods:\r\n- static Draw(DayLightCollider2D
        id, Vector2 offset) : void\r\n- static DrawTilemap(DayLightTilemapCollider2D
        id, Vector2 offset) : void\r\n- static DrawBumped(DayLightCollider2D id,
        Vector2 offset) : void\r\n\r\nClass: NoSort\r\nNamespace: FunkyCode.Rendering.Day\r\nMethods:\r\n-
        static Draw(Pass pass) : void\r\n\r\nClass: Shadow\r\nNamespace: FunkyCode.Rendering.Day\r\nFields:\r\n-
        static direction : float\r\n- static directionCos : float\r\n- static directionSin
        : float\r\n- static shadowDistance : float\r\n- static pointA : Vector2\r\n-
        static pointB : Vector2\r\n- static pointAOffset : Vector2\r\n- static pointBOffset
        : Vector2\r\nMethods:\r\n- static Begin() : void\r\n- static End() : void\r\n-
        static Draw(DayLightCollider2D id, Vector2 position) : void\r\n- static DrawLine(Vector2
        point, Vector2 nextPoint, int type, float translucency, float softness) :
        void\r\n- static DrawLineTri(Vector2 point, Vector2 nextPoint, int type,
        float translucency, float softness) : void\r\n- static DrawFill(DayLightCollider2D
        id, Vector2 position) : void\r\n- static DrawTilemap(DayLightTilemapCollider2D
        id, Vector2 position, Camera camera) : void\r\n\r\nClass: Pass\r\nNamespace:
        FunkyCode.Rendering.Day\r\nFields:\r\n- sortList : SortList\r\n- sortObject
        : SortObject\r\n- layerId : int\r\n- layer : LightmapLayer\r\n- camera :
        Camera\r\n- offset : Vector2\r\n- colliderList : List`1\r\n- colliderCount
        : int\r\n- drawShadows : bool\r\n- drawMask : bool\r\n- tilemapColliderList
        : List`1\r\n- tilemapColliderCount : int\r\nMethods:\r\n- SortObjects() :
        void\r\n- Setup(LightmapLayer slayer, Camera camera) : bool\r\n\r\nClass:
        SpriteRendererShadow\r\nNamespace: FunkyCode.Rendering.Day\r\nFields:\r\n-
        static currentTexture : Texture2D\r\n- static material : Material\r\n- static
        cameraOffset : Vector2\r\n- static direction : float\r\n- static shadowDistance
        : float\r\n- static pair : Pair2\r\nMethods:\r\n- static Begin(Vector2 offset)
        : void\r\n- static End() : void\r\n- static DrawOffset(DayLightCollider2D
        id) : void\r\n- static DrawProjection(DayLightCollider2D id) : void\r\n-
        static DrawProjectionShape(DayLightCollider2D id) : void\r\n\r\nClass: Sorted\r\nNamespace:
        FunkyCode.Rendering.Day\r\nMethods:\r\n- static Draw(Pass pass) : void\r\n\r\nStruct:
        SortObject : ValueType\r\nNamespace: FunkyCode.Rendering.Day.Sorting\r\nFields:\r\n-
        Distance : float\r\n- LightObject : Object\r\nMethods:\r\n- Compare(SortObject
        a, SortObject b) : int\r\n- static Sort() : IComparer`1\r\n\r\nClass: SortList\r\nNamespace:
        FunkyCode.Rendering.Day.Sorting\r\nFields:\r\n- List : SortObject[]\r\nProperties:\r\n-
        Count : int\r\nMethods:\r\n- Add(Object lightObject, float dist) : void\r\n-
        Reset() : void\r\n- Sort() : void\r\n\r\nClass: Rendering\r\nNamespace: FunkyCode.Rendering.Depth\r\nMethods:\r\n-
        static Draw(Pass pass) : void\r\n- static DrawSprite(Pass pass) : void\r\n-
        static DrawCollider(Pass pass) : void\r\n- static DrawColliderFill(Pass pass)
        : void\r\n\r\nClass: Mesh\r\nNamespace: FunkyCode.Rendering.Light\r\nMethods:\r\n-
        static Mask(Light2D light, LightCollider2D id, Material material, LayerSetting
        layerSetting) : void\r\n- static MaskNormalMap(Light2D light, LightCollider2D
        id, Material material, LayerSetting layerSetting) : void\r\n\r\nClass: Shape\r\nNamespace:
        FunkyCode.Rendering.Light\r\nMethods:\r\n- static Mask(Light2D light, LightCollider2D
        id, LayerSetting layerSetting) : void\r\n\r\nClass: SkinnedMesh\r\nNamespace:
        FunkyCode.Rendering.Light\r\nMethods:\r\n- static Mask(Light2D light, LightCollider2D
        id, Material material, LayerSetting layerSetting) : void\r\n\r\nClass: Tile\r\nNamespace:
        FunkyCode.Rendering.Light\r\nFields:\r\n- static virtualSpriteRenderer :
        VirtualSpriteRenderer\r\nMethods:\r\n- static MaskSprite(LightTile tile,
        LayerSetting layerSetting, Material material, LightTilemapCollider2D tilemap,
        float lightSizeSquared) : void\r\n\r\nClass: UnityTilemap\r\nNamespace: FunkyCode.Rendering.Light\r\nFields:\r\n-
        static virtualSpriteRenderer : VirtualSpriteRenderer\r\nMethods:\r\n- static
        Sprite(Light2D light, LightTilemapCollider2D id, Material material, LayerSetting
        layerSetting) : void\r\n- static BumpedSprite(Light2D light, LightTilemapCollider2D
        id, Material material, LayerSetting layerSetting) : void\r\n- static MaskShape(Light2D
        light, LightTilemapCollider2D id, LayerSetting layerSetting) : void\r\n\r\nClass:
        Fast\r\nNamespace: FunkyCode.Rendering.Light.Shadow\r\nFields:\r\n- static
        pair : Pair2\r\n- static segmentData : Color\r\nMethods:\r\n- static Draw(List`1
        polygons, float translucency) : void\r\n\r\nClass: LegacyCPU\r\nNamespace:
        FunkyCode.Rendering.Light.Shadow\r\nFields:\r\n- static pair : Pair2\r\n-
        static projectedMiddle : Vector2\r\n- static projectedLeft : Vector2 - Middle
        Fin \r\n- static projectedRight : Vector2 - Detailed Shadow \r\n- static
        outerLeft : Vector2\r\n- static outerRight : Vector2\r\n- static edgeAWorld
        : Vector2 - Left Fin \r\n- static edgeBWorld : Vector2\r\n- static edgeALocal
        : Vector2\r\n- static edgeBLocal : Vector2\r\n- static closestPoint : Vector2\r\n-
        static edgeAVector : Vector2\r\n- static edgeBVector : Vector2\r\n- static
        angleA : float\r\n- static angleB : float\r\n- static rotA : float\r\n- static
        rotB : float\r\n- static middle : Vector2\r\n- static sqrt : float\r\nMethods:\r\n-
        static Draw(List`1 polygons, float shadowDistanceMin, float shadowDistanceMax,
        float translucency) : void\r\n\r\nClass: LegacyGPU\r\nNamespace: FunkyCode.Rendering.Light.Shadow\r\nFields:\r\n-
        static pair : Pair2\r\n- static edgeAWorld : Vector2\r\n- static edgeBWorld
        : Vector2\r\nMethods:\r\n- static Draw(List`1 polygons, float distance, float
        translucency) : void\r\n\r\nClass: PerpendicularIntersection\r\nNamespace:
        FunkyCode.Rendering.Light.Shadow\r\nFields:\r\n- static pair : Pair2\r\nMethods:\r\n-
        static Draw(List`1 polygons, float shadowDistance) : void\r\n- static LineIntersectPolygons(Vector2
        startPoint, Vector2 endPoint, List`1 originlPoly) : Nullable`1\r\n\r\nClass:
        Soft\r\nNamespace: FunkyCode.Rendering.Light.Shadow\r\nMethods:\r\n- static
        Draw(List`1 polygons, float shadowTranslucency) : void\r\n\r\nClass: SoftDefault\r\nNamespace:
        FunkyCode.Rendering.Light.Shadow\r\nFields:\r\n- static pair : Pair2\r\n-
        static edgeAWorld : Vector2\r\n- static edgeBWorld : Vector2\r\nMethods:\r\n-
        static Draw(List`1 polygons, float translucency) : void\r\n\r\nClass: SoftDistance\r\nNamespace:
        FunkyCode.Rendering.Light.Shadow\r\nFields:\r\n- static pair : Pair2\r\n-
        static edgeAWorld : Vector2\r\n- static edgeBWorld : Vector2\r\n- static
        edgeALocal : Vector2\r\n- static edgeBLocal : Vector2\r\n- static projectedMiddle
        : Vector2\r\n- static projectedLeft : Vector2\r\n- static projectedRight
        : Vector2\r\n- static outerLeft : Vector2\r\n- static outerRight : Vector2\r\n-
        static edgeAVector : Vector2\r\n- static edgeBVector : Vector2\r\n- static
        sqrt : float\r\nMethods:\r\n- static Draw(List`1 polygons, float shadowDistanceMin,
        float shadowDistanceMax, float translucency) : void\r\n- static DrawLine(Vector2
        point, Vector2 nextPoint, int type, float translucency) : void\r\n\r\nClass:
        SoftShadowSorter\r\nNamespace: FunkyCode\r\nFields:\r\n- static center :
        Vector2\r\n- static minPoint : Vector2\r\n- static maxPoint : Vector2\r\nMethods:\r\n-
        static Set(Polygon2 polygon, Light2D light) : void\r\n\r\nClass: SpriteProjection\r\nNamespace:
        FunkyCode.Rendering.Light.Shadow\r\nFields:\r\n- static pair : Pair2\r\nMethods:\r\n-
        static Draw(List`1 polygons, float shadowDistanceMin, float shadowDistanceMax,
        float translucency) : void\r\n- static LineIntersectPolygons(Vector2 startPoint,
        Vector2 endPoint, List`1 originlPoly) : Nullable`1\r\n\r\nClass: TilemapCollider\r\nNamespace:
        FunkyCode.Rendering.Light.Shadow\r\n\r\nStruct: UVRect : ValueType\r\nNamespace:
        FunkyCode.Rendering.Light\r\nFields:\r\n- x0 : float\r\n- y0 : float\r\n-
        x1 : float\r\n- y1 : float\r\n\r\nClass: ShadowEngine\r\nNamespace: FunkyCode.Rendering.Light\r\nFields:\r\n-
        static light : Light2D\r\n- static lightOffset : Vector2\r\n- static drawOffset
        : Vector2\r\n- static lightSize : float\r\n- static continueDrawing : bool\r\n-
        static ignoreInside : bool\r\n- static dontdrawInside : bool\r\n- static
        objectOffset : Vector2\r\n- static flipX : bool\r\n- static flipY : bool\r\n-
        static spriteProjection : Sprite\r\n- static perpendicularIntersection :
        bool\r\n- static effectLayer : int\r\n- static effectPolygons : List`1 -
        Layer Effect \r\n- static softShadow : bool\r\n- static drawMode : int\r\n-
        static DRAW_MODE_LEGACY_CPU : int\r\n- static DRAW_MODE_LEGACY_GPU : int\r\n-
        static DRAW_MODE_SOFT_CONVEX : int\r\n- static DRAW_MODE_SOFT_VERTEX : int\r\n-
        static DRAW_MODE_SOFT_DISTANCE : int\r\n- static DRAW_MODE_SOFT_DEFAULT :
        int\r\n- static DRAW_MODE_PERPENDICULAR : int\r\n- static DRAW_MODE_SPRITEPROJECTION
        : int\r\n- static DRAW_MODE_FAST : int\r\nMethods:\r\n- static GetMaterial()
        : Material\r\n- static Draw(List`1 polygons, float shadowDistanceMin, float
        shadowDistanceMax, float shadowTranslucency) : void\r\n- static SetPass(Light2D
        lightObject, LayerSetting layer) : void\r\n- static GenerateEffectLayers()
        : void\r\n- static Prepare(Light2D light) : void\r\n\r\nClass: EdgePass\r\nNamespace:
        FunkyCode\r\nFields:\r\n- edgePosition : Vector2\r\n- edgeRotation : float\r\n-
        edgeSize : float\r\n- coreSize : float\r\n- shadowTranslucency : float\r\n-
        var_1 : float\r\n- var_2 : float\r\n- var_3 : float\r\n- var_4 : float\r\n-
        var_5 : float\r\n- var_6 : float\r\n- var_7 : float\r\n- leftEdgeLocal :
        Vector2\r\n- rightEdgeLocal : Vector2\r\n- leftEdge : Vector2\r\n- rightEdge
        : Vector2\r\n- leftOuterCore : float\r\n- leftCoreOut : Vector2\r\n- leftOuterToEdge
        : float\r\n- leftCoreOutToEdge : Vector2\r\n- leftInnerCore : float\r\n-
        leftCoreIn : Vector2\r\n- leftInnerToEdge : float\r\n- leftCoreInToEdge :
        Vector2\r\n- rightOuterCore : float\r\n- rightCoreOut : Vector2\r\n- rightOuterToEdge
        : float\r\n- rightCoreOutToEdge : Vector2\r\n- rightInnerCore : float\r\n-
        rightCoreIn : Vector2\r\n- rightInnerToEdge : float\r\n- rightCoreInToEdge
        : Vector2\r\n- edgeMiddle : Vector2\r\n- projectedMiddle : Vector2\r\nMethods:\r\n-
        SetVars() : void\r\n- Generate() : void\r\n- Draw() : void\r\n\r\nClass:
        SortList\r\nNamespace: FunkyCode.Rendering.Light.Sorting\r\nFields:\r\n-
        List : SortObject[]\r\nProperties:\r\n- Count : int\r\nMethods:\r\n- Add(Object
        collider, float dist) : void\r\n- Add(LightTilemapCollider2D tilemap, LightTile
        tile2D, float value) : void\r\n- Reset() : void\r\n- Sort() : void\r\n\r\nStruct:
        SortObject : ValueType\r\nNamespace: FunkyCode.Rendering.Light.Sorting\r\nFields:\r\n-
        Value : float\r\n- LightObject : Object\r\n- Tilemap : LightTilemapCollider2D\r\nMethods:\r\n-
        Compare(SortObject a, SortObject b) : int\r\n- static Sort() : IComparer`1\r\n\r\nClass:
        SortPass\r\nNamespace: FunkyCode.Rendering.Light.Sorting\r\nFields:\r\n-
        sortList : SortList\r\n- sortObject : SortObject\r\n- pass : Pass\r\nMethods:\r\n-
        Clear() : void\r\n- SortObjects() : void\r\n- AddTileMap(LightTilemapCollider2D
        id) : void\r\n- AddTiles(LightTilemapCollider2D id) : void\r\n\r\nClass:
        LightSource\r\nNamespace: FunkyCode.Rendering.Lightmap\r\nMethods:\r\n- static
        Draw(Light2D light, Camera camera) : void\r\n- static DrawOcclusion(Light2D
        light, Camera camera) : void\r\n- static DrawTranslucent(Light2D light, Camera
        camera) : void\r\n\r\nClass: LightSprite\r\nNamespace: FunkyCode.Rendering.Lightmap\r\n\r\nClass:
        Pass\r\nNamespace: FunkyCode.Rendering.Lightmap\r\nFields:\r\n- sortList
        : SortList\r\n- sortObject : SortObject\r\n- layerId : int\r\n- layer : LightmapLayer\r\n-
        camera : Camera\r\n- offset : Vector2\r\nMethods:\r\n- SortObjects() : void\r\n-
        Setup(LightmapLayer slayer, Camera camera) : bool\r\n\r\nClass: Particle\r\nNamespace:
        FunkyCode.Rendering.Lightmap\r\nMethods:\r\n- static DrawPass(Vector2 pos,
        Vector2 size, float angle) : void\r\n\r\nClass: ParticleRenderer\r\nNamespace:
        FunkyCode.Rendering.Lightmap\r\nMethods:\r\n- static Draw(LightParticleSystem2D
        id, Camera camera) : void\r\n\r\nClass: TextureRenderer\r\nNamespace: FunkyCode.Rendering.Lightmap\r\nMethods:\r\n-
        static Draw(LightTexture2D id, Camera camera) : void\r\n\r\nClass: TilemapRoom\r\nNamespace:
        FunkyCode.Rendering.Lightmap\r\nMethods:\r\n- static Draw(LightTilemapRoom2D
        id, Camera camera) : void\r\n\r\nStruct: MaterialPass : ValueType\r\nNamespace:
        FunkyCode\r\nFields:\r\n- material : Material\r\n- rect : Vector4\r\n- texture
        : Texture\r\n- color : Color\r\n- rotation : float\r\n- isSceneView : bool\r\n-
        passId : int\r\n\r\nClass: MaterialSystem\r\nNamespace: FunkyCode\r\nFields:\r\n-
        static materialPasses : MaterialPass[]\r\n- static Count : int\r\nMethods:\r\n-
        static Clear() : void\r\n- static Add(Material material, bool isSceneView,
        int passId, Camera camera, LightTexture lightTexture, LightmapPreset lightmapPreset)
        : void\r\n\r\nClass: GLExtended\r\nNamespace: FunkyCode\r\nFields:\r\n- static
        color : Color\r\nMethods:\r\n- static ResetColor() : void\r\n- static DrawMeshPass(MeshObject
        mesh, Vector3 position, Vector2 scale, float rotation) : void\r\n- static
        DrawMeshPass(MeshObject mesh) : void\r\n- static DrawMeshPass(List`1 meshes,
        Vector3 position, Vector2 scale, float rotation) : void\r\n- static DrawMesh(MeshObject
        mesh, Vector3 position, Vector2 scale, float rotation) : void\r\n- static
        DrawMesh(List`1 meshes, Vector3 position, Vector2 scale, float rotation)
        : void\r\n\r\nClass: Sprite : Base\r\nNamespace: FunkyCode.Rendering.Universal\r\nMethods:\r\n-
        static Draw(SpriteMeshObject spriteMeshObject, SpriteRenderer spriteRenderer,
        Vector2 position, Vector2 scale, float rotation) : void\r\n\r\nClass: Texture
        : Base\r\nNamespace: FunkyCode.Rendering.Universal\r\n\r\nClass: Sprite :
        Base\r\nNamespace: FunkyCode.Rendering.Universal\r\nMethods:\r\n- static
        Draw(SpriteMeshObject spriteMeshObject, SpriteRenderer spriteRenderer, Vector2
        position, Vector2 scale, float rotation) : void\r\n\r\nClass: SceneView\r\nNamespace:
        FunkyCode\r\nMethods:\r\n- OnDisable() : void\r\n- OnEnable() : void\r\n-
        IsSceneViewActive() : bool\r\n\r\nClass: LayerSetting\r\nNamespace: FunkyCode\r\nFields:\r\n-
        layerID : int\r\n- type : LightLayerType\r\n- sorting : LightLayerSorting\r\n-
        sortingIgnore : LightLayerSortingIgnore\r\n- shadowEffect : LightLayerShadowEffect\r\n-
        shadowEffectLayer : int\r\n- maskLit : LightLayerMaskLit\r\n- maskLitDistance
        : float\r\nMethods:\r\n- GetLayerID() : int\r\n\r\nClass: DayMaskColor\r\nNamespace:
        FunkyCode\r\nMethods:\r\n- static Get(DayLightCollider2D id) : Color\r\n-
        static LitAbove() : Color\r\n\r\nClass: LayerSettingColor\r\nNamespace: FunkyCode\r\nMethods:\r\n-
        static Get(LightColliderShape lightShape, Vector2 position, LayerSetting
        layerSetting, MaskLit maskLit, float maskTranslucency, float maskLitCustom)
        : Color\r\n- static Get(Vector2 position, LayerSetting layerSetting, MaskLit
        maskLit, float maskTranslucency, float maskLitCustom) : Color\r\n- static
        LitAbove(float positionDistance, LayerSetting layerSetting) : Color\r\n\r\nClass:
        Lighting2D\r\nNamespace: FunkyCode\r\nFields:\r\n- static VERSION : int\r\n-
        static VERSION_STRING : string\r\n- static Materials : Lighting2DMaterials\r\nProperties:\r\n-
        static Disable : bool\r\n- static LightmapPresets : LightmapPreset[] - lightmaps
        \r\n- static QualitySettings : QualitySettings - quality \r\n- static DayLightingSettings
        : DayLightingSettings - day lighting \r\n- static RenderingMode : RenderingMode\r\n-
        static CoreAxis : CoreAxis\r\n- static DarknessColor : Color - set & get
        \r\n- static Resolution : float\r\n- static Profile : Profile - lightmaps
        \r\n- static ProjectSettings : ProjectSettings\r\nMethods:\r\n- static UpdateByProfile(Profile
        setProfile) : void\r\n- static RemoveProfile() : void\r\n\r\nClass: QualitySettings\r\nNamespace:
        FunkyCode.LightingSettings\r\nFields:\r\n- static LightingSourceTextureSizeArray
        : String[]\r\n- lightTextureSize : LightingSourceTextureSize\r\n- lightEffectTextureSize
        : LightingSourceTextureSize\r\n- lightFilterMode : FilterMode\r\n- lightmapFilterMode
        : FilterMode\r\n- updateMethod : UpdateMethod\r\n- coreAxis : CoreAxis\r\n-
        projection : Projection\r\n\r\nClass: Layers\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
        colliderLayers : LayersList\r\n- lightLayers : LayersList\r\n- dayLayers
        : LayersList\r\n\r\nClass: LayersList\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
        names : String[]\r\nMethods:\r\n- GetNames() : String[]\r\n- GetOcclusionNames()
        : String[]\r\n- GetTranslucencyNames() : String[]\r\n\r\nClass: DayLightingSettings\r\nNamespace:
        FunkyCode.LightingSettings\r\nFields:\r\n- direction : float\r\n- ShadowColor
        : Color\r\n- height : float\r\n- bumpMap : BumpMap\r\n\r\nClass: SortingLayer\r\nNamespace:
        FunkyCode.LightingSettings\r\nFields:\r\n- Order : int\r\nProperties:\r\n-
        Name : string\r\nMethods:\r\n- ApplyToMeshRenderer(MeshRenderer meshRenderer)
        : void\r\n\r\nClass: EditorView\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
        sceneViewLayer : int\r\n- gameViewLayer : int\r\n\r\nClass: Gizmos\r\nNamespace:
        FunkyCode.LightingSettings\r\nFields:\r\n- drawGizmos : EditorDrawGizmos\r\n-
        drawGizmosBounds : EditorGizmosBounds\r\n- drawGizmosChunks : EditorChunks\r\n-
        drawGizmosShadowCasters : EditorShadowCasters\r\n- drawIcons : EditorIcons\r\n-
        sceneViewLayer : int\r\n- gameViewLayer : int\r\n\r\nClass: Chunks\r\nNamespace:
        FunkyCode.LightingSettings\r\nFields:\r\n- enabled : bool\r\n- chunkSize
        : int\r\n\r\nClass: MeshMode\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
        enable : bool\r\n- alpha : float\r\n- shader : MeshModeShader\r\n- materials
        : Material[]\r\n- sortingLayer : SortingLayer\r\n\r\nClass: BumpMapMode\r\nNamespace:
        FunkyCode.LightingSettings\r\nFields:\r\n- type : NormalMapType\r\n- textureType
        : NormalMapTextureType\r\n- texture : Texture\r\n- sprite : Sprite\r\n- invertX
        : bool\r\n- invertY : bool\r\n- depth : float\r\n- spriteRenderer : SpriteRenderer\r\nMethods:\r\n-
        SetSpriteRenderer(SpriteRenderer spriteRenderer) : void\r\n- GetBumpTexture()
        : Texture\r\n- SelectMaterial(Material pixel, Material direction) : Material\r\n\r\nClass:
        DayNormalMapMode\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
        textureType : NormalMapTextureType\r\n- texture : Texture\r\n- sprite : Sprite\r\nMethods:\r\n-
        GetBumpTexture() : Texture\r\n\r\nClass: GlowMode\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
        enable : bool\r\n- glowRadius : float\r\n\r\nClass: LightEvent : UnityEvent`1\r\nNamespace:
        FunkyCode.LightSettings\r\n\r\nClass: EventPresetList\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
        list : EventPreset[]\r\nMethods:\r\n- GetBufferLayers() : String[]\r\n- Get()
        : EventPreset[]\r\n\r\nClass: EventPreset\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
        name : string\r\n- layerSetting : EventPresetLayers\r\n\r\nClass: EventPresetLayers\r\nNamespace:
        FunkyCode.LightingSettings\r\nFields:\r\n- list : LayerEventSetting[]\r\nMethods:\r\n-
        SetArray(LayerEventSetting[] array) : void\r\n- Get() : LayerEventSetting[]\r\n\r\nClass:
        LightmapPresetList\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
        list : LightmapPreset[]\r\nProperties:\r\n- Item : LightmapPreset\r\nMethods:\r\n-
        GetLightmapLayers() : String[]\r\n\r\nClass: LightmapPreset\r\nNamespace:
        FunkyCode.LightingSettings\r\nFields:\r\n- name : string\r\n- type : Type\r\n-
        hdr : HDR\r\n- darknessColor : Color\r\n- depth : int\r\n- resolution : float\r\n-
        dayLayers : LightmapLayerList\r\n- lightLayers : LightmapLayerList\r\n\r\nClass:
        LightmapLayerList\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
        list : LightmapLayer[]\r\nProperties:\r\n- Item : LightmapLayer\r\nMethods:\r\n-
        SetArray(LightmapLayer[] array) : void\r\n- Get() : LightmapLayer[]\r\n\r\nClass:
        LightmapLayer\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n- id
        : int\r\n- type : LayerType\r\n- sorting : LayerSorting\r\nMethods:\r\n-
        GetLayerID() : int\r\n\r\nClass: LightPresetList\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
        list : LightPreset[]\r\nProperties:\r\n- Item : LightPreset\r\nMethods:\r\n-
        GetPresetNames() : String[]\r\n- Get() : LightPreset[]\r\n\r\nClass: LightPreset\r\nNamespace:
        FunkyCode.LightingSettings\r\nFields:\r\n- name : string\r\n- layerSetting
        : LightPresetLayers\r\n\r\nClass: LightPresetLayers\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
        list : LayerSetting[]\r\nProperties:\r\n- Item : LayerSetting\r\nMethods:\r\n-
        SetArray(LayerSetting[] array) : void\r\n- Get() : LayerSetting[]\r\n\r\nClass:
        Profile : ScriptableObject\r\nNamespace: FunkyCode.LightingSettings\r\nFields:\r\n-
        lightmapPresets : LightmapPresetList\r\n- lightPresets : LightPresetList\r\n-
        eventPresets : EventPresetList\r\n- qualitySettings : QualitySettings\r\n-
        dayLightingSettings : DayLightingSettings\r\n- layers : Layers\r\nProperties:\r\n-
        DarknessColor : Color\r\n\r\nClass: ProjectSettings : ScriptableObject\r\nNamespace:
        FunkyCode.LightingSettings\r\nFields:\r\n- renderingMode : RenderingMode\r\n-
        editorView : EditorView\r\n- gizmos : Gizmos\r\n- chunks : Chunks\r\n- colorSpace
        : ColorSpace\r\n- managerInternal : ManagerInternal\r\n- managerInstance
        : ManagerInstance\r\n- shaderPreview : ShaderPreview\r\n- MaxLightSize :
        int\r\n- materialOffScreen : MaterialOffScreen\r\n- disable : bool\r\n- profile
        : Profile\r\nProperties:\r\n- Profile : Profile\r\n\r\nClass: SpriteMesh\r\nMethods:\r\n-
        Get(SpriteRenderer spriteRenderer, Vector2 size, Vector2 uv0, Vector2 uv1)
        : Mesh\r\n\r\nClass: SpriteMeshObject\r\nNamespace: FunkyCode\r\nMethods:\r\n-
        GetTiledMesh() : SpriteTiledMesh\r\n\r\nClass: SpriteTiledMesh\r\nNamespace:
        FunkyCode\r\nMethods:\r\n- GetMesh(SpriteRenderer spriteRenderer) : MeshObject\r\n\r\nClass:
        PhysicsShape\r\nNamespace: FunkyCode.SpriteExtension\r\nMethods:\r\n- Get()
        : List`1\r\n- GetSprite() : Sprite\r\n- GetMesh() : MeshObject\r\n\r\nClass:
        PhysicsShapeManager\r\nNamespace: FunkyCode.SpriteExtension\r\nFields:\r\n-
        static dictionary : Dictionary`2\r\nMethods:\r\n- static Clear() : void\r\n-
        static RequestCustomShape(Sprite originalSprite) : PhysicsShape\r\n- static
        RequestCustomShapeAccess(Sprite originalSprite) : PhysicsShape\r\n\r\nClass:
        TilemapCollider2D : TilemapCollider\r\nNamespace: FunkyCode.SuperTilemapEditorSupport\r\n\r\nClass:
        TilemapCollider2D : TilemapCollider\r\nNamespace: FunkyCode.SuperTilemapEditorSupport\r\n\r\nClass:
        TilemapCollider : Base\r\nNamespace: FunkyCode.SuperTilemapEditorSupport\r\nFields:\r\n-
        shadowTypeSTE : ShadowType\r\n- maskTypeSTE : MaskType\r\n- eventsInit :
        bool\r\n\r\nClass: TilemapRoom2D : Base\r\nNamespace: FunkyCode.SuperTilemapEditorSupport\r\nMethods:\r\n-
        Initialize() : void\r\n\r\nClass: TilemapRoom2D : Base\r\nNamespace: FunkyCode.SuperTilemapEditorSupport\r\nMethods:\r\n-
        Initialize() : void\r\n\r\nClass: Grid\r\nNamespace: FunkyCode.SuperTilemapEditorSupport.Light.Mask\r\nMethods:\r\n-
        static Draw(Light2D light, LightTilemapCollider2D id) : void\r\n\r\nClass:
        Grid\r\nNamespace: FunkyCode.SuperTilemapEditorSupport.Light.Mask\r\nMethods:\r\n-
        static Draw(Light2D light, LightTilemapCollider2D id) : void\r\n\r\nClass:
        Collider\r\nNamespace: FunkyCode.SuperTilemapEditorSupport.Light.Shadow\r\nMethods:\r\n-
        static Draw(Light2D light, LightTilemapCollider2D id) : void\r\n\r\nClass:
        Collider\r\nNamespace: FunkyCode.SuperTilemapEditorSupport.Light.Shadow\r\nMethods:\r\n-
        static Draw(Light2D light, LightTilemapCollider2D id) : void\r\n\r\nClass:
        TilemapCollider : Base\r\nNamespace: FunkyCode.SuperTilemapEditorSupport\r\nFields:\r\n-
        shadowTypeSTE : ShadowType\r\n- maskTypeSTE : MaskType\r\n- eventsInit :
        bool\r\n\r\nClass: Mesh2D : MonoBehaviour\r\nNamespace: FunkyCode.Utilities\r\nFields:\r\n-
        triangulation : Triangulation\r\n- material : Material - Optionable material
        \r\n- materialScale : Vector2\r\n- materialOffset : Vector2\r\n- sortingLayerName
        : string\r\n- sortingOrder : int\r\n- meshRenderer : MeshRenderer\r\nMethods:\r\n-
        Initialize() : void\r\n\r\nClass: MaterialManager\r\nNamespace: FunkyCode.Utilities\r\nMethods:\r\n-
        static GetVertexLitCopy() : SmartMaterial\r\n- static GetAdditiveCopy() :
        SmartMaterial\r\n- static GetAlphaCopy() : SmartMaterial\r\n- static GetSpriteCopy()
        : SmartMaterial\r\n\r\nClass: Max2D\r\nNamespace: FunkyCode.Utilities\r\nFields:\r\n-
        static shaderPath : string\r\n- static texCoord : Vector2\r\nMethods:\r\n-
        static DrawTriangle(float x0, float y0, float x1, float y1, float x2, float
        y2, Vector2 offset, float z) : void\r\n- static DrawTriangle(Vector2 vA,
        Vector2 vB, Vector2 vC, Vector2 scale, float z) : void\r\n- static DrawTriangle(Vector2
        vA, Vector2 vB, Vector2 vC, Vector2 offset, Vector2 scale, float z) : void\r\n-
        static DrawQuad(Vector2 vA, Vector2 vB, Vector2 vC, Vector2 vD, float z)
        : void\r\n\r\nClass: Mesh2DSubmesh\r\nNamespace: FunkyCode.Utilities\r\nFields:\r\n-
        uv : Vector2[]\r\n- vertices : Vector3[]\r\n\r\nClass: Mesh2DMesh\r\nNamespace:
        FunkyCode.Utilities\r\nFields:\r\n- submeshes : List`1\r\n- verticesCount
        : int\r\nMethods:\r\n- Add(Mesh2DSubmesh m) : void\r\n\r\nClass: Max2DMesh\r\nNamespace:
        FunkyCode.Utilities\r\nMethods:\r\n- static Draw(Mesh mesh, Transform transform,
        Material material) : void\r\n- static Draw(Mesh mesh, Material material)
        : void\r\n- static CreatePolygon(Transform transform, Polygon2D polygon,
        float lineOffset, float lineWidth, bool connectedLine) : Mesh\r\n- static
        CreateLine(Pair2D pair, Vector3 transformScale, float lineWidth, float z)
        : Mesh2DSubmesh\r\n- static Export(Mesh2DMesh trianglesList) : Mesh\r\n\r\nClass:
        SmartMaterial\r\nNamespace: FunkyCode.Utilities\r\nFields:\r\n- material
        : Material\r\nMethods:\r\n- static LoadShader(string path) : Shader\r\n-
        SetTexture(Texture texture) : void\r\n\r\nClass: DelaunayTriangle\r\nNamespace:
        FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n- Points : FixedArray3`1\r\n-
        Neighbors : FixedArray3`1\r\n- EdgeIsDelaunay : FixedBitArray3\r\nProperties:\r\n-
        EdgeIsConstrained : FixedBitArray3\r\n- IsInterior : bool\r\nMethods:\r\n-
        IndexOf(TriangulationPoint p) : int\r\n- IndexCWFrom(TriangulationPoint p)
        : int\r\n- IndexCCWFrom(TriangulationPoint p) : int\r\n- Contains(TriangulationPoint
        p) : bool\r\n- MarkNeighbor(DelaunayTriangle t) : void\r\n- ClearNeighbors()
        : void\r\n- ClearNeighbor(DelaunayTriangle triangle) : void\r\n- Clear()
        : void\r\n- OppositePoint(DelaunayTriangle t, TriangulationPoint p) : TriangulationPoint\r\n-
        NeighborCWFrom(TriangulationPoint point) : DelaunayTriangle\r\n- NeighborCCWFrom(TriangulationPoint
        point) : DelaunayTriangle\r\n- NeighborAcrossFrom(TriangulationPoint point)
        : DelaunayTriangle\r\n- PointCCWFrom(TriangulationPoint point) : TriangulationPoint\r\n-
        PointCWFrom(TriangulationPoint point) : TriangulationPoint\r\n- Legalize(TriangulationPoint
        oPoint, TriangulationPoint nPoint) : void\r\n- ToString() : string\r\n- MarkNeighborEdges()
        : void\r\n- MarkEdge(DelaunayTriangle triangle) : void\r\n- MarkEdge(List`1
        tList) : void\r\n- MarkConstrainedEdge(int index) : void\r\n- MarkConstrainedEdge(DTSweepConstraint
        edge) : void\r\n- MarkConstrainedEdge(TriangulationPoint p, TriangulationPoint
        q) : void\r\n- Area() : double\r\n- Centroid() : TriangulationPoint\r\n-
        EdgeIndex(TriangulationPoint p1, TriangulationPoint p2) : int\r\n- GetConstrainedEdgeCCW(TriangulationPoint
        p) : bool\r\n- GetConstrainedEdgeCW(TriangulationPoint p) : bool\r\n- GetConstrainedEdgeAcross(TriangulationPoint
        p) : bool\r\n- SetConstrainedEdgeCCW(TriangulationPoint p, bool ce) : void\r\n-
        SetConstrainedEdgeCW(TriangulationPoint p, bool ce) : void\r\n- SetConstrainedEdgeAcross(TriangulationPoint
        p, bool ce) : void\r\n- GetDelaunayEdgeCCW(TriangulationPoint p) : bool\r\n-
        GetDelaunayEdgeCW(TriangulationPoint p) : bool\r\n- GetDelaunayEdgeAcross(TriangulationPoint
        p) : bool\r\n- SetDelaunayEdgeCCW(TriangulationPoint p, bool ce) : void\r\n-
        SetDelaunayEdgeCW(TriangulationPoint p, bool ce) : void\r\n- SetDelaunayEdgeAcross(TriangulationPoint
        p, bool ce) : void\r\n- GetEdge(int idx, DTSweepConstraint& edge) : bool\r\n-
        GetEdgeCCW(TriangulationPoint p, DTSweepConstraint& edge) : bool\r\n- GetEdgeCW(TriangulationPoint
        p, DTSweepConstraint& edge) : bool\r\n- GetEdgeAcross(TriangulationPoint
        p, DTSweepConstraint& edge) : bool\r\n\r\nClass: DTSweep\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nMethods:\r\n-
        static Triangulate(DTSweepContext tcx) : void\r\n\r\nClass: AdvancingFront\r\nNamespace:
        FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n- Head : AdvancingFrontNode\r\n-
        Tail : AdvancingFrontNode\r\nMethods:\r\n- AddNode(AdvancingFrontNode node)
        : void\r\n- RemoveNode(AdvancingFrontNode node) : void\r\n- ToString() :
        string\r\n- LocateNode(TriangulationPoint point) : AdvancingFrontNode\r\n-
        LocatePoint(TriangulationPoint point) : AdvancingFrontNode\r\n\r\nClass:
        AdvancingFrontNode\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n-
        Next : AdvancingFrontNode\r\n- Prev : AdvancingFrontNode\r\n- Value : double\r\n-
        Point : TriangulationPoint\r\n- Triangle : DelaunayTriangle\r\nProperties:\r\n-
        HasNext : bool\r\n- HasPrev : bool\r\n\r\nClass: DTSweepBasin\r\nNamespace:
        FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n- leftNode : AdvancingFrontNode\r\n-
        bottomNode : AdvancingFrontNode\r\n- rightNode : AdvancingFrontNode\r\n-
        width : double\r\n- leftHighest : bool\r\n\r\nClass: DTSweepConstraint :
        TriangulationConstraint\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\n\r\nClass:
        DTSweepDebugContext : TriangulationDebugContext\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
        PrimaryTriangle : DelaunayTriangle\r\n- SecondaryTriangle : DelaunayTriangle\r\n-
        ActivePoint : TriangulationPoint\r\n- ActiveNode : AdvancingFrontNode\r\n-
        ActiveConstraint : DTSweepConstraint\r\n- IsDebugContext : bool\r\nMethods:\r\n-
        Clear() : void\r\n\r\nClass: DTSweepEdgeEvent\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n-
        ConstrainedEdge : DTSweepConstraint\r\n- Right : bool\r\n\r\nClass: DTSweepPointComparator\r\nNamespace:
        FunkyCode.Utilities.Polygon2DTriangulation\r\nMethods:\r\n- Compare(TriangulationPoint
        p1, TriangulationPoint p2) : int\r\n\r\nClass: PointOnEdgeException : NotImplementedException\r\nNamespace:
        FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n- A : TriangulationPoint\r\n-
        B : TriangulationPoint\r\n- C : TriangulationPoint\r\n\r\nClass: DTSweepContext
        : TriangulationContext\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n-
        Front : AdvancingFront\r\n- Basin : DTSweepBasin\r\n- EdgeEvent : DTSweepEdgeEvent\r\nProperties:\r\n-
        Head : TriangulationPoint\r\n- Tail : TriangulationPoint\r\n- Algorithm :
        TriangulationAlgorithm\r\n- IsDebugEnabled : bool\r\nMethods:\r\n- RemoveFromList(DelaunayTriangle
        triangle) : void\r\n- MeshClean(DelaunayTriangle triangle) : void\r\n- Clear()
        : void\r\n- AddNode(AdvancingFrontNode node) : void\r\n- RemoveNode(AdvancingFrontNode
        node) : void\r\n- LocateNode(TriangulationPoint point) : AdvancingFrontNode\r\n-
        CreateAdvancingFront() : void\r\n- MapTriangleToNodes(DelaunayTriangle t)
        : void\r\n- PrepareTriangulation(ITriangulatable t) : void\r\n- FinalizeTriangulation()
        : void\r\n- NewConstraint(TriangulationPoint a, TriangulationPoint b) : TriangulationConstraint\r\n\r\nClass:
        PolygonUtil\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nMethods:\r\n-
        static CalculateWindingOrder(IList`1 l) : WindingOrderType\r\n- static PolygonsAreSame2D(IList`1
        poly1, IList`1 poly2) : bool\r\n- static PointInPolygon2D(IList`1 polygon,
        Point2D p) : bool\r\n- static PolygonsIntersect2D(IList`1 poly1, Rect2D boundRect1,
        IList`1 poly2, Rect2D boundRect2) : bool\r\n- PolygonContainsPolygon(IList`1
        poly1, Rect2D boundRect1, IList`1 poly2, Rect2D boundRect2) : bool\r\n- static
        PolygonContainsPolygon(IList`1 poly1, Rect2D boundRect1, IList`1 poly2, Rect2D
        boundRect2, bool runIntersectionTest) : bool\r\n- static ClipPolygonToEdge2D(Point2D
        edgeBegin, Point2D edgeEnd, IList`1 poly, List`1& outPoly) : void\r\n- static
        ClipPolygonToPolygon(IList`1 poly, IList`1 clipPoly, List`1& outPoly) : void\r\n-
        static PolygonUnion(Point2DList polygon1, Point2DList polygon2, Point2DList&
        union) : PolyUnionError\r\n- static PolygonIntersect(Point2DList polygon1,
        Point2DList polygon2, Point2DList& intersectOut) : PolyUnionError\r\n- static
        PolygonSubtract(Point2DList polygon1, Point2DList polygon2, Point2DList&
        subtract) : PolyUnionError\r\n- static PolygonSubtractInternal(PolygonOperationContext
        ctx) : void\r\n- static PolygonOperation(PolyOperation operations, Point2DList
        polygon1, Point2DList polygon2, Dictionary`2& results) : PolyUnionError\r\n-
        static PolygonOperation(PolygonOperationContext ctx) : PolyUnionError\r\n-
        static SplitComplexPolygon(Point2DList verts, double epsilon) : List`1\r\n\r\nClass:
        EdgeIntersectInfo\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
        EdgeOne : Edge\r\n- EdgeTwo : Edge\r\n- IntersectionPoint : Point2D\r\n\r\nClass:
        SplitComplexPolygonNode\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
        NumConnected : int\r\n- Position : Point2D\r\n- Item : SplitComplexPolygonNode\r\nMethods:\r\n-
        Equals(Object obj) : bool\r\n- Equals(SplitComplexPolygonNode pn) : bool\r\n-
        GetHashCode() : int\r\n- ToString() : string\r\n- AddConnection(SplitComplexPolygonNode
        toMe) : void\r\n- RemoveConnection(SplitComplexPolygonNode fromMe) : void\r\n-
        ClearConnections() : void\r\n- GetRightestConnection(SplitComplexPolygonNode
        incoming) : SplitComplexPolygonNode\r\n- GetRightestConnection(Point2D incomingDir)
        : SplitComplexPolygonNode\r\n\r\nClass: PolygonOperationContext\r\nNamespace:
        FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n- mOperations :
        PolyOperation\r\n- mOriginalPolygon1 : Point2DList\r\n- mOriginalPolygon2
        : Point2DList\r\n- mPoly1 : Point2DList\r\n- mPoly2 : Point2DList\r\n- mIntersections
        : List`1\r\n- mStartingIndex : int\r\n- mError : PolyUnionError\r\n- mPoly1VectorAngles
        : List`1\r\n- mPoly2VectorAngles : List`1\r\n- mOutput : Dictionary`2\r\nProperties:\r\n-
        Union : Point2DList\r\n- Intersect : Point2DList\r\n- Subtract : Point2DList\r\nMethods:\r\n-
        Clear() : void\r\n- Init(PolyOperation operations, Point2DList polygon1,
        Point2DList polygon2) : bool\r\n- PointInPolygonAngle(Point2D point, Point2DList
        polygon) : bool\r\n- VectorAngle(Point2D p1, Point2D p2) : double\r\n\r\nClass:
        Contour : Point2DList\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
        Item : TriangulationPoint\r\n- Name : string\r\n- Triangles : IList`1\r\n-
        TriangulationMode : TriangulationMode\r\n- FileName : string\r\n- DisplayFlipX
        : bool\r\n- DisplayFlipY : bool\r\n- DisplayRotate : float\r\n- Precision
        : double\r\n- MinX : double\r\n- MaxX : double\r\n- MinY : double\r\n- MaxY
        : double\r\n- Bounds : Rect2D\r\nMethods:\r\n- ToString() : string\r\n- IndexOf(TriangulationPoint
        p) : int\r\n- Add(TriangulationPoint p) : void\r\n- AddRange(IEnumerator`1
        iter, WindingOrderType windingOrder) : void\r\n- AddRange(IList`1 points,
        WindingOrderType windingOrder) : void\r\n- Insert(int idx, TriangulationPoint
        p) : void\r\n- Remove(TriangulationPoint p) : bool\r\n- Contains(TriangulationPoint
        p) : bool\r\n- CopyTo(TriangulationPoint[] array, int arrayIndex) : void\r\n-
        GetNumHoles(bool parentIsHole) : int\r\n- GetNumHoles() : int\r\n- GetHole(int
        idx) : Contour\r\n- GetActualHoles(bool parentIsHole, List`1& holes) : void\r\n-
        GetHoleEnumerator() : Enumerator\r\n- InitializeHoles(ConstrainedPointSet
        cps) : void\r\n- static InitializeHoles(List`1 holes, ITriangulatable parent,
        ConstrainedPointSet cps) : void\r\n- Prepare(TriangulationContext tcx) :
        void\r\n- AddTriangle(DelaunayTriangle t) : void\r\n- AddTriangles(IEnumerable`1
        list) : void\r\n- ClearTriangles() : void\r\n- FindPointInContour() : Point2D\r\n-
        IsPointInsideContour(Point2D p) : bool\r\n\r\nClass: Polygon : Point2DList\r\nNamespace:
        FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n- Points : IList`1\r\n-
        Triangles : IList`1\r\n- TriangulationMode : TriangulationMode\r\n- FileName
        : string\r\n- DisplayFlipX : bool\r\n- DisplayFlipY : bool\r\n- DisplayRotate
        : float\r\n- Precision : double\r\n- MinX : double\r\n- MaxX : double\r\n-
        MinY : double\r\n- MaxY : double\r\n- Bounds : Rect2D\r\n- Item : TriangulationPoint\r\n-
        Holes : IList`1\r\nMethods:\r\n- IndexOf(TriangulationPoint p) : int\r\n-
        Add(Point2D p) : void\r\n- Add(TriangulationPoint p) : void\r\n- Add(PolygonPoint
        p) : void\r\n- AddRange(IList`1 points, WindingOrderType windingOrder) :
        void\r\n- AddRange(IList`1 points, WindingOrderType windingOrder) : void\r\n-
        Insert(int idx, TriangulationPoint p) : void\r\n- Remove(TriangulationPoint
        p) : bool\r\n- RemovePoint(PolygonPoint p) : void\r\n- Contains(TriangulationPoint
        p) : bool\r\n- CopyTo(TriangulationPoint[] array, int arrayIndex) : void\r\n-
        AddSteinerPoint(TriangulationPoint point) : void\r\n- AddSteinerPoints(List`1
        points) : void\r\n- ClearSteinerPoints() : void\r\n- AddHole(Polygon poly)
        : void\r\n- AddTriangle(DelaunayTriangle t) : void\r\n- AddTriangles(IEnumerable`1
        list) : void\r\n- ClearTriangles() : void\r\n- IsPointInside(TriangulationPoint
        p) : bool\r\n- Prepare(TriangulationContext tcx) : void\r\n\r\nClass: PolygonPoint
        : TriangulationPoint\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
        Next : PolygonPoint\r\n- Previous : PolygonPoint\r\nMethods:\r\n- static
        ToBasePoint(PolygonPoint p) : Point2D\r\n- static ToTriangulationPoint(PolygonPoint
        p) : TriangulationPoint\r\n\r\nClass: PolygonSet\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
        Polygons : IEnumerable`1\r\nMethods:\r\n- Add(Polygon p) : void\r\n\r\nInterface:
        ITriangulatable\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
        Triangles : IList`1\r\n- TriangulationMode : TriangulationMode\r\n- FileName
        : string\r\n- DisplayFlipX : bool\r\n- DisplayFlipY : bool\r\n- DisplayRotate
        : float\r\n- Precision : double\r\n- MinX : double\r\n- MaxX : double\r\n-
        MinY : double\r\n- MaxY : double\r\n- Bounds : Rect2D\r\nMethods:\r\n- Prepare(TriangulationContext
        tcx) : void\r\n- AddTriangle(DelaunayTriangle t) : void\r\n- AddTriangles(IEnumerable`1
        list) : void\r\n- ClearTriangles() : void\r\n\r\nClass: Edge\r\nNamespace:
        FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n- EdgeStart
        : Point2D\r\n- EdgeEnd : Point2D\r\n\r\nClass: TriangulationConstraint :
        Edge\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
        P : TriangulationPoint\r\n- Q : TriangulationPoint\r\n- ConstraintCode :
        UInt32\r\nMethods:\r\n- ToString() : string\r\n- CalculateContraintCode()
        : void\r\n- static CalculateContraintCode(TriangulationPoint p, TriangulationPoint
        q) : UInt32\r\n\r\nClass: TriangulationContext\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n-
        Triangles : List`1\r\n- Points : List`1\r\nProperties:\r\n- DebugContext
        : TriangulationDebugContext\r\n- TriangulationMode : TriangulationMode\r\n-
        Triangulatable : ITriangulatable\r\n- StepCount : int\r\n- Algorithm : TriangulationAlgorithm\r\n-
        IsDebugEnabled : bool\r\n- DTDebugContext : DTSweepDebugContext\r\nMethods:\r\n-
        Done() : void\r\n- PrepareTriangulation(ITriangulatable t) : void\r\n- NewConstraint(TriangulationPoint
        a, TriangulationPoint b) : TriangulationConstraint\r\n- Update(string message)
        : void\r\n- Clear() : void\r\n\r\nClass: TriangulationDebugContext\r\nNamespace:
        FunkyCode.Utilities.Polygon2DTriangulation\r\nMethods:\r\n- Clear() : void\r\n\r\nClass:
        TriangulationPoint : Point2D\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n-
        static kVertexCodeDefaultPrecision : double\r\nProperties:\r\n- X : double\r\n-
        Y : double\r\n- VertexCode : UInt32\r\n- Edges : List`1\r\n- HasEdges : bool\r\nMethods:\r\n-
        ToString() : string\r\n- GetHashCode() : int\r\n- Equals(Object obj) : bool\r\n-
        Set(double x, double y) : void\r\n- static CreateVertexCode(double x, double
        y, double precision) : UInt32\r\n- AddEdge(DTSweepConstraint e) : void\r\n-
        HasEdge(TriangulationPoint p) : bool\r\n- GetEdge(TriangulationPoint p, DTSweepConstraint&
        edge) : bool\r\n- static ToPoint2D(TriangulationPoint p) : Point2D\r\n\r\nClass:
        TriangulationPointEnumerator\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
        Current : TriangulationPoint\r\nMethods:\r\n- MoveNext() : bool\r\n- Reset()
        : void\r\n\r\nClass: TriangulationPointList : Point2DList\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\n\r\nClass:
        TriangulationUtil\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nMethods:\r\n-
        static SmartIncircle(Point2D pa, Point2D pb, Point2D pc, Point2D pd) : bool\r\n-
        static InScanArea(Point2D pa, Point2D pb, Point2D pc, Point2D pd) : bool\r\n-
        static Orient2d(Point2D pa, Point2D pb, Point2D pc) : Orientation\r\n- static
        PointInBoundingBox(double xmin, double xmax, double ymin, double ymax, Point2D
        p) : bool\r\n- static PointOnLineSegment2D(Point2D lineStart, Point2D lineEnd,
        Point2D p, double epsilon) : bool\r\n- static PointOnLineSegment2D(double
        x1, double y1, double x2, double y2, double x, double y, double epsilon)
        : bool\r\n- static RectsIntersect(Rect2D r1, Rect2D r2) : bool\r\n- static
        LinesIntersect2D(Point2D ptStart0, Point2D ptEnd0, Point2D ptStart1, Point2D
        ptEnd1, bool firstIsSegment, bool secondIsSegment, bool coincidentEndPointCollisions,
        Point2D& pIntersectionPt, double epsilon) : bool\r\n- static LinesIntersect2D(Point2D
        ptStart0, Point2D ptEnd0, Point2D ptStart1, Point2D ptEnd1, Point2D& pIntersectionPt,
        double epsilon) : bool\r\n- static LI2DDotProduct(Point2D v0, Point2D v1)
        : double\r\n- static RaysIntersect2D(Point2D ptRayOrigin0, Point2D ptRayVector0,
        Point2D ptRayOrigin1, Point2D ptRayVector1, Point2D& ptIntersection) : bool\r\n\r\nClass:
        PolygonGenerator\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nMethods:\r\n-
        static RandomCircleSweep(double scale, int vertexCount) : Polygon\r\n- static
        RandomCircleSweep2(double scale, int vertexCount) : Polygon\r\n\r\nClass:
        PointGenerator\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nMethods:\r\n-
        static UniformDistribution(int n, double scale) : List`1\r\n- static UniformGrid(int
        n, double scale) : List`1\r\n\r\nClass: PointSet : Point2DList\r\nNamespace:
        FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n- Points : IList`1\r\n-
        Triangles : IList`1\r\n- FileName : string\r\n- DisplayFlipX : bool\r\n-
        DisplayFlipY : bool\r\n- DisplayRotate : float\r\n- Precision : double\r\n-
        MinX : double\r\n- MaxX : double\r\n- MinY : double\r\n- MaxY : double\r\n-
        Bounds : Rect2D\r\n- TriangulationMode : TriangulationMode\r\n- Item : TriangulationPoint\r\nMethods:\r\n-
        IndexOf(TriangulationPoint p) : int\r\n- Add(Point2D p) : void\r\n- Add(TriangulationPoint
        p) : void\r\n- AddRange(IEnumerator`1 iter, WindingOrderType windingOrder)
        : void\r\n- AddRange(List`1 points) : bool\r\n- TryGetPoint(double x, double
        y, TriangulationPoint& p) : bool\r\n- Insert(int idx, TriangulationPoint
        item) : void\r\n- Remove(Point2D p) : bool\r\n- Remove(TriangulationPoint
        p) : bool\r\n- RemoveAt(int idx) : void\r\n- Contains(TriangulationPoint
        p) : bool\r\n- CopyTo(TriangulationPoint[] array, int arrayIndex) : void\r\n-
        AddTriangle(DelaunayTriangle t) : void\r\n- AddTriangles(IEnumerable`1 list)
        : void\r\n- ClearTriangles() : void\r\n- Initialize() : bool\r\n- Prepare(TriangulationContext
        tcx) : void\r\n\r\nClass: ConstrainedPointSet : PointSet\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
        TriangulationMode : TriangulationMode\r\nMethods:\r\n- Add(Point2D p) : void\r\n-
        Add(TriangulationPoint p) : void\r\n- AddRange(List`1 points) : bool\r\n-
        AddHole(List`1 points, string name) : bool\r\n- AddConstraints(List`1 constraints)
        : bool\r\n- AddConstraint(TriangulationConstraint tc) : bool\r\n- TryGetConstraint(UInt32
        constraintCode, TriangulationConstraint& tc) : bool\r\n- GetNumConstraints()
        : int\r\n- GetConstraintEnumerator() : Enumerator\r\n- GetNumHoles() : int\r\n-
        GetHole(int idx) : Contour\r\n- GetActualHoles(List`1& holes) : int\r\n-
        Initialize() : bool\r\n- Prepare(TriangulationContext tcx) : void\r\n- AddTriangle(DelaunayTriangle
        t) : void\r\n\r\nStruct: FixedBitArray3 : ValueType\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n-
        _0 : bool\r\n- _1 : bool\r\n- _2 : bool\r\nProperties:\r\n- Item : bool\r\nMethods:\r\n-
        Contains(bool value) : bool\r\n- IndexOf(bool value) : int\r\n- Clear() :
        void\r\n- Clear(bool value) : void\r\n- GetEnumerator() : IEnumerator`1\r\n\r\nClass:
        MathUtil\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n-
        static EPSILON : double\r\nMethods:\r\n- static AreValuesEqual(double val1,
        double val2) : bool\r\n- static AreValuesEqual(double val1, double val2,
        double tolerance) : bool\r\n- static IsValueBetween(double val, double min,
        double max, double tolerance) : bool\r\n- static RoundWithPrecision(double
        f, double precision) : double\r\n- static Clamp(double a, double low, double
        high) : double\r\n- static Swap(T& a, T& b) : void\r\n- static Jenkins32Hash(Byte[]
        data, UInt32 nInitialValue) : UInt32\r\n\r\nClass: Point2D\r\nNamespace:
        FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n- X : double\r\n-
        Y : double\r\n- Xf : float\r\n- Yf : float\r\nMethods:\r\n- ToString() :
        string\r\n- GetHashCode() : int\r\n- Equals(Object obj) : bool\r\n- Equals(Point2D
        p) : bool\r\n- Equals(Point2D p, double epsilon) : bool\r\n- CompareTo(Point2D
        other) : int\r\n- Set(double x, double y) : void\r\n- Set(Point2D p) : void\r\n-
        Add(Point2D p) : void\r\n- Add(double scalar) : void\r\n- Subtract(Point2D
        p) : void\r\n- Subtract(double scalar) : void\r\n- Multiply(Point2D p) :
        void\r\n- Multiply(double scalar) : void\r\n- Divide(Point2D p) : void\r\n-
        Divide(double scalar) : void\r\n- Negate() : void\r\n- Magnitude() : double\r\n-
        MagnitudeSquared() : double\r\n- MagnitudeReciprocal() : double\r\n- Normalize()
        : void\r\n- Dot(Point2D p) : double\r\n- Cross(Point2D p) : double\r\n- Clamp(Point2D
        low, Point2D high) : void\r\n- Abs() : void\r\n- Reciprocal() : void\r\n-
        Translate(Point2D vector) : void\r\n- Translate(double x, double y) : void\r\n-
        Scale(Point2D vector) : void\r\n- Scale(double scalar) : void\r\n- Scale(double
        x, double y) : void\r\n- Rotate(double radians) : void\r\n- RotateDegrees(double
        degrees) : void\r\n- static Dot(Point2D lhs, Point2D rhs) : double\r\n- static
        Cross(Point2D lhs, Point2D rhs) : double\r\n- static Clamp(Point2D a, Point2D
        low, Point2D high) : Point2D\r\n- static Min(Point2D a, Point2D b) : Point2D\r\n-
        static Max(Point2D a, Point2D b) : Point2D\r\n- static Abs(Point2D a) : Point2D\r\n-
        static Reciprocal(Point2D a) : Point2D\r\n- static Perpendicular(Point2D
        lhs, double scalar) : Point2D\r\n- static Perpendicular(double scalar, Point2D
        rhs) : Point2D\r\n\r\nClass: Point2DEnumerator\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n-
        Current : Point2D\r\nMethods:\r\n- MoveNext() : bool\r\n- Reset() : void\r\n\r\nClass:
        Point2DList\r\nNamespace: FunkyCode.Utilities.Polygon2DTriangulation\r\nFields:\r\n-
        static kMaxPolygonVertices : int\r\n- static kLinearSlop : double\r\n- static
        kAngularSlop : double\r\nProperties:\r\n- BoundingBox : Rect2D\r\n- WindingOrder
        : WindingOrderType\r\n- Epsilon : double\r\n- Item : Point2D\r\n- Count :
        int\r\n- IsReadOnly : bool\r\nMethods:\r\n- ToString() : string\r\n- Clear()
        : void\r\n- IndexOf(Point2D p) : int\r\n- Add(Point2D p) : void\r\n- AddRange(Point2DList
        l) : void\r\n- AddRange(IEnumerator`1 iter, WindingOrderType windingOrder)
        : void\r\n- Insert(int idx, Point2D item) : void\r\n- Remove(Point2D p) :
        bool\r\n- RemoveAt(int idx) : void\r\n- RemoveRange(int idxStart, int count)
        : void\r\n- Contains(Point2D p) : bool\r\n- CopyTo(Point2D[] array, int arrayIndex)
        : void\r\n- CalculateBounds() : void\r\n- CalculateEpsilon() : double\r\n-
        CalculateWindingOrder() : WindingOrderType\r\n- NextIndex(int index) : int\r\n-
        PreviousIndex(int index) : int\r\n- GetSignedArea() : double\r\n- GetArea()
        : double\r\n- GetCentroid() : Point2D\r\n- Translate(Point2D vector) : void\r\n-
        Scale(Point2D value) : void\r\n- Rotate(double radians) : void\r\n- IsDegenerate()
        : bool\r\n- IsConvex() : bool\r\n- IsSimple() : bool\r\n- CheckPolygon()
        : PolygonError\r\n- static GetErrorString(PolygonError error) : string\r\n-
        RemoveDuplicateNeighborPoints() : void\r\n- Simplify() : void\r\n- Simplify(double
        bias) : void\r\n- MergeParallelEdges(double tolerance) : void\r\n- ProjectToAxis(Point2D
        axis, Double& min, Double& max) : void\r\n\r\nClass: Rect2D\r\nNamespace:
        FunkyCode.Utilities.Polygon2DTriangulation\r\nProperties:\r\n- MinX : double\r\n-
        MaxX : double\r\n- MinY : double\r\n- MaxY : double\r\n- Left : double\r\n-
        Right : double\r\n- Top : double\r\n- Bottom : double\r\n- Width : double\r\n-
        Height : double\r\n- Empty : bool\r\nMethods:\r\n- GetHashCode() : int\r\n-
        Equals(Object obj) : bool\r\n- Equals(Rect2D r) : bool\r\n- Equals(Rect2D
        r, double epsilon) : bool\r\n- Clear() : void\r\n- Set(double xmin, double
        xmax, double ymin, double ymax) : void\r\n- Set(Rect2D b) : void\r\n- SetSize(double
        w, double h) : void\r\n- Contains(double x, double y) : bool\r\n- Contains(Point2D
        p) : bool\r\n- Contains(Rect2D r) : bool\r\n- ContainsInclusive(double x,
        double y) : bool\r\n- ContainsInclusive(double x, double y, double epsilon)
        : bool\r\n- ContainsInclusive(Point2D p) : bool\r\n- ContainsInclusive(Point2D
        p, double epsilon) : bool\r\n- ContainsInclusive(Rect2D r) : bool\r\n- ContainsInclusive(Rect2D
        r, double epsilon) : bool\r\n- Intersects(Rect2D r) : bool\r\n- GetCenter()
        : Point2D\r\n- IsNormalized() : bool\r\n- Normalize() : void\r\n- AddPoint(Point2D
        p) : void\r\n- Inflate(double w, double h) : void\r\n- Inflate(double left,
        double top, double right, double bottom) : void\r\n- Offset(double w, double
        h) : void\r\n- SetPosition(double x, double y) : void\r\n- Intersection(Rect2D
        r1, Rect2D r2) : bool\r\n- Union(Rect2D r1, Rect2D r2) : void\r\n\r\nClass:
        TriangulationWrapper\r\nNamespace: FunkyCode.Utilities\r\nMethods:\r\n- static
        CreateMesh(Polygon polygon) : Mesh\r\n- static CreateTriangle(Polygon polygon)
        : Mesh\r\n- static CreateMesh(Vector2[] vertices, Int32[] indices, Vector2[]
        uv) : Mesh\r\n\r\nClass: UnityDefaultTriangulator\r\nNamespace: FunkyCode.Utilities\r\nMethods:\r\n-
        static Create(Vector2[] vertices2D) : Mesh\r\n- Triangulate() : Int32[]\r\n\r\nClass:
        PolygonTriangulator2D : MonoBehaviour\r\nNamespace: FunkyCode.Utilities\r\nMethods:\r\n-
        static TriangulateSimple(Polygon2D polygon, Vector2 UVScale, Vector2 UVOffset)
        : Mesh\r\n- static Triangulate(Polygon2D polygon, Vector2 UVScale, Vector2
        UVOffset, Triangulation triangulation) : Mesh\r\n- static TriangulateAdvanced(Polygon2D
        polygon, Vector2 UVScale, Vector2 UVOffset) : Mesh\r\n\r\nClass: PolygonTriangulator2
        : MonoBehaviour\r\nNamespace: FunkyCode.Utilities\r\nMethods:\r\n- static
        TriangulateSimple(Polygon2 polygon, Vector2 UVScale, Vector2 UVOffset) :
        Mesh\r\n- static Triangulate(Polygon2 polygon, Vector2 UVScale, Vector2 UVOffset,
        Triangulation triangulation) : Mesh\r\n- static TriangulateAdvanced(Polygon2
        polygon, Vector2 UVScale, Vector2 UVOffset) : Mesh\r\n\r\nClass: UICanvasScale
        : MonoBehaviour\r\nNamespace: FunkyCode.Utilities\r\nFields:\r\n- screenRatioScale
        : bool\r\n- rect : Rect\r\n\r\nClass: UITextScale : MonoBehaviour\r\nNamespace:
        FunkyCode.Utilities\r\nFields:\r\n- ratio : float\r\n- rect : Rect\r\n\r\nClass:
        Polygon2\r\nNamespace: FunkyCode.Utilities\r\nFields:\r\n- points : Vector2[]\r\nMethods:\r\n-
        GetRect() : Rect\r\n- Copy() : Polygon2\r\n- ToWorldSpace(Transform transform)
        : Polygon2\r\n- ToScaleSelf(Vector2 scale, Nullable`1 center) : void\r\n-
        ToRotationSelf(float rotation, Nullable`1 center) : void\r\n- ToOffsetSelf(Vector2
        pos) : void\r\n- IsClockwise() : bool\r\n- Normalize() : void\r\n- static
        CreateRect(Vector2 size) : Polygon2\r\n- static CreateIsometric(Vector2 size)
        : Polygon2\r\n- static CreateHexagon(Vector2 size) : Polygon2\r\n- CreateMesh(GameObject
        gameObject, Vector2 UVScale, Vector2 UVOffset, Triangulation triangulation)
        : Mesh\r\n- CreateMesh(Vector2 UVScale, Vector2 UVOffset, Triangulation triangulation)
        : Mesh\r\n- ToWorldSpaceSelfUNIVERSAL(Transform transform) : void\r\n- ToWorldSpaceSelfXY(Transform
        transform) : void\r\n- ToWorldSpaceSelfFlipped(Transform transform) : void\r\n-
        ToWorldSpaceSelfXZ(Transform transform) : void\r\n- ToWorldSpaceSelfXZFlipped(Transform
        transform) : void\r\n- PointInPoly(Vector2 point) : bool\r\n\r\nClass: Polygon2Collider2D\r\nNamespace:
        FunkyCode.Utilities\r\nFields:\r\n- static defaultCircleVerticesCount : int\r\nMethods:\r\n-
        static CreateFromCompositeCollider(CompositeCollider2D compositeCollider)
        : List`1\r\n- static CreateFromEdgeCollider(EdgeCollider2D edgeCollider)
        : Polygon2\r\n- static CreateFromCircleCollider(CircleCollider2D circleCollider,
        int pointsCount) : Polygon2\r\n- static CreateFromBoxCollider(BoxCollider2D
        boxCollider) : Polygon2\r\n- static CreateFromCapsuleCollider(CapsuleCollider2D
        capsuleCollider, int pointsCount) : Polygon2\r\n\r\nClass: Polygon2Collider3D\r\nNamespace:
        FunkyCode.Utilities\r\nFields:\r\n- static defaultCircleVerticesCount : int\r\nMethods:\r\n-
        static CreateFromBoxCollider(BoxCollider boxCollider) : Polygon2\r\n- static
        CreateFromMeshCollider(MeshCollider meshCollider) : List`1\r\n- static CreateFromSphereCollider(SphereCollider
        sphereCollider, int pointsCount) : Polygon2\r\n- static CreateFromCapsuleCollider(CapsuleCollider
        capsuleCollider, int pointsCount) : Polygon2\r\n\r\nClass: Polygon2Helper\r\nNamespace:
        FunkyCode.Utilities\r\nMethods:\r\n- static GetAxis(Polygon2 polygon, float
        rotation) : Pair2\r\n- static GetRect(List`1 polygons) : Rect\r\n- static
        GetDayRect(List`1 polygons, float height) : Rect\r\n- static GetIsoRect(List`1
        polygons) : Rect\r\n\r\nClass: Polygon2ListCollider2D : Polygon2Collider2D\r\nNamespace:
        FunkyCode.Utilities\r\nMethods:\r\n- static CreateFromGameObject(GameObject
        gameObject) : List`1\r\n- static CreateFromPolygonColliderToWorldSpace(PolygonCollider2D
        collider) : List`1\r\n- static CreateFromPolygonColliderToLocalSpace(PolygonCollider2D
        collider) : List`1\r\n\r\nClass: Polygon2ListCollider3D : Polygon2Collider3D\r\nNamespace:
        FunkyCode.Utilities\r\nMethods:\r\n- static CreateFromGameObject(GameObject
        gameObject) : List`1\r\n\r\nClass: Vector2Extensions\r\nNamespace: FunkyCode.Utilities\r\nMethods:\r\n-
        static Atan2(Vector2 a) : float\r\n- static Atan2(Vector2 a, Vector2 b) :
        float\r\n- static Push(Vector2 a, float direction, float distance) : Vector2\r\n-
        static RotToVec(Vector2 a, float rotation, float distance) : Vector2\r\n-
        static RotToVec(Vector2 a, float rotation) : Vector2\r\n- static TransformToWorldXY(Vector2
        a, Transform transform) : Vector2\r\n- static TransformToWorldXYFlipped(Vector2
        a, Transform transform) : Vector2\r\n- static TransformToWorldXZFlipped(Vector2
        a, Transform transform) : Vector2\r\n- static TransformToWorldXZ(Vector2
        a, Transform transform) : Vector2\r\n\r\nClass: DoublePair2\r\nNamespace:
        FunkyCode.Utilities\r\nFields:\r\n- A : Vector2\r\n- B : Vector2\r\n- C :
        Vector2\r\nMethods:\r\n- static GetList(Vector2[] list, bool connect) : List`1\r\n-
        static GetListCopy(List`1 list, bool connect) : List`1\r\n\r\nClass: Math2D\r\nNamespace:
        FunkyCode.Utilities\r\nMethods:\r\n- static Range(float value, float min,
        float max) : float\r\n- static NormalizeRotation(float rotation) : float\r\n-
        static ClosestPointOnLine(Vector2 vA, Vector2 vB) : Vector2\r\n- static ClosestPointOnLine(Vector2
        vPoint, Vector2 vA, Vector2 vB) : Vector2\r\n- static GetPitchYawRollRad(Quaternion
        rotation) : Vector3\r\n- static GetPitchYawRollDeg(Quaternion rotation) :
        Vector3\r\n- static GetBounds(List`1 pointsList) : Rect\r\n- static GetBounds(Pair2D
        pair) : Rect\r\n- static PolyInPoly(Polygon2D polyA, Polygon2D polyB) : bool\r\n-
        static PolyCollidePoly(Polygon2D polyA, Polygon2D polyB) : bool\r\n- static
        PolyIntersectPoly(Polygon2D polyA, Polygon2D polyB) : bool\r\n- static SliceIntersectPoly(List`1
        slice, Polygon2D poly) : bool\r\n- static SliceIntersectSlice(List`1 sliceA,
        List`1 sliceB) : bool\r\n- static LineIntersectPoly(Pair2D line, Polygon2D
        poly) : bool\r\n- static LineIntersectLine(Pair2D lineA, Pair2D lineB) :
        bool\r\n- static PolygonIntersectItself(List`1 points) : bool\r\n- static
        SliceIntersectItself(List`1 slice) : bool\r\n- static GetPointLineIntersectLine(Pair2D
        lineA, Pair2D lineB) : Vector2D\r\n- static GetPointLineIntersectLine2(Pair2D
        lineA, Pair2D lineB) : Nullable`1\r\n- static GetPointLineIntersectLine3(Vector2
        a_a, Vector2 a_b, Vector2 b_a, Vector2 b_b) : Nullable`1\r\n- static GetPointLineIntersectLine4(Vector2
        a_a, Vector2 a_b, Vector2 b_a, Vector2 b_b) : bool\r\n- static PointInPoly(Vector2
        point, Polygon2 poly) : bool\r\n- static GetListLineIntersectPoly(Pair2D
        line, Polygon2D poly) : List`1\r\n- static GetListLineIntersectSlice(Pair2D
        pair, List`1 slice) : List`1\r\n- static PolygonIntersectCircle(Polygon2D
        poly, Vector2D circle, float radius) : bool\r\n- static LineIntersectCircle(Pair2D
        line, Vector2D circle, float radius) : bool\r\n- static IsAPointLeftOfVectorOrOnTheLine(Vector2
        a, Vector2 b, Vector2 p) : float\r\n- static PointInPoly(Vector2D point,
        Polygon2D poly) : bool\r\n\r\nClass: Mathd\r\nNamespace: FunkyCode.Utilities\r\nMethods:\r\n-
        static Distance(double x1, double y1, double x2, double y2) : double\r\n\r\nClass:
        Pair2D\r\nNamespace: FunkyCode.Utilities\r\nFields:\r\n- A : Vector2D - First
        vector of a pair \r\n- B : Vector2D - Second vector of a pair \r\nMethods:\r\n-
        static GetList(List`1 list, bool connect) : List`1\r\n- static GetList(Vector2[]
        list, bool connect) : List`1\r\n- static Zero() : Pair2D\r\n\r\nStruct: Pair2
        : ValueType\r\nNamespace: FunkyCode.Utilities\r\nDescription: 2D points list
        connected by pairs \r\nFields:\r\n- A : Vector2 - First vector of a pair
        \r\n- B : Vector2 - Second vector of a pair \r\nMethods:\r\n- static Zero()
        : Pair2\r\n\r\nClass: Polygon2D\r\nNamespace: FunkyCode.Utilities\r\nDescription:
        Does not include holes??? \r\nFields:\r\n- pointsList : List`1\r\n- holesList
        : List`1\r\nMethods:\r\n- AddPoint(Vector2D point) : void\r\n- AddPoint(Vector2
        point) : void\r\n- AddPoint(float pointX, float pointY) : void\r\n- AddPoints(List`1
        points) : void\r\n- AddHole(Polygon2D poly) : void\r\n- PointInPoly(Vector2D
        point) : bool\r\n- PointInPoly(Vector2 point) : bool\r\n- PolyInPoly(Polygon2D
        poly) : bool\r\n- PointInHole(Vector2D point) : Polygon2D\r\n- IsClockwise()
        : bool\r\n- Normalize() : void\r\n- GetArea() : double\r\n- GetRect() : Rect\r\n-
        LineIntersectHoles(Pair2D pair) : List`1\r\n- SliceIntersectPoly(List`1 slice)
        : bool\r\n- SliceIntersectHoles(List`1 slice) : List`1\r\n- GetListLineIntersectPoly(Pair2D
        line) : List`1\r\n- static CreateRect(Vector2 size) : Polygon2D\r\n- static
        CreateIsometric(Vector2 size) : Polygon2D\r\n- static CreateHexagon(Vector2
        size) : Polygon2D\r\n- CreateMesh(GameObject gameObject, Vector2 UVScale,
        Vector2 UVOffset, Triangulation triangulation) : Mesh\r\n- CreateMesh(Vector2
        UVScale, Vector2 UVOffset, Triangulation triangulation) : Mesh\r\n- CreatePolygonCollider(GameObject
        gameObject) : PolygonCollider2D\r\n- CreateEdgeCollider(GameObject gameObject)
        : EdgeCollider2D\r\n- static SpriteToMesh(GameObject gameObject, VirtualSpriteRenderer
        spriteRenderer, Triangulation triangulation) : void\r\n- Copy() : Polygon2D\r\n-
        ToLocalSpace(Transform transform) : Polygon2D\r\n- ToWorldSpace(Transform
        transform) : Polygon2D\r\n- ToOffset(Vector2D pos) : Polygon2D\r\n- ToScale(Vector2
        scale, Vector2D center) : Polygon2D\r\n- ToRotation(float rotation, Vector2D
        center) : Polygon2D\r\n- ToScaleItself(Vector2 scale, Vector2D center) :
        void\r\n- ToRotationItself(float rotation, Vector2D center) : void\r\n- ToOffsetItself(Vector2
        pos) : void\r\n- ToWorldSpaceItselfUNIVERSAL(Transform transform) : void\r\n-
        ToWorldSpaceItself(Transform transform) : void\r\n- ToWorldSpaceItselfFlipped(Transform
        transform) : void\r\n- ToWorldSpaceItselfXZ(Transform transform) : void\r\n-
        ToWorldSpaceItselfXZFlipped(Transform transform) : void\r\n\r\nClass: Polygon2DCollider2D\r\nNamespace:
        FunkyCode.Utilities\r\nFields:\r\n- static defaultCircleVerticesCount : int\r\nMethods:\r\n-
        static CreateFromCompositeCollider(CompositeCollider2D compositeCollider)
        : List`1\r\n- static CreateFromEdgeCollider(EdgeCollider2D edgeCollider)
        : Polygon2D\r\n- static CreateFromCircleCollider(CircleCollider2D circleCollider,
        int pointsCount) : Polygon2D\r\n- static CreateFromBoxCollider(BoxCollider2D
        boxCollider) : Polygon2D\r\n- static CreateFromCapsuleCollider(CapsuleCollider2D
        capsuleCollider, int pointsCount) : Polygon2D\r\n\r\nClass: Polygon2DCollider3D\r\nNamespace:
        FunkyCode.Utilities\r\nFields:\r\n- static defaultCircleVerticesCount : int\r\nMethods:\r\n-
        static CreateFromBoxCollider(BoxCollider boxCollider) : Polygon2D\r\n- static
        CreateFromMeshCollider(MeshCollider meshCollider) : List`1\r\n- static CreateFromSphereCollider(SphereCollider
        sphereCollider, int pointsCount) : Polygon2D\r\n- static CreateFromCapsuleCollider(CapsuleCollider
        capsuleCollider, int pointsCount) : Polygon2D\r\n\r\nClass: Polygon2DHelper\r\nNamespace:
        FunkyCode.Utilities\r\nMethods:\r\n- static CreateMesh(List`1 polygons, GameObject
        gameObject, Vector2 UVScale, Vector2 UVOffset, Triangulation triangulation)
        : Mesh\r\n- static GetRect(List`1 polygons) : Rect\r\n\r\nClass: Polygon2DListCollider2D
        : Polygon2DCollider2D\r\nNamespace: FunkyCode.Utilities\r\nMethods:\r\n-
        static CreateFromPolygonColliderToWorldSpace(PolygonCollider2D collider)
        : List`1\r\n- static CreateFromPolygonColliderToLocalSpace(PolygonCollider2D
        collider) : List`1\r\n- static CreateFromGameObject(GameObject gameObject)
        : List`1\r\n\r\nClass: Polygon2DListCollider3D : Polygon2DCollider3D\r\nNamespace:
        FunkyCode.Utilities\r\nMethods:\r\n- static CreateFromGameObject(GameObject
        gameObject) : List`1\r\n\r\nClass: Vector2D\r\nNamespace: FunkyCode.Utilities\r\nFields:\r\n-
        x : double\r\n- y : double\r\nMethods:\r\n- TransformToWorldXY(Transform
        transform) : void\r\n- TransformToWorldXYFlipped(Transform transform) : void\r\n-
        TransformToWorldXZFlipped(Transform transform) : void\r\n- TransformToWorldXZ(Transform
        transform) : void\r\n- ToString() : string\r\n- static Zero() : Vector2D\r\n-
        Copy() : Vector2D\r\n- Set(double px, double py) : void\r\n- Set(Vector2D
        point) : void\r\n- Push(double rot, double distance) : void\r\n- Push(double
        rot, double distance, Vector2 scale) : void\r\n- Inc(double px, double py)
        : void\r\n- Dec(double px, double py) : void\r\n- Inc(Vector2D point) : void\r\n-
        Dec(Vector2D point) : void\r\n- RotToVecItself(double rotation) : void\r\n-
        static Distance(Vector2D a, Vector2D b) : double\r\n- static Atan2(Vector2D
        a, Vector2D b) : double\r\n- static RotToVec(double rotation) : Vector2D\r\n-
        static VecToRot(Vector2 vec) : double\r\n- ToVector2() : Vector2\r\n- ToVector3()
        : Vector3\r\n\r\nClass: Vector2DList\r\nNamespace: FunkyCode.Utilities\r\nMethods:\r\n-
        static ToWorldSpace(Transform transform, List`1 pointsList) : List`1\r\n-
        static GetListSortedToPoint(List`1 pointsList, Vector2D point) : List`1\r\n-
        static GetListStartingPoint(List`1 pointsList, Vector2D point) : List`1\r\n-
        static GetListStartingIntersectLine(List`1 pointsList, Pair2D line) : List`1\r\n-
        static GetListStartingIntersectSlice(List`1 pointsList, List`1 slice) : List`1\r\n\r\nClass:
        DestroyTimer : MonoBehaviour\r\nNamespace: FunkyCode.Utilities\r\n\r\nClass:
        TimerHelper\r\nNamespace: FunkyCode.Utilities\r\nFields:\r\n- time : float\r\nMethods:\r\n-
        Reset() : void\r\n- static Create() : TimerHelper\r\n- GetMillisecs() : float\r\n-
        Get() : float\r\n\r\nClass: VirtualSpriteRenderer\r\nNamespace: FunkyCode.Utilities\r\nFields:\r\n-
        sprite : Sprite\r\n- color : Color\r\n- material : Material\r\n- flipX :
        bool\r\n- flipY : bool\r\n- drawMode : SpriteDrawMode\r\n- tileMode : SpriteTileMode\r\n-
        size : Vector2\r\nMethods:\r\n- Set(SpriteRenderer spriteRenderer) : void\r\n\r\nClass:
        Setup\r\nNamespace: Merkab\r\nMethods:\r\n- static CreateDefaultFolders()
        : void\r\n- static ImportMyFavoriteAssets() : void\r\n- static ImportBasics()
        : void\r\n- static InstallUnityAINavigation() : void\r\n- static InstallOpenSource()
        : void\r\n\r\nClass: Assets\r\nNamespace: Merkab\r\nMethods:\r\n- static
        ImportAssets(string asset, string subfolder, string folder) : void\r\n\r\nInterface:
        IAgentOverride\r\nNamespace: NavMeshPlus.Extensions\r\nMethods:\r\n- UpdateAgent()
        : void\r\n\r\nClass: AgentDefaultOverride\r\nNamespace: NavMeshPlus.Extensions\r\nMethods:\r\n-
        UpdateAgent() : void\r\n\r\nClass: AgentOverride2d : MonoBehaviour\r\nNamespace:
        NavMeshPlus.Extensions\r\nProperties:\r\n- Agent : NavMeshAgent\r\n- agentOverride
        : IAgentOverride\r\n\r\nClass: AgentRotate2d : MonoBehaviour\r\nNamespace:
        NavMeshPlus.Extensions\r\n\r\nClass: AgentRotateSmooth2d : MonoBehaviour\r\nNamespace:
        NavMeshPlus.Extensions\r\nFields:\r\n- angularSpeed : float\r\n\r\nClass:
        CollectSources2d : NavMeshExtension\r\nNamespace: NavMeshPlus.Extensions\r\nProperties:\r\n-
        overrideByGrid : bool\r\n- useMeshPrefab : GameObject\r\n- compressBounds
        : bool\r\n- overrideVector : Vector3\r\nMethods:\r\n- CalculateWorldBounds(NavMeshSurface
        surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n- CollectSources(NavMeshSurface
        surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n\r\nClass:
        CollectSourcesCache2d : NavMeshExtension\r\nNamespace: NavMeshPlus.Extensions\r\nProperties:\r\n-
        IsDirty : bool\r\n- SourcesCount : int\r\n- CahcheCount : int\r\n- Cache
        : List`1\r\nMethods:\r\n- AddSource(GameObject gameObject, NavMeshBuildSource
        source) : bool\r\n- UpdateSource(GameObject gameObject) : bool\r\n- RemoveSource(GameObject
        gameObject) : bool\r\n- UpdateNavMesh(NavMeshData data) : AsyncOperation\r\n-
        UpdateNavMesh() : AsyncOperation\r\n- CollectSources(NavMeshSurface surface,
        List`1 sources, NavMeshBuilderState navMeshState) : void\r\n- PostCollectSources(NavMeshSurface
        surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n\r\nClass:
        CollectTilemapSourcesCache2d : NavMeshExtension\r\nNamespace: NavMeshPlus.Extensions\r\nMethods:\r\n-
        UpdateNavMesh(NavMeshData data) : AsyncOperation\r\n- UpdateNavMesh() : AsyncOperation\r\n-
        PostCollectSources(NavMeshSurface surface, List`1 sources, NavMeshBuilderState
        navNeshState) : void\r\n\r\nClass: NavMeshAgentAttribute : PropertyAttribute\r\nNamespace:
        NavMeshPlus.Extensions\r\n\r\nClass: NavMeshAreaAttribute : PropertyAttribute\r\nNamespace:
        NavMeshPlus.Extensions\r\nDescription: See also NavMeshAreaAttributePropertyDrawer
        \r\n\r\nClass: NavMeshBuilder2dState\r\nNamespace: NavMeshPlus.Extensions\r\nFields:\r\n-
        spriteMeshMap : Dictionary`2\r\n- coliderMeshMap : Dictionary`2\r\n- lookupCallback
        : Action`2\r\n- defaultArea : int\r\n- layerMask : int\r\n- agentID : int\r\n-
        overrideByGrid : bool\r\n- useMeshPrefab : GameObject\r\n- compressBounds
        : bool\r\n- overrideVector : Vector3\r\n- CollectGeometry : NavMeshCollectGeometry\r\n-
        CollectObjects : CollectObjects\r\n- parent : GameObject\r\n- hideEditorLogs
        : bool\r\nProperties:\r\n- Root : IEnumerable`1\r\nMethods:\r\n- GetMesh(Sprite
        sprite) : Mesh\r\n- GetMesh(Collider2D collider) : Mesh\r\n- SetRoot(IEnumerable`1
        root) : void\r\n- GetRoot() : IEnumerable`1\r\n- Dispose() : void\r\n\r\nClass:
        NavMeshBuilder2d\r\nNamespace: NavMeshPlus.Extensions\r\nMethods:\r\n- static
        CollectSources(List`1 sources, NavMeshBuilder2dState builder) : void\r\n-
        static CollectSources(GameObject root, List`1 sources, NavMeshBuilder2dState
        builder) : void\r\n- static CollectSources(List`1 sources, NavMeshBuilder2dState
        builder, NavMeshModifier modifier, int area) : void\r\n- static CollectSources(List`1
        sources, SpriteRenderer spriteRenderer, int area, NavMeshBuilder2dState builder)
        : void\r\n- static CollectSources(List`1 sources, Collider2D collider, int
        area, NavMeshBuilder2dState builder) : void\r\n- static CollectTileSources(List`1
        sources, Tilemap tilemap, int area, NavMeshBuilder2dState builder) : void\r\n-
        static GetCellTransformMatrix(Tilemap tilemap, Vector3 scale, Vector3Int
        vec3int) : Matrix4x4\r\n\r\nClass: NavMeshBuilderState\r\nNamespace: NavMeshPlus.Extensions\r\nFields:\r\n-
        worldToLocal : Matrix4x4\r\n- worldBounds : Bounds\r\n- roots : IEnumerable`1\r\nMethods:\r\n-
        GetExtraState(bool dispose) : T\r\n- Dispose() : void\r\n\r\nClass: CompositeDisposable\r\nNamespace:
        NavMeshPlus.Extensions\r\nMethods:\r\n- Add(IDisposable dispose) : void\r\n-
        Add(Object dispose) : void\r\n- Dispose() : void\r\n\r\nClass: NavMeshExtension
        : MonoBehaviour\r\nNamespace: NavMeshPlus.Extensions\r\nProperties:\r\n-
        Order : int\r\n- NavMeshSurfaceOwner : NavMeshSurface\r\nMethods:\r\n- CollectSources(NavMeshSurface
        surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n- CalculateWorldBounds(NavMeshSurface
        surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n- PostCollectSources(NavMeshSurface
        surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n\r\nInterface:
        INavMeshExtensionsProvider\r\nNamespace: NavMeshPlus.Extensions\r\nProperties:\r\n-
        Count : int\r\n- Item : NavMeshExtension\r\nMethods:\r\n- Add(NavMeshExtension
        extension, int order) : void\r\n- Remove(NavMeshExtension extension) : void\r\n\r\nClass:
        NavMeshExtensionMeta\r\nNamespace: NavMeshPlus.Extensions\r\nFields:\r\n-
        order : int\r\n- extension : NavMeshExtension\r\n\r\nClass: NavMeshExtensionsProvider\r\nNamespace:
        NavMeshPlus.Extensions\r\nProperties:\r\n- Item : NavMeshExtension\r\n- Count
        : int\r\nMethods:\r\n- Add(NavMeshExtension extension, int order) : void\r\n-
        Remove(NavMeshExtension extension) : void\r\n\r\nClass: NavMeshLink : MonoBehaviour\r\nNamespace:
        NavMeshPlus.Components\r\nProperties:\r\n- agentTypeID : int\r\n- startPoint
        : Vector3\r\n- endPoint : Vector3\r\n- width : float\r\n- costModifier :
        int\r\n- bidirectional : bool\r\n- autoUpdate : bool\r\n- area : int\r\nMethods:\r\n-
        UpdateLink() : void\r\n\r\nClass: NavMeshModifier : MonoBehaviour\r\nNamespace:
        NavMeshPlus.Components\r\nProperties:\r\n- overrideArea : bool\r\n- area
        : int\r\n- ignoreFromBuild : bool\r\n- static activeModifiers : List`1\r\nMethods:\r\n-
        AffectsAgentType(int agentTypeID) : bool\r\n\r\nClass: NavMeshModifierTilemap
        : MonoBehaviour\r\nNamespace: NavMeshPlus.Components\r\nMethods:\r\n- GetModifierMap()
        : Dictionary`2\r\n- CacheModifiers() : void\r\n- HasDuplicateTileModifiers()
        : bool\r\n- TryGetTileModifier(Vector3Int coords, Tilemap tilemap, TileModifier&
        modifier) : bool\r\n- AffectsAgentType(int agentTypeID) : bool\r\n\r\nClass:
        NavMeshModifierVolume : MonoBehaviour\r\nNamespace: NavMeshPlus.Components\r\nProperties:\r\n-
        size : Vector3\r\n- center : Vector3\r\n- area : int\r\n- static activeModifiers
        : List`1\r\nMethods:\r\n- AffectsAgentType(int agentTypeID) : bool\r\n\r\nClass:
        NavMeshSurface : MonoBehaviour\r\nNamespace: NavMeshPlus.Components\r\nProperties:\r\n-
        agentTypeID : int\r\n- collectObjects : CollectObjects\r\n- size : Vector3\r\n-
        center : Vector3\r\n- layerMask : LayerMask\r\n- useGeometry : NavMeshCollectGeometry\r\n-
        defaultArea : int\r\n- ignoreNavMeshAgent : bool\r\n- ignoreNavMeshObstacle
        : bool\r\n- overrideTileSize : bool\r\n- tileSize : int\r\n- overrideVoxelSize
        : bool\r\n- voxelSize : float\r\n- buildHeightMesh : bool\r\n- minRegionArea
        : float\r\n- hideEditorLogs : bool\r\n- navMeshData : NavMeshData\r\n- navMeshDataInstance
        : NavMeshDataInstance\r\n- NevMeshExtensions : INavMeshExtensionsProvider\r\n-
        static activeSurfaces : List`1\r\nMethods:\r\n- AddData() : void\r\n- RemoveData()
        : void\r\n- GetBuildSettings() : NavMeshBuildSettings\r\n- BuildNavMesh()
        : void\r\n- BuildNavMeshAsync() : AsyncOperation\r\n- UpdateNavMesh(NavMeshData
        data) : AsyncOperation\r\n- static GetWorldBounds(Matrix4x4 mat, Bounds bounds)
        : Bounds\r\n- CalculateWorldBounds(List`1 sources) : Bounds\r\n\r\nClass:
        RootSources2d : NavMeshExtension\r\nNamespace: NavMeshPlus.Extensions\r\nProperties:\r\n-
        RootSources : List`1\r\nMethods:\r\n- CollectSources(NavMeshSurface surface,
        List`1 sources, NavMeshBuilderState navNeshState) : void\r\n\r\nClass: RotateAgentInstantly\r\nNamespace:
        NavMeshPlus.Extensions\r\nMethods:\r\n- UpdateAgent() : void\r\n\r\nClass:
        RotateAgentSmoothly\r\nNamespace: NavMeshPlus.Extensions\r\nFields:\r\n-
        rotateSpeed : float\r\nMethods:\r\n- UpdateAgent() : void\r\n\r\nClass: Demo_Camera
        : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\n\r\nClass: Demo_ColorPicker
        : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nFields:\r\n-
        targetMaterial : Material\r\n- propertyName : string\r\nMethods:\r\n- SetTarget(Material
        newMaterial, string newProperty, string shaderName) : void\r\n- LoadColor(Color
        color) : void\r\n- UpdateColor(float hue, float saturation) : void\r\n- SliderChanged()
        : void\r\n- OnPointerEnter(PointerEventData eventData) : void\r\n- OnPointerExit(PointerEventData
        eventData) : void\r\n\r\nClass: Demo_Display : MonoBehaviour\r\nNamespace:
        SpriteShadersUltimate.Demo\r\nDescription: Selected: \r\nFields:\r\n- static
        selected : Demo_Display - Selected: \r\n- firstProperty : string\r\n- ignorePlayer
        : bool\r\n- cycleTime : float\r\nMethods:\r\n- ChangeIndex() : void\r\n-
        HasAlternatives() : bool\r\n- UpdateIndex() : void\r\n- Select() : void\r\n-
        Deselect() : void\r\n- ResetMaterial() : void\r\n- InstantiateMaterial()
        : Material\r\n\r\nClass: Demo_DisplayTitle : MonoBehaviour\r\nNamespace:
        SpriteShadersUltimate.Demo\r\nFields:\r\n- target : Transform\r\n\r\nClass:
        Demo_FloatPicker : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nFields:\r\n-
        targetMaterial : Material\r\n- propertyName : string\r\nMethods:\r\n- SetTarget(Material
        newMaterial, string newProperty, string shaderName) : void\r\n- LoadFloat(float
        floatValue) : void\r\n- UpdateFloat(float floatValue) : void\r\n- SliderChanged()
        : void\r\n\r\nClass: Demo_GUI : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nFields:\r\n-
        static instance : Demo_GUI\r\nMethods:\r\n- CreateTitle(string title, Transform
        target) : void\r\n- UpdateHud() : void\r\n- static IsKeyword(string propName)
        : bool\r\n- BackButton() : void\r\n- ResetMaterialButton() : void\r\n- AlternativeButton()
        : void\r\n- UpdateScroll() : void\r\n\r\nClass: Demo_Player : MonoBehaviour\r\nNamespace:
        SpriteShadersUltimate.Demo\r\nFields:\r\n- static instance : Demo_Player\r\n-
        idleSprites : List`1\r\n- runningSprites : List`1\r\n- hurtSprites : List`1\r\n-
        ignoreMaterials : bool\r\nMethods:\r\n- GetHurt(Vector2 velocity) : void\r\n-
        ApplyMaterial(Material material) : void\r\n- SnapPosition(Vector3 newPosition)
        : void\r\n- ResetPosition() : void\r\n- ResetMaterial() : void\r\n\r\nClass:
        Demo_Shaders : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nFields:\r\n-
        static instance : Demo_Shaders\r\n- static zoomFactor : float\r\nMethods:\r\n-
        AllowMovement() : bool\r\n- FadeInGUI() : bool\r\n\r\nClass: Demo_SpriteFader
        : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nMethods:\r\n-
        SetFade(bool fadeState) : void\r\n\r\nClass: Demo_Trigger : MonoBehaviour\r\nNamespace:
        SpriteShadersUltimate.Demo\r\nFields:\r\n- events : List`1\r\nMethods:\r\n-
        ChangeState(bool isActive) : void\r\n\r\nClass: Demo_TriggerEvent\r\nNamespace:
        SpriteShadersUltimate.Demo\r\nFields:\r\n- delay : float\r\n- fader : ShaderFaderSSU\r\n-
        faderState : bool\r\n- negateState : bool\r\n- snapPlayer : bool\r\n- isRelative
        : bool\r\n- snapPosition : Vector3\r\n- hurtPlayer : bool\r\n- velocity :
        Vector2\r\nMethods:\r\n- Play(Transform source) : void\r\n\r\nClass: Demo_VectorFollow
        : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nFields:\r\n-
        propertyName : string - Public: \r\n- trackedTransform : Transform\r\n\r\nClass:
        Demo_VectorPicker : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nFields:\r\n-
        targetMaterial : Material\r\n- propertyName : string\r\nMethods:\r\n- SetTarget(Material
        newMaterial, string newProperty, string shaderName) : void\r\n- LoadVector(Vector2
        vectorValue) : void\r\n- UpdateVector(Vector2 vectorValue) : void\r\n- SliderChanged()
        : void\r\n\r\nClass: ImageSSU : InstancerSSU\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n-
        updateChanges : bool - Updates material when RectTransform changes. \r\nMethods:\r\n-
        UpdateMaterial() : void\r\n\r\nClass: InteractiveSquishSSU : MonoBehaviour\r\nFields:\r\n-
        squishSpeed : float\r\n- staySquished : bool\r\n- squishDuration : float\r\n\r\nClass:
        InteractiveWindSSU : InstancerSSU\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n-
        rotationFactor : float\r\n- bendInSpeed : float\r\n- bendOutSpeed : float\r\n-
        stayBent : bool\r\n- minBendSpeed : float\r\n- hyperPerformanceMode : bool\r\n-
        randomOffsetZ : bool\r\n- customMaterial : bool\r\n- inactiveShader : string\r\n-
        inactiveMaterial : Material\r\n- randomizeWiggle : bool\r\n- allowCustomLayer
        : bool\r\nMethods:\r\n- UpdateShader() : void\r\n- static DefaultCollider(BoxCollider2D
        box) : void\r\n\r\nClass: WindManagerSSU : MonoBehaviour\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n-
        windNoiseScale : float\r\n- windNoiseSpeed : float\r\n- windIntensityFrom
        : float\r\n- windIntensityTo : float\r\nMethods:\r\n- ModifyIfChanged(Single&
        currentValue, Single& oldValue, string globalShaderName) : void\r\n\r\nClass:
        WindParallaxSSU : MonoBehaviour\r\nNamespace: SpriteShadersUltimate\r\n\r\nClass:
        InstancerSSU : MonoBehaviour\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n-
        runtimeMaterial : Material\r\n\r\nClass: MaterialInstancerSSU : InstancerSSU\r\nNamespace:
        SpriteShadersUltimate\r\n\r\nClass: ShaderFaderSSU : MonoBehaviour\r\nNamespace:
        SpriteShadersUltimate\r\nFields:\r\n- automaticFading : bool - Fading: \r\n-
        isFaded : bool\r\n- fadeValue : float\r\n- duration : float\r\n- unscaledTime
        : bool\r\n- fadeCurve : AnimationCurve\r\n- getChildObjects : bool - Materials:
        \r\n- poolMaterials : bool\r\n- renderers : List`1\r\n- graphics : List`1\r\n-
        floatProperties : List`1 - Properties: \r\n- vectorProperties : List`1\r\n-
        colorProperties : List`1\r\nMethods:\r\n- UpdateMaterials() : void\r\n- UpdateSingleMaterial(Material
        mat, float fadeFactor) : void\r\n- ReloadMaterials() : void\r\n\r\nClass:
        BaseFaderSSU\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n- propertyName
        : string\r\n- fromTime : float\r\n- toTime : float\r\n\r\nClass: FloatFaderSSU
        : BaseFaderSSU\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n- fromValue
        : float\r\n- toValue : float\r\n\r\nClass: VectorFaderSSU : BaseFaderSSU\r\nNamespace:
        SpriteShadersUltimate\r\nFields:\r\n- fromValue : Vector4\r\n- toValue :
        Vector4\r\n\r\nClass: ColorFaderSSU : BaseFaderSSU\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n-
        fromValue : Color\r\n- toValue : Color\r\n\r\nClass: SpriteSheetSSU : MonoBehaviour\r\nNamespace:
        SpriteShadersUltimate\r\nDescription: Attach this to sprite renderers or
        images with a sprite shaders ultimate material. Enable Sprite Sheet Fix and
        let this component update the Sprite Sheet Rect variable. \r\nFields:\r\n-
        updateChanges : bool\r\nMethods:\r\n- UpdateSpriteRect() : void\r\n- static
        GetSheetVector(Sprite sprite) : Vector4\r\n\r\nClass: UnscaledTimeSSU : MonoBehaviour\r\nNamespace:
        SpriteShadersUltimate\r\nFields:\r\n- dontDestroyOnLoad : bool\r\n\r\n"
      Skip: 0
      Attachments: []
    - Id: 
      Role: user
      Content: I want to drill into the Upgrade system and UI.  Right now we are
        installing upgrades into the tools within the backpack by just clicking on
        them.  Right now we are installing just by clicking on the item in the backpack. 
        I think we need to think about a better way to install things, for now we
        could have an install button that becomes active when we click on a tool
        or upgrade that can be installed.
      Skip: 0
      Attachments:
      - 2ac5e28ac77223b4dae8feda9ecf3109
      - e3b11d30fa4bbc2489937519d58d838f
      - 20539dc103ae4694fb67156e3d1bc75f
      - ea1a8cbc0736b7f46909785218302be6
      - e0a9efec17722814bbe45d0c91064e2c
      - 78b99deea1328204eb973991d237725c
      - c0a4a6b22368c3c438ced802fc5a8e12
      - 5c59561d794272d428994df9973d1ed8
      - 6ebd46ba41f7d5e4a8afabe23b3d87c8
      - 42818dd17492ee94aba64e9fec152183
      - a469cc6a0f58c4d42b4c74aa42e9121b
      - a69257b06d6070348b50eebd7fa36e06
      - 1b90687779aa73348be87b2caa7c17bb
      - 927ab38a17f43b44988fcb3181e9a603
      - 166634ecab0a3fe489dd286d56d092bc
      - 33d65a8f77d65714aa5a3aa7b147ef62
      - af54eba2d592dbe4e89f0c53a3b81410
      - ef88f8a18284906429eb168fb9900ec7
      - f0174cab34602a240a2a1d596ff66f80
      - 1125e745152754543a3187b0527d253a
      - 708e90c5dae28984d8265b35543e3bb4
      - b3815634222e9c24597fd1a5c3234591
      - f1f710bc7dfbc0b42945c785fed5b948
      - bc079f94d891ea14a99fd8e8badd5a48
      - 2da19ed76e4fc964fa5072fe620f41ed
      - 490885bb45727844c99b8786460f4e05
    - Id: 
      Role: assistant
      Content: "Based on your project structure and the need to improve the upgrade
        installation UX, I'll propose a solution that builds upon your existing `BackpackEquipInstallManager`
        and related UI systems. Here's how we can implement a more deliberate installation
        process:\n\n### 1. First, let's modify the `BackpackEquipInstallManager`:\n\n```csharp\nusing
        UnityEngine;\nusing UnityEngine.Events;\n\nnamespace HairvestMoon.Inventory\n{\n   
        /// <summary>\n    /// Handles installing upgrades and tools into backpack
        equipment slots\n    /// </summary>\n    public class BackpackEquipInstallManager
        : MonoBehaviour\n    {\n        public static BackpackEquipInstallManager
        Instance { get; private set; }\n        \n        [Header(\"Events\")]\n       
        public UnityEvent<ItemData> OnInstallableItemSelected;\n        public UnityEvent
        OnInstallationComplete;\n        \n        private ItemData _selectedInstallableItem;\n       
        private bool _isInstallationInProgress;\n\n        private void Awake()\n       
        {\n            if (Instance != null && Instance != this)\n            {\n               
        Destroy(gameObject);\n                return;\n            }\n           
        \n            Instance = this;\n        }\n\n        /// <summary>\n       
        /// Sets an item as selected for potential installation\n        /// </summary>\n       
        public void SelectItemForInstallation(ItemData item)\n        {\n           
        if (_isInstallationInProgress) return;\n            \n            _selectedInstallableItem
        = item;\n            OnInstallableItemSelected?.Invoke(item);\n        }\n\n       
        /// <summary>\n        /// Attempts to install the currently selected item\n       
        /// </summary>\n        public void TryInstallSelectedItem()\n        {\n           
        if (_selectedInstallableItem == null || _isInstallationInProgress) return;\n           
        \n            _isInstallationInProgress = true;\n            \n           
        bool success = TryEquip(_selectedInstallableItem);\n            \n           
        if (success)\n            {\n                // Remove from inventory if
        it's a one-time upgrade\n                if (_selectedInstallableItem.itemType
        == ItemType.ToolUpgrade)\n                {\n                    InventorySystem.Instance.RemoveItem(_selectedInstallableItem,
        1);\n                }\n                \n                OnInstallationComplete?.Invoke();\n           
        }\n            \n            _selectedInstallableItem = null;\n           
        _isInstallationInProgress = false;\n        }\n\n        /// <summary>\n       
        /// Core equip logic - determines if item is a tool or upgrade and routes
        appropriately\n        /// </summary>\n        public bool TryEquip(ItemData
        item)\n        {\n            if (item == null) return false;\n           
        \n            switch (item.itemType)\n            {\n                case
        ItemType.Tool:\n                    BackpackEquipSystem.Instance.EquipTool(item);\n                   
        return true;\n                    \n                case ItemType.ToolUpgrade:\n                   
        BackpackEquipSystem.Instance.EquipUpgrade(item);\n                    return
        true;\n                    \n                default:\n                   
        Debug.LogWarning($\"Cannot equip item of type {item.itemType}\");\n                   
        return false;\n            }\n        }\n    }\n}\n```\n\n### 2. Create a
        new UI component for the install button:\n\n```csharp\nusing UnityEngine;\nusing
        UnityEngine.UI;\n\nnamespace HairvestMoon.UI\n{\n    /// <summary>\n    ///
        Controls the install button that appears when selecting an installable item\n   
        /// </summary>\n    public class InstallButtonUI : MonoBehaviour\n    {\n       
        [Header(\"References\")]\n        [SerializeField] private Button _installButton;\n       
        [SerializeField] private GameObject _buttonContainer;\n        \n       
        private void Awake()\n        {\n            _installButton.onClick.AddListener(HandleInstallClick);\n           
        _buttonContainer.SetActive(false);\n            \n            BackpackEquipInstallManager.Instance.OnInstallableItemSelected.AddListener(HandleItemSelected);\n           
        BackpackEquipInstallManager.Instance.OnInstallationComplete.AddListener(HandleInstallComplete);\n       
        }\n\n        private void HandleItemSelected(ItemData item)\n        {\n           
        // Only show for items that can be installed\n            bool showButton
        = item.itemType == ItemType.Tool || item.itemType == ItemType.ToolUpgrade;\n           
        _buttonContainer.SetActive(showButton);\n        }\n\n        private void
        HandleInstallClick()\n        {\n            BackpackEquipInstallManager.Instance.TryInstallSelectedItem();\n       
        }\n\n        private void HandleInstallComplete()\n        {\n           
        _buttonContainer.SetActive(false);\n        }\n    }\n}\n```\n\n### 3. Modify
        the BackpackSlotUI to work with the new system:\n\n```csharp\nusing UnityEngine;\nusing
        UnityEngine.EventSystems;\nusing UnityEngine.UI;\n\nnamespace HairvestMoon.UI\n{\n   
        /// <summary>\n    /// UI representation of a single backpack slot with install
        functionality\n    /// </summary>\n    public class BackpackSlotUI : MonoBehaviour,
        IPointerClickHandler\n    {\n        [Header(\"References\")]\n        [SerializeField]
        private Image _icon;\n        [SerializeField] private GameObject _selectedHighlight;\n       
        \n        private ItemData _itemData;\n        private int _quantity;\n       
        \n        public void Initialize(ItemData itemData, int quantity)\n       
        {\n            _itemData = itemData;\n            _quantity = quantity;\n           
        \n            _icon.sprite = itemData.itemIcon;\n            _selectedHighlight.SetActive(false);\n       
        }\n\n        public void OnPointerClick(PointerEventData eventData)\n       
        {\n            if (_itemData == null) return;\n            \n           
        // Select this item for potential installation\n            BackpackEquipInstallManager.Instance.SelectItemForInstallation(_itemData);\n           
        SetSelected(true);\n        }\n\n        public void SetSelected(bool isSelected)\n       
        {\n            _selectedHighlight.SetActive(isSelected);\n        }\n   
        }\n}\n```\n\n### 4. Update the BackpackInventoryUI to handle the new flow:\n\n```csharp\nusing
        System.Collections.Generic;\nusing UnityEngine;\n\nnamespace HairvestMoon.UI\n{\n   
        /// <summary>\n    /// Manages the display of backpack inventory slots\n   
        /// </summary>\n    public class BackpackInventoryUI : MonoBehaviour\n   
        {\n        [Header(\"References\")]\n        [SerializeField] private Transform
        _slotsContainer;\n        [SerializeField] private BackpackSlotUI _slotPrefab;\n       
        \n        private List<BackpackSlotUI> _slots = new List<BackpackSlotUI>();\n       
        private BackpackSlotUI _selectedSlot;\n\n        public void InitializeUI()\n       
        {\n            RefreshUI();\n        }\n\n        public void RefreshUI()\n       
        {\n            ClearSlots();\n            \n            var slots = BackpackInventorySystem.Instance.GetAllSlots();\n           
        foreach (var slot in slots)\n            {\n                var slotUI =
        Instantiate(_slotPrefab, _slotsContainer);\n                slotUI.Initialize(slot.item,
        slot.quantity);\n                _slots.Add(slotUI);\n            }\n       
        }\n\n        private void ClearSlots()\n        {\n            foreach (var
        slot in _slots)\n            {\n                Destroy(slot.gameObject);\n           
        }\n            _slots.Clear();\n        }\n    }\n}\n```\n\n### Implementation
        Notes:\n\n1. **New Flow**:\n   - Clicking an item selects it for potential
        installation\n   - Install button appears when a valid item is selected\n  
        - Clicking install button confirms the installation\n   - Installation removes
        the item from inventory if it's an upgrade\n\n2. **UI Setup**:\n   - Add
        an InstallButtonUI component to your UI with a Button and container GameObject\n  
        - Wire up the button in the inspector\n   - The button will automatically
        show/hide based on item selection\n\n3. **Benefits**:\n   - More deliberate
        installation process prevents accidental upgrades\n   - Clear visual feedback
        about what's being installed\n   - Maintains all existing functionality while
        improving UX\n   - Fits with your existing event-driven architecture\n\n4.
        **Visual Feedback**:\n   - Consider adding animations or sound effects to
        the install process\n   - You could add a confirmation dialog for rare/valuable
        upgrades\n   - Tooltips could explain what the upgrade will do before installing\n\nThis
        solution maintains your existing architecture while adding a more user-friendly
        installation flow. The changes are minimal but significantly improve the
        gameplay experience around upgrades."
      Skip: 0
      Attachments: []
    - Id: 
      Role: user
      Content: I like this Idea, but let's be considerate of our game initializer
        and event wiring.  We are trying to avoid unity singleton handling and event
        subscriptions on oneneable and ondisable.  Before we actually dig into that
        backpack upgrade logic we do a rundown of this system and your undestanding
        of it's features and strengths, and weaknesses as well.
      Skip: 0
      Attachments:
      - 1cdc6e0576c768e4fadf3e67c86a343c
      - bafb73c5e91e51948a2e16b5d4e6e5c1
      - 8cc85879c5933a74d91a4474ba077d19
      - 84cf22ad5d45d3e459bee6edb89ade75
      - 523929666607fb242b7d2d1031f7f61c
      - 38bc8014aa7998d40b3e413f5086ac8a
      - 9bd6544e691d0ca41b02f6ba98f95561
      - 0ee21bbb5bffda44697ed8541bb763ac
      - 490885bb45727844c99b8786460f4e05
      - 2da19ed76e4fc964fa5072fe620f41ed
      - 19d93bd30eabf904894c971d9e663bd1
      - 1e8e9dc0cfc2e2548a04d99a2e20f6d1
      - a765460b2f1aa8046bbcd6d994cbc3c5
      - 0a5da76b10abead42b1ab88b181d0e77
      - 05afaac28071c18458ac4df7c71f0ede
      - e73d6fd812f7917489ad32231b4806a2
      - a28525dc1d7255a49a2ad0ac33864514
      - 846c487d5b5039a40a1009068e39a18e
      - ef88f8a18284906429eb168fb9900ec7
      - f0174cab34602a240a2a1d596ff66f80
      - 1125e745152754543a3187b0527d253a
      - 708e90c5dae28984d8265b35543e3bb4
      - b3815634222e9c24597fd1a5c3234591
      - f1f710bc7dfbc0b42945c785fed5b948
      - bc079f94d891ea14a99fd8e8badd5a48
      - c0f33ca4825565f41861c26fa20bb420
      - 617b78866478bfd4ba3ebb2ba8c625e9
      - 81cb6fd7c1bf72b4d974659bc09cd8df
      - 0b61db242e07f404da7272b5584862ba
      - ca8d9b04ffb9fa945abef16a379b385b
      - a5e6ede4b03ff0f4381ef51849ec685f
      - 2ac5e28ac77223b4dae8feda9ecf3109
      - e3b11d30fa4bbc2489937519d58d838f
      - 20539dc103ae4694fb67156e3d1bc75f
      - 166634ecab0a3fe489dd286d56d092bc
      - 78b99deea1328204eb973991d237725c
      - c0a4a6b22368c3c438ced802fc5a8e12
      - e0a9efec17722814bbe45d0c91064e2c
      - 33d65a8f77d65714aa5a3aa7b147ef62
      - af54eba2d592dbe4e89f0c53a3b81410
      - ea1a8cbc0736b7f46909785218302be6
      - 5c59561d794272d428994df9973d1ed8
      - 6ebd46ba41f7d5e4a8afabe23b3d87c8
      - a469cc6a0f58c4d42b4c74aa42e9121b
      - 42818dd17492ee94aba64e9fec152183
      - a69257b06d6070348b50eebd7fa36e06
      - 1b90687779aa73348be87b2caa7c17bb
      - 927ab38a17f43b44988fcb3181e9a603
      - 309abaca7f822874992b5c9c8eb8f0b1
      - 2d7d109fe76974144a6f60f486d6a137
    - Id: 
      Role: assistant
      Content: "You're absolutely right to consider the broader architecture before
        diving into implementation. Let's analyze the current system's design patterns,
        strengths, weaknesses, and how we can improve the upgrade system while maintaining
        architectural consistency.\n\n### Current System Analysis (Based on GameInitializer
        & Event Wiring)\n\n**Key Components:**\n1. **GameInitializer** - Central
        hub that references and initializes all major systems\n2. **GameEventWiring**
        - Handles cross-system event subscriptions\n3. **Singleton-like Managers**
        (Instance properties but not pure singletons)\n4. **ScriptableObject-based
        data** (Items, Seeds, etc.)\n\n**Strengths:**\n1. **Explicit Initialization**
        - Clear bootstrapping sequence via GameInitializer\n2. **Decoupled Systems**
        - Systems communicate via events rather than direct references\n3. **Modularity**
        - Easy to add/remove systems without widespread changes\n4. **Data-Driven
        Design** - ScriptableObjects enable designer-friendly content creation\n5.
        **Single-Scene Architecture** - Avoids scene-loading complexities\n\n**Weaknesses/Concerns:**\n1.
        **Potential Circular Dependencies** - Systems might indirectly depend on
        each other through events\n2. **Event Subscription Management** - Risk of
        missed unsubscriptions causing memory leaks\n3. **Initialization Order Sensitivity**
        - Some systems might expect others to be ready\n4. **Singleton-like Pattern**
        - While not pure singletons, Instance properties create global access\n5.
        **UI Coupling** - UI elements often directly reference management systems\n\n**Event
        Flow Pattern:**\n```\nInput \u2192 InputController \u2192 [System] \u2192
        GameStateManager \u2192 UI\n```\n\n**Upgrade System Current State:**\n1.
        **BackpackEquipSystem** - Manages equipped tools/upgrades\n2. **BackpackInventorySystem**
        - Tracks owned items\n3. **BackpackEquipInstallManager** - Handles installation
        logic (minimal currently)\n4. **BackpackInventoryUI** - Displays inventory
        items\n\n### Proposed Architectural Improvements\n\n**1. Event Wiring Strategy:**\n\n```csharp\n//
        In GameEventWiring.cs\npublic void InitializeEvents()\n{\n    // Upgrade
        System Events\n    BackpackInventorySystem.Instance.OnInventoryChanged +=
        \n        BackpackInventoryUI.Instance.RefreshUI;\n        \n    BackpackEquipInstallManager.Instance.OnInstallableItemSelected
        += \n        SelectionTooltipUI.Instance.ShowTooltip;\n        \n    BackpackEquipInstallManager.Instance.OnInstallationComplete
        += \n        BackpackInventoryUI.Instance.RefreshUI;\n}\n```\n\n**2. Revised
        BackpackEquipInstallManager:**\n\n```csharp\npublic class BackpackEquipInstallManager
        : MonoBehaviour\n{\n    // Remove static Instance, get reference via GameInitializer\n   
        [System.Serializable]\n    public class InstallEvents\n    {\n        public
        ItemDataEvent OnInstallableItemSelected;\n        public UnityEvent OnInstallationComplete;\n   
        }\n    \n    public InstallEvents Events = new InstallEvents();\n    \n   
        // Reference via GameInitializer\n    [SerializeField] private BackpackEquipSystem
        _equipSystem;\n    [SerializeField] private InventorySystem _inventorySystem;\n   
        \n    private ItemData _selectedItem;\n    \n    public void SelectForInstallation(ItemData
        item)\n    {\n        if (!CanInstallItem(item)) return;\n        \n       
        _selectedItem = item;\n        Events.OnInstallableItemSelected.Invoke(item);\n   
        }\n    \n    public void ConfirmInstallation()\n    {\n        if (_selectedItem
        == null) return;\n        \n        bool success = _equipSystem.TryEquip(_selectedItem);\n       
        \n        if (success && _selectedItem.consumable)\n        {\n           
        _inventorySystem.RemoveItem(_selectedItem, 1);\n        }\n        \n       
        Events.OnInstallationComplete.Invoke();\n        _selectedItem = null;\n   
        }\n    \n    private bool CanInstallItem(ItemData item)\n    {\n        //
        Validate install conditions\n    }\n}\n```\n\n**3. UI Integration Approach:**\n\n```csharp\npublic
        class BackpackInventoryUI : MonoBehaviour\n{\n    [SerializeField] private
        BackpackEquipInstallManager _installManager;\n    [SerializeField] private
        InstallConfirmationUI _confirmationUI;\n    \n    private void OnSlotClicked(ItemData
        item)\n    {\n        if (_installManager.CanInstallItem(item))\n       
        {\n            _confirmationUI.ShowForItem(item);\n        }\n    }\n}\n\npublic
        class InstallConfirmationUI : MonoBehaviour\n{\n    [SerializeField] private
        GameObject _panel;\n    [SerializeField] private Button _confirmButton;\n   
        \n    private ItemData _currentItem;\n    \n    private void Awake()\n   
        {\n        _confirmButton.onClick.AddListener(ConfirmInstallation);\n       
        Hide();\n    }\n    \n    public void ShowForItem(ItemData item)\n    {\n       
        _currentItem = item;\n        _panel.SetActive(true);\n        // Setup UI
        with item details\n    }\n    \n    private void ConfirmInstallation()\n   
        {\n        BackpackEquipInstallManager.Instance.ConfirmInstallation();\n       
        Hide();\n    }\n    \n    private void Hide() => _panel.SetActive(false);\n}\n```\n\n**Key
        Architectural Decisions:**\n\n1. **Reference Passing**:\n   - Have GameInitializer
        inject dependencies rather than using static Instance\n   - Example: `_installManager.Initialize(_equipSystem,
        _inventorySystem);`\n\n2. **Event Lifecycle**:\n   - Subscribe in GameEventWiring's
        InitializeEvents()\n   - Unsubscribe in GameEventWiring's CleanupEvents()\n\n3.
        **UI Flow**:\n   ```mermaid\n   sequenceDiagram\n       Player->>BackpackSlotUI:
        Clicks item\n       BackpackSlotUI->>InstallManager: SelectForInstallation(item)\n      
        InstallManager->>ConfirmationUI: Show install prompt\n       Player->>ConfirmationUI:
        Clicks Install\n       ConfirmationUI->>InstallManager: ConfirmInstallation()\n      
        InstallManager->>EquipSystem: TryEquip(item)\n       InstallManager->>InventoryUI:
        Refresh()\n   ```\n\n**Benefits of This Approach:**\n\n1. **Maintains Current
        Architecture**:\n   - Fits within existing initialization system\n   - Uses
        established event patterns\n   - No singleton abuse\n\n2. **Improved Safety**:\n  
        - Explicit installation confirmation\n   - Clear validation steps\n   - Better
        state management\n\n3. **Extensible**:\n   - Easy to add new installation
        requirements\n   - Simple to modify UI flow\n   - Clean separation between
        systems\n\n**Migration Path:**\n\n1. First update GameInitializer to properly
        inject dependencies\n2. Modify BackpackEquipInstallManager to remove static
        Instance\n3. Create new UI components with proper event subscriptions\n4.
        Update GameEventWiring to handle new events\n5. Phase out any direct singleton
        access in UI\n\nWould you like me to focus on any particular aspect of this
        architecture in more detail? The system provides a good balance between your
        existing architecture and improved upgrade handling while avoiding common
        Unity anti-patterns."
      Skip: 0
      Attachments: []
  - Id: d86f2ac2-db79-42a0-a235-751bfc41a99e
    Name: '"Refactoring Player Controller for Clean Input Modes in Unity"'
    ProjectContext: "Class: BoolEvent : ScriptableObject\r\nMethods:\r\n- Raise(bool
      value) : void\r\n- Register(Action`1 callback) : void\r\n- Unregister(Action`1
      callback) : void\r\n\r\nClass: CropData : ScriptableObject\r\nFields:\r\n-
      cropName : string\r\n- growthStages : Sprite[]\r\n- growthDuration : int\r\n\r\nClass:
      DebugUIOverlay : MonoBehaviour\r\nProperties:\r\n- static Instance : DebugUIOverlay\r\nMethods:\r\n-
      ShowLastAction(string text) : void\r\n\r\nClass: FarmTileDataManager : MonoBehaviour\r\nDescription:
      Stores logical gameplay state for each farm tile. Tracks tilling, watering,
      and crop growth. Interfaces with tilemaps and farming tools to apply gameplay
      effects. \r\nProperties:\r\n- static Instance : FarmTileDataManager\r\nMethods:\r\n-
      IsTileTillable(Vector3Int pos) : bool\r\n- GetTileData(Vector3Int pos) : FarmTileData\r\n-
      SetTilled(Vector3Int pos, bool value) : void\r\n- SetWatered(Vector3Int pos,
      bool value) : void\r\n- IsTilled(Vector3Int pos) : bool\r\n- IsWatered(Vector3Int
      pos) : bool\r\n\r\nClass: FarmTileData\r\nFields:\r\n- isTilled : bool\r\n-
      isWatered : bool\r\n- plantedCrop : CropData\r\n- growthDays : int\r\nMethods:\r\n-
      HasRipeCrop() : bool\r\n\r\nClass: FarmToolHandler : MonoBehaviour\r\nDescription:
      Handles fixed tool interactions (Hoe, Water, Plant, Harvest). Supports hold-to-interact
      with a world-space slider anchored to the currently targeted tile. \r\nProperties:\r\n-
      static CurrentSlot : ToolSlot\r\n\r\nClass: GameManager : MonoBehaviour\r\nProperties:\r\n-
      static Instance : GameManager\r\n\r\nClass: GameStateManager : MonoBehaviour\r\nProperties:\r\n-
      static Instance : GameStateManager\r\n- CurrentState : GameState\r\nMethods:\r\n-
      SetState(GameState newState) : void\r\n- IsGameplay() : bool\r\n\r\nClass:
      GameTimeManager : MonoBehaviour\r\nProperties:\r\n- static Instance : GameTimeManager\r\n-
      CurrentHour : int\r\n- CurrentMinute : int\r\n- Day : int\r\nMethods:\r\n-
      IsNight() : bool\r\n- GetFormattedTime() : string\r\n\r\nClass: InputManager
      : MonoBehaviour\r\nDescription: Manages player input and exposes clean event-based
      API Automatically hooks up to InputSystem_Actions Emits movement vector and
      events like Interact, Attack, Jump, etc. \r\nProperties:\r\n- static Instance
      : InputManager\r\n- MoveInput : Vector2\r\n- LookInput : Vector2\r\n- CurrentControlScheme
      : string\r\nMethods:\r\n- OnMove(CallbackContext context) : void\r\n- OnLook(CallbackContext
      context) : void\r\n- OnGamepadLook(CallbackContext context) : void\r\n- OnAttack(CallbackContext
      context) : void\r\n- OnInteract(CallbackContext context) : void\r\n- OnJump(CallbackContext
      context) : void\r\n- OnCrouch(CallbackContext context) : void\r\n- OnNext(CallbackContext
      context) : void\r\n- OnPrevious(CallbackContext context) : void\r\n- OnSprint(CallbackContext
      context) : void\r\n- IsUsingGamepad() : bool\r\n- IsUsingMouse() : bool\r\n\r\nClass:
      InteractionTargetingSystem : MonoBehaviour\r\nDescription: Handles tile highlighting
      for interaction. Supports distinct logic for mouse, gamepad, and movement-only
      modes. \r\nFields:\r\n- selectionHighlightTilemap : Tilemap\r\n- Grid : Grid\r\n-
      highlightTile : Tile\r\n- highlightRange : int\r\n- coneSize : Vector2Int\r\n-
      footPositionOffset : float\r\n- mouseTargetMaxDistance : float\r\n- drawDebugGizmos
      : bool\r\n- gizmoColor : Color\r\nProperties:\r\n- static Instance : InteractionTargetingSystem\r\n-
      CurrentTargetedTile : Nullable`1\r\n\r\nClass: Player_Controller : MonoBehaviour\r\nProperties:\r\n-
      static Facing : Directions\r\n- static Position : Vector3\r\n- static IsStationary
      : bool\r\n- static IsUsingLookDirection : bool\r\n\r\nClass: PlayerFormData\r\nFields:\r\n-
      FormType : PlayerForm\r\n- VisualRoot : GameObject\r\n- Animator : Animator\r\n-
      Renderer : SpriteRenderer\r\n- MoveSpeed : float\r\n\r\nClass: PlayerStateController
      : MonoBehaviour\r\nProperties:\r\n- static Instance : PlayerStateController\r\n-
      CurrentForm : PlayerForm\r\n- CurrentAnimator : Animator\r\n- CurrentSpriteRenderer
      : SpriteRenderer\r\n- MoveSpeed : float\r\nMethods:\r\n- EnterWerewolfForm()
      : void\r\n- ExitWerewolfForm() : void\r\n- IsWerewolf() : bool\r\n\r\nClass:
      CodeBuddyDemo : MonoBehaviour\r\nNamespace: CodeBuddy.Demo\r\nMethods:\r\n-
      JoinDiscord() : void\r\n- OpenDocumentation() : void\r\n\r\nClass: Setup\r\nNamespace:
      Merkab\r\nMethods:\r\n- static CreateDefaultFolders() : void\r\n- static ImportMyFavoriteAssets()
      : void\r\n- static ImportBasics() : void\r\n- static InstallUnityAINavigation()
      : void\r\n- static InstallOpenSource() : void\r\n\r\nClass: Assets\r\nNamespace:
      Merkab\r\nMethods:\r\n- static ImportAssets(string asset, string subfolder,
      string folder) : void\r\n\r\nInterface: IAgentOverride\r\nNamespace: NavMeshPlus.Extensions\r\nMethods:\r\n-
      UpdateAgent() : void\r\n\r\nClass: AgentDefaultOverride\r\nNamespace: NavMeshPlus.Extensions\r\nMethods:\r\n-
      UpdateAgent() : void\r\n\r\nClass: AgentOverride2d : MonoBehaviour\r\nNamespace:
      NavMeshPlus.Extensions\r\nProperties:\r\n- Agent : NavMeshAgent\r\n- agentOverride
      : IAgentOverride\r\n\r\nClass: AgentRotate2d : MonoBehaviour\r\nNamespace:
      NavMeshPlus.Extensions\r\n\r\nClass: AgentRotateSmooth2d : MonoBehaviour\r\nNamespace:
      NavMeshPlus.Extensions\r\nFields:\r\n- angularSpeed : float\r\n\r\nClass: CollectSources2d
      : NavMeshExtension\r\nNamespace: NavMeshPlus.Extensions\r\nProperties:\r\n-
      overrideByGrid : bool\r\n- useMeshPrefab : GameObject\r\n- compressBounds :
      bool\r\n- overrideVector : Vector3\r\nMethods:\r\n- CalculateWorldBounds(NavMeshSurface
      surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n- CollectSources(NavMeshSurface
      surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n\r\nClass:
      CollectSourcesCache2d : NavMeshExtension\r\nNamespace: NavMeshPlus.Extensions\r\nProperties:\r\n-
      IsDirty : bool\r\n- SourcesCount : int\r\n- CahcheCount : int\r\n- Cache :
      List`1\r\nMethods:\r\n- AddSource(GameObject gameObject, NavMeshBuildSource
      source) : bool\r\n- UpdateSource(GameObject gameObject) : bool\r\n- RemoveSource(GameObject
      gameObject) : bool\r\n- UpdateNavMesh(NavMeshData data) : AsyncOperation\r\n-
      UpdateNavMesh() : AsyncOperation\r\n- CollectSources(NavMeshSurface surface,
      List`1 sources, NavMeshBuilderState navMeshState) : void\r\n- PostCollectSources(NavMeshSurface
      surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n\r\nClass:
      CollectTilemapSourcesCache2d : NavMeshExtension\r\nNamespace: NavMeshPlus.Extensions\r\nMethods:\r\n-
      UpdateNavMesh(NavMeshData data) : AsyncOperation\r\n- UpdateNavMesh() : AsyncOperation\r\n-
      PostCollectSources(NavMeshSurface surface, List`1 sources, NavMeshBuilderState
      navNeshState) : void\r\n\r\nClass: NavMeshAgentAttribute : PropertyAttribute\r\nNamespace:
      NavMeshPlus.Extensions\r\n\r\nClass: NavMeshAreaAttribute : PropertyAttribute\r\nNamespace:
      NavMeshPlus.Extensions\r\nDescription: See also NavMeshAreaAttributePropertyDrawer
      \r\n\r\nClass: NavMeshBuilder2dState\r\nNamespace: NavMeshPlus.Extensions\r\nFields:\r\n-
      spriteMeshMap : Dictionary`2\r\n- coliderMeshMap : Dictionary`2\r\n- lookupCallback
      : Action`2\r\n- defaultArea : int\r\n- layerMask : int\r\n- agentID : int\r\n-
      overrideByGrid : bool\r\n- useMeshPrefab : GameObject\r\n- compressBounds :
      bool\r\n- overrideVector : Vector3\r\n- CollectGeometry : NavMeshCollectGeometry\r\n-
      CollectObjects : CollectObjects\r\n- parent : GameObject\r\n- hideEditorLogs
      : bool\r\nProperties:\r\n- Root : IEnumerable`1\r\nMethods:\r\n- GetMesh(Sprite
      sprite) : Mesh\r\n- GetMesh(Collider2D collider) : Mesh\r\n- SetRoot(IEnumerable`1
      root) : void\r\n- GetRoot() : IEnumerable`1\r\n- Dispose() : void\r\n\r\nClass:
      NavMeshBuilder2d\r\nNamespace: NavMeshPlus.Extensions\r\nMethods:\r\n- static
      CollectSources(List`1 sources, NavMeshBuilder2dState builder) : void\r\n- static
      CollectSources(GameObject root, List`1 sources, NavMeshBuilder2dState builder)
      : void\r\n- static CollectSources(List`1 sources, NavMeshBuilder2dState builder,
      NavMeshModifier modifier, int area) : void\r\n- static CollectSources(List`1
      sources, SpriteRenderer spriteRenderer, int area, NavMeshBuilder2dState builder)
      : void\r\n- static CollectSources(List`1 sources, Collider2D collider, int
      area, NavMeshBuilder2dState builder) : void\r\n- static CollectTileSources(List`1
      sources, Tilemap tilemap, int area, NavMeshBuilder2dState builder) : void\r\n-
      static GetCellTransformMatrix(Tilemap tilemap, Vector3 scale, Vector3Int vec3int)
      : Matrix4x4\r\n\r\nClass: NavMeshBuilderState\r\nNamespace: NavMeshPlus.Extensions\r\nFields:\r\n-
      worldToLocal : Matrix4x4\r\n- worldBounds : Bounds\r\n- roots : IEnumerable`1\r\nMethods:\r\n-
      GetExtraState(bool dispose) : T\r\n- Dispose() : void\r\n\r\nClass: CompositeDisposable\r\nNamespace:
      NavMeshPlus.Extensions\r\nMethods:\r\n- Add(IDisposable dispose) : void\r\n-
      Add(Object dispose) : void\r\n- Dispose() : void\r\n\r\nClass: NavMeshExtension
      : MonoBehaviour\r\nNamespace: NavMeshPlus.Extensions\r\nProperties:\r\n- Order
      : int\r\n- NavMeshSurfaceOwner : NavMeshSurface\r\nMethods:\r\n- CollectSources(NavMeshSurface
      surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n- CalculateWorldBounds(NavMeshSurface
      surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n- PostCollectSources(NavMeshSurface
      surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n\r\nInterface:
      INavMeshExtensionsProvider\r\nNamespace: NavMeshPlus.Extensions\r\nProperties:\r\n-
      Count : int\r\n- Item : NavMeshExtension\r\nMethods:\r\n- Add(NavMeshExtension
      extension, int order) : void\r\n- Remove(NavMeshExtension extension) : void\r\n\r\nClass:
      NavMeshExtensionMeta\r\nNamespace: NavMeshPlus.Extensions\r\nFields:\r\n- order
      : int\r\n- extension : NavMeshExtension\r\n\r\nClass: NavMeshExtensionsProvider\r\nNamespace:
      NavMeshPlus.Extensions\r\nProperties:\r\n- Item : NavMeshExtension\r\n- Count
      : int\r\nMethods:\r\n- Add(NavMeshExtension extension, int order) : void\r\n-
      Remove(NavMeshExtension extension) : void\r\n\r\nClass: NavMeshLink : MonoBehaviour\r\nNamespace:
      NavMeshPlus.Components\r\nProperties:\r\n- agentTypeID : int\r\n- startPoint
      : Vector3\r\n- endPoint : Vector3\r\n- width : float\r\n- costModifier : int\r\n-
      bidirectional : bool\r\n- autoUpdate : bool\r\n- area : int\r\nMethods:\r\n-
      UpdateLink() : void\r\n\r\nClass: NavMeshModifier : MonoBehaviour\r\nNamespace:
      NavMeshPlus.Components\r\nProperties:\r\n- overrideArea : bool\r\n- area :
      int\r\n- ignoreFromBuild : bool\r\n- static activeModifiers : List`1\r\nMethods:\r\n-
      AffectsAgentType(int agentTypeID) : bool\r\n\r\nClass: NavMeshModifierTilemap
      : MonoBehaviour\r\nNamespace: NavMeshPlus.Components\r\nMethods:\r\n- GetModifierMap()
      : Dictionary`2\r\n- CacheModifiers() : void\r\n- HasDuplicateTileModifiers()
      : bool\r\n- TryGetTileModifier(Vector3Int coords, Tilemap tilemap, TileModifier&
      modifier) : bool\r\n- AffectsAgentType(int agentTypeID) : bool\r\n\r\nClass:
      NavMeshModifierVolume : MonoBehaviour\r\nNamespace: NavMeshPlus.Components\r\nProperties:\r\n-
      size : Vector3\r\n- center : Vector3\r\n- area : int\r\n- static activeModifiers
      : List`1\r\nMethods:\r\n- AffectsAgentType(int agentTypeID) : bool\r\n\r\nClass:
      NavMeshSurface : MonoBehaviour\r\nNamespace: NavMeshPlus.Components\r\nProperties:\r\n-
      agentTypeID : int\r\n- collectObjects : CollectObjects\r\n- size : Vector3\r\n-
      center : Vector3\r\n- layerMask : LayerMask\r\n- useGeometry : NavMeshCollectGeometry\r\n-
      defaultArea : int\r\n- ignoreNavMeshAgent : bool\r\n- ignoreNavMeshObstacle
      : bool\r\n- overrideTileSize : bool\r\n- tileSize : int\r\n- overrideVoxelSize
      : bool\r\n- voxelSize : float\r\n- buildHeightMesh : bool\r\n- minRegionArea
      : float\r\n- hideEditorLogs : bool\r\n- navMeshData : NavMeshData\r\n- navMeshDataInstance
      : NavMeshDataInstance\r\n- NevMeshExtensions : INavMeshExtensionsProvider\r\n-
      static activeSurfaces : List`1\r\nMethods:\r\n- AddData() : void\r\n- RemoveData()
      : void\r\n- GetBuildSettings() : NavMeshBuildSettings\r\n- BuildNavMesh() :
      void\r\n- BuildNavMeshAsync() : AsyncOperation\r\n- UpdateNavMesh(NavMeshData
      data) : AsyncOperation\r\n- static GetWorldBounds(Matrix4x4 mat, Bounds bounds)
      : Bounds\r\n- CalculateWorldBounds(List`1 sources) : Bounds\r\n\r\nClass: RootSources2d
      : NavMeshExtension\r\nNamespace: NavMeshPlus.Extensions\r\nProperties:\r\n-
      RootSources : List`1\r\nMethods:\r\n- CollectSources(NavMeshSurface surface,
      List`1 sources, NavMeshBuilderState navNeshState) : void\r\n\r\nClass: RotateAgentInstantly\r\nNamespace:
      NavMeshPlus.Extensions\r\nMethods:\r\n- UpdateAgent() : void\r\n\r\nClass:
      RotateAgentSmoothly\r\nNamespace: NavMeshPlus.Extensions\r\nFields:\r\n- rotateSpeed
      : float\r\nMethods:\r\n- UpdateAgent() : void\r\n\r\nClass: Demo_Camera : MonoBehaviour\r\nNamespace:
      SpriteShadersUltimate.Demo\r\n\r\nClass: Demo_ColorPicker : MonoBehaviour\r\nNamespace:
      SpriteShadersUltimate.Demo\r\nFields:\r\n- targetMaterial : Material\r\n- propertyName
      : string\r\nMethods:\r\n- SetTarget(Material newMaterial, string newProperty,
      string shaderName) : void\r\n- LoadColor(Color color) : void\r\n- UpdateColor(float
      hue, float saturation) : void\r\n- SliderChanged() : void\r\n- OnPointerEnter(PointerEventData
      eventData) : void\r\n- OnPointerExit(PointerEventData eventData) : void\r\n\r\nClass:
      Demo_Display : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nDescription:
      Selected: \r\nFields:\r\n- static selected : Demo_Display - Selected: \r\n-
      firstProperty : string\r\n- ignorePlayer : bool\r\n- cycleTime : float\r\nMethods:\r\n-
      ChangeIndex() : void\r\n- HasAlternatives() : bool\r\n- UpdateIndex() : void\r\n-
      Select() : void\r\n- Deselect() : void\r\n- ResetMaterial() : void\r\n- InstantiateMaterial()
      : Material\r\n\r\nClass: Demo_DisplayTitle : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nFields:\r\n-
      target : Transform\r\n\r\nClass: Demo_FloatPicker : MonoBehaviour\r\nNamespace:
      SpriteShadersUltimate.Demo\r\nFields:\r\n- targetMaterial : Material\r\n- propertyName
      : string\r\nMethods:\r\n- SetTarget(Material newMaterial, string newProperty,
      string shaderName) : void\r\n- LoadFloat(float floatValue) : void\r\n- UpdateFloat(float
      floatValue) : void\r\n- SliderChanged() : void\r\n\r\nClass: Demo_GUI : MonoBehaviour\r\nNamespace:
      SpriteShadersUltimate.Demo\r\nFields:\r\n- static instance : Demo_GUI\r\nMethods:\r\n-
      CreateTitle(string title, Transform target) : void\r\n- UpdateHud() : void\r\n-
      static IsKeyword(string propName) : bool\r\n- BackButton() : void\r\n- ResetMaterialButton()
      : void\r\n- AlternativeButton() : void\r\n- UpdateScroll() : void\r\n\r\nClass:
      Demo_Player : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nFields:\r\n-
      static instance : Demo_Player\r\n- idleSprites : List`1\r\n- runningSprites
      : List`1\r\n- hurtSprites : List`1\r\n- ignoreMaterials : bool\r\nMethods:\r\n-
      GetHurt(Vector2 velocity) : void\r\n- ApplyMaterial(Material material) : void\r\n-
      SnapPosition(Vector3 newPosition) : void\r\n- ResetPosition() : void\r\n- ResetMaterial()
      : void\r\n\r\nClass: Demo_Shaders : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nFields:\r\n-
      static instance : Demo_Shaders\r\n- static zoomFactor : float\r\nMethods:\r\n-
      AllowMovement() : bool\r\n- FadeInGUI() : bool\r\n\r\nClass: Demo_SpriteFader
      : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nMethods:\r\n- SetFade(bool
      fadeState) : void\r\n\r\nClass: Demo_Trigger : MonoBehaviour\r\nNamespace:
      SpriteShadersUltimate.Demo\r\nFields:\r\n- events : List`1\r\nMethods:\r\n-
      ChangeState(bool isActive) : void\r\n\r\nClass: Demo_TriggerEvent\r\nNamespace:
      SpriteShadersUltimate.Demo\r\nFields:\r\n- delay : float\r\n- fader : ShaderFaderSSU\r\n-
      faderState : bool\r\n- negateState : bool\r\n- snapPlayer : bool\r\n- isRelative
      : bool\r\n- snapPosition : Vector3\r\n- hurtPlayer : bool\r\n- velocity : Vector2\r\nMethods:\r\n-
      Play(Transform source) : void\r\n\r\nClass: Demo_VectorFollow : MonoBehaviour\r\nNamespace:
      SpriteShadersUltimate.Demo\r\nFields:\r\n- propertyName : string - Public:
      \r\n- trackedTransform : Transform\r\n\r\nClass: Demo_VectorPicker : MonoBehaviour\r\nNamespace:
      SpriteShadersUltimate.Demo\r\nFields:\r\n- targetMaterial : Material\r\n- propertyName
      : string\r\nMethods:\r\n- SetTarget(Material newMaterial, string newProperty,
      string shaderName) : void\r\n- LoadVector(Vector2 vectorValue) : void\r\n-
      UpdateVector(Vector2 vectorValue) : void\r\n- SliderChanged() : void\r\n\r\nClass:
      ImageSSU : InstancerSSU\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n-
      updateChanges : bool - Updates material when RectTransform changes. \r\nMethods:\r\n-
      UpdateMaterial() : void\r\n\r\nClass: InteractiveSquishSSU : MonoBehaviour\r\nFields:\r\n-
      squishSpeed : float\r\n- staySquished : bool\r\n- squishDuration : float\r\n\r\nClass:
      InteractiveWindSSU : InstancerSSU\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n-
      rotationFactor : float\r\n- bendInSpeed : float\r\n- bendOutSpeed : float\r\n-
      stayBent : bool\r\n- minBendSpeed : float\r\n- hyperPerformanceMode : bool\r\n-
      randomOffsetZ : bool\r\n- customMaterial : bool\r\n- inactiveShader : string\r\n-
      inactiveMaterial : Material\r\n- randomizeWiggle : bool\r\n- allowCustomLayer
      : bool\r\nMethods:\r\n- UpdateShader() : void\r\n- static DefaultCollider(BoxCollider2D
      box) : void\r\n\r\nClass: WindManagerSSU : MonoBehaviour\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n-
      windNoiseScale : float\r\n- windNoiseSpeed : float\r\n- windIntensityFrom :
      float\r\n- windIntensityTo : float\r\nMethods:\r\n- ModifyIfChanged(Single&
      currentValue, Single& oldValue, string globalShaderName) : void\r\n\r\nClass:
      WindParallaxSSU : MonoBehaviour\r\nNamespace: SpriteShadersUltimate\r\n\r\nClass:
      InstancerSSU : MonoBehaviour\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n-
      runtimeMaterial : Material\r\n\r\nClass: MaterialInstancerSSU : InstancerSSU\r\nNamespace:
      SpriteShadersUltimate\r\n\r\nClass: ShaderFaderSSU : MonoBehaviour\r\nNamespace:
      SpriteShadersUltimate\r\nFields:\r\n- automaticFading : bool - Fading: \r\n-
      isFaded : bool\r\n- fadeValue : float\r\n- duration : float\r\n- unscaledTime
      : bool\r\n- fadeCurve : AnimationCurve\r\n- getChildObjects : bool - Materials:
      \r\n- poolMaterials : bool\r\n- renderers : List`1\r\n- graphics : List`1\r\n-
      floatProperties : List`1 - Properties: \r\n- vectorProperties : List`1\r\n-
      colorProperties : List`1\r\nMethods:\r\n- UpdateMaterials() : void\r\n- UpdateSingleMaterial(Material
      mat, float fadeFactor) : void\r\n- ReloadMaterials() : void\r\n\r\nClass: BaseFaderSSU\r\nNamespace:
      SpriteShadersUltimate\r\nFields:\r\n- propertyName : string\r\n- fromTime :
      float\r\n- toTime : float\r\n\r\nClass: FloatFaderSSU : BaseFaderSSU\r\nNamespace:
      SpriteShadersUltimate\r\nFields:\r\n- fromValue : float\r\n- toValue : float\r\n\r\nClass:
      VectorFaderSSU : BaseFaderSSU\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n-
      fromValue : Vector4\r\n- toValue : Vector4\r\n\r\nClass: ColorFaderSSU : BaseFaderSSU\r\nNamespace:
      SpriteShadersUltimate\r\nFields:\r\n- fromValue : Color\r\n- toValue : Color\r\n\r\nClass:
      SpriteSheetSSU : MonoBehaviour\r\nNamespace: SpriteShadersUltimate\r\nDescription:
      Attach this to sprite renderers or images with a sprite shaders ultimate material.
      Enable Sprite Sheet Fix and let this component update the Sprite Sheet Rect
      variable. \r\nFields:\r\n- updateChanges : bool\r\nMethods:\r\n- UpdateSpriteRect()
      : void\r\n- static GetSheetVector(Sprite sprite) : Vector4\r\n\r\nClass: UnscaledTimeSSU
      : MonoBehaviour\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n- dontDestroyOnLoad
      : bool\r\n\r\n"
    Messages:
    - Id: 
      Role: system
      Content: "I want you to write clean Unity Engine C# code by request and have
        a conversation with me about my project or unity in general.\r\nBe very concise
        in your responses.\r\nThe code must follow Unity Codestyle. \r\nIn case of
        a class or method add a comment section to it. \r\nDo not comment on every
        line of code. \r\nYou must add comments to the class itself and all public
        members of the class. \r\nInclude all necessary namespaces for the code to
        compile.\r\nYou must ask for source code file if I ask you to modify existing
        code and you dont have it in the conversation.\r\nUnity version to use: 6000.0.32f1"
      Skip: 0
      Attachments: []
    - Id: 
      Role: user
      Content: "Here is what I have in my project:\r\nClass: BoolEvent : ScriptableObject\r\nMethods:\r\n-
        Raise(bool value) : void\r\n- Register(Action`1 callback) : void\r\n- Unregister(Action`1
        callback) : void\r\n\r\nClass: CropData : ScriptableObject\r\nFields:\r\n-
        cropName : string\r\n- growthStages : Sprite[]\r\n- growthDuration : int\r\n\r\nClass:
        DebugUIOverlay : MonoBehaviour\r\nProperties:\r\n- static Instance : DebugUIOverlay\r\nMethods:\r\n-
        ShowLastAction(string text) : void\r\n\r\nClass: FarmTileDataManager : MonoBehaviour\r\nDescription:
        Stores logical gameplay state for each farm tile. Tracks tilling, watering,
        and crop growth. Interfaces with tilemaps and farming tools to apply gameplay
        effects. \r\nProperties:\r\n- static Instance : FarmTileDataManager\r\nMethods:\r\n-
        IsTileTillable(Vector3Int pos) : bool\r\n- GetTileData(Vector3Int pos) :
        FarmTileData\r\n- SetTilled(Vector3Int pos, bool value) : void\r\n- SetWatered(Vector3Int
        pos, bool value) : void\r\n- IsTilled(Vector3Int pos) : bool\r\n- IsWatered(Vector3Int
        pos) : bool\r\n\r\nClass: FarmTileData\r\nFields:\r\n- isTilled : bool\r\n-
        isWatered : bool\r\n- plantedCrop : CropData\r\n- growthDays : int\r\nMethods:\r\n-
        HasRipeCrop() : bool\r\n\r\nClass: FarmToolHandler : MonoBehaviour\r\nDescription:
        Handles fixed tool interactions (Hoe, Water, Plant, Harvest). Supports hold-to-interact
        with a world-space slider anchored to the currently targeted tile. \r\nProperties:\r\n-
        static CurrentSlot : ToolSlot\r\n\r\nClass: GameManager : MonoBehaviour\r\nProperties:\r\n-
        static Instance : GameManager\r\n\r\nClass: GameStateManager : MonoBehaviour\r\nProperties:\r\n-
        static Instance : GameStateManager\r\n- CurrentState : GameState\r\nMethods:\r\n-
        SetState(GameState newState) : void\r\n- IsGameplay() : bool\r\n\r\nClass:
        GameTimeManager : MonoBehaviour\r\nProperties:\r\n- static Instance : GameTimeManager\r\n-
        CurrentHour : int\r\n- CurrentMinute : int\r\n- Day : int\r\nMethods:\r\n-
        IsNight() : bool\r\n- GetFormattedTime() : string\r\n\r\nClass: InputManager
        : MonoBehaviour\r\nDescription: Manages player input and exposes clean event-based
        API Automatically hooks up to InputSystem_Actions Emits movement vector and
        events like Interact, Attack, Jump, etc. \r\nProperties:\r\n- static Instance
        : InputManager\r\n- MoveInput : Vector2\r\n- LookInput : Vector2\r\n- CurrentControlScheme
        : string\r\nMethods:\r\n- OnMove(CallbackContext context) : void\r\n- OnLook(CallbackContext
        context) : void\r\n- OnGamepadLook(CallbackContext context) : void\r\n- OnAttack(CallbackContext
        context) : void\r\n- OnInteract(CallbackContext context) : void\r\n- OnJump(CallbackContext
        context) : void\r\n- OnCrouch(CallbackContext context) : void\r\n- OnNext(CallbackContext
        context) : void\r\n- OnPrevious(CallbackContext context) : void\r\n- OnSprint(CallbackContext
        context) : void\r\n- IsUsingGamepad() : bool\r\n- IsUsingMouse() : bool\r\n\r\nClass:
        InteractionTargetingSystem : MonoBehaviour\r\nDescription: Handles tile highlighting
        for interaction. Supports distinct logic for mouse, gamepad, and movement-only
        modes. \r\nFields:\r\n- selectionHighlightTilemap : Tilemap\r\n- Grid : Grid\r\n-
        highlightTile : Tile\r\n- highlightRange : int\r\n- coneSize : Vector2Int\r\n-
        footPositionOffset : float\r\n- mouseTargetMaxDistance : float\r\n- drawDebugGizmos
        : bool\r\n- gizmoColor : Color\r\nProperties:\r\n- static Instance : InteractionTargetingSystem\r\n-
        CurrentTargetedTile : Nullable`1\r\n\r\nClass: Player_Controller : MonoBehaviour\r\nProperties:\r\n-
        static Facing : Directions\r\n- static Position : Vector3\r\n- static IsStationary
        : bool\r\n- static IsUsingLookDirection : bool\r\n\r\nClass: PlayerFormData\r\nFields:\r\n-
        FormType : PlayerForm\r\n- VisualRoot : GameObject\r\n- Animator : Animator\r\n-
        Renderer : SpriteRenderer\r\n- MoveSpeed : float\r\n\r\nClass: PlayerStateController
        : MonoBehaviour\r\nProperties:\r\n- static Instance : PlayerStateController\r\n-
        CurrentForm : PlayerForm\r\n- CurrentAnimator : Animator\r\n- CurrentSpriteRenderer
        : SpriteRenderer\r\n- MoveSpeed : float\r\nMethods:\r\n- EnterWerewolfForm()
        : void\r\n- ExitWerewolfForm() : void\r\n- IsWerewolf() : bool\r\n\r\nClass:
        CodeBuddyDemo : MonoBehaviour\r\nNamespace: CodeBuddy.Demo\r\nMethods:\r\n-
        JoinDiscord() : void\r\n- OpenDocumentation() : void\r\n\r\nClass: Setup\r\nNamespace:
        Merkab\r\nMethods:\r\n- static CreateDefaultFolders() : void\r\n- static
        ImportMyFavoriteAssets() : void\r\n- static ImportBasics() : void\r\n- static
        InstallUnityAINavigation() : void\r\n- static InstallOpenSource() : void\r\n\r\nClass:
        Assets\r\nNamespace: Merkab\r\nMethods:\r\n- static ImportAssets(string asset,
        string subfolder, string folder) : void\r\n\r\nInterface: IAgentOverride\r\nNamespace:
        NavMeshPlus.Extensions\r\nMethods:\r\n- UpdateAgent() : void\r\n\r\nClass:
        AgentDefaultOverride\r\nNamespace: NavMeshPlus.Extensions\r\nMethods:\r\n-
        UpdateAgent() : void\r\n\r\nClass: AgentOverride2d : MonoBehaviour\r\nNamespace:
        NavMeshPlus.Extensions\r\nProperties:\r\n- Agent : NavMeshAgent\r\n- agentOverride
        : IAgentOverride\r\n\r\nClass: AgentRotate2d : MonoBehaviour\r\nNamespace:
        NavMeshPlus.Extensions\r\n\r\nClass: AgentRotateSmooth2d : MonoBehaviour\r\nNamespace:
        NavMeshPlus.Extensions\r\nFields:\r\n- angularSpeed : float\r\n\r\nClass:
        CollectSources2d : NavMeshExtension\r\nNamespace: NavMeshPlus.Extensions\r\nProperties:\r\n-
        overrideByGrid : bool\r\n- useMeshPrefab : GameObject\r\n- compressBounds
        : bool\r\n- overrideVector : Vector3\r\nMethods:\r\n- CalculateWorldBounds(NavMeshSurface
        surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n- CollectSources(NavMeshSurface
        surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n\r\nClass:
        CollectSourcesCache2d : NavMeshExtension\r\nNamespace: NavMeshPlus.Extensions\r\nProperties:\r\n-
        IsDirty : bool\r\n- SourcesCount : int\r\n- CahcheCount : int\r\n- Cache
        : List`1\r\nMethods:\r\n- AddSource(GameObject gameObject, NavMeshBuildSource
        source) : bool\r\n- UpdateSource(GameObject gameObject) : bool\r\n- RemoveSource(GameObject
        gameObject) : bool\r\n- UpdateNavMesh(NavMeshData data) : AsyncOperation\r\n-
        UpdateNavMesh() : AsyncOperation\r\n- CollectSources(NavMeshSurface surface,
        List`1 sources, NavMeshBuilderState navMeshState) : void\r\n- PostCollectSources(NavMeshSurface
        surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n\r\nClass:
        CollectTilemapSourcesCache2d : NavMeshExtension\r\nNamespace: NavMeshPlus.Extensions\r\nMethods:\r\n-
        UpdateNavMesh(NavMeshData data) : AsyncOperation\r\n- UpdateNavMesh() : AsyncOperation\r\n-
        PostCollectSources(NavMeshSurface surface, List`1 sources, NavMeshBuilderState
        navNeshState) : void\r\n\r\nClass: NavMeshAgentAttribute : PropertyAttribute\r\nNamespace:
        NavMeshPlus.Extensions\r\n\r\nClass: NavMeshAreaAttribute : PropertyAttribute\r\nNamespace:
        NavMeshPlus.Extensions\r\nDescription: See also NavMeshAreaAttributePropertyDrawer
        \r\n\r\nClass: NavMeshBuilder2dState\r\nNamespace: NavMeshPlus.Extensions\r\nFields:\r\n-
        spriteMeshMap : Dictionary`2\r\n- coliderMeshMap : Dictionary`2\r\n- lookupCallback
        : Action`2\r\n- defaultArea : int\r\n- layerMask : int\r\n- agentID : int\r\n-
        overrideByGrid : bool\r\n- useMeshPrefab : GameObject\r\n- compressBounds
        : bool\r\n- overrideVector : Vector3\r\n- CollectGeometry : NavMeshCollectGeometry\r\n-
        CollectObjects : CollectObjects\r\n- parent : GameObject\r\n- hideEditorLogs
        : bool\r\nProperties:\r\n- Root : IEnumerable`1\r\nMethods:\r\n- GetMesh(Sprite
        sprite) : Mesh\r\n- GetMesh(Collider2D collider) : Mesh\r\n- SetRoot(IEnumerable`1
        root) : void\r\n- GetRoot() : IEnumerable`1\r\n- Dispose() : void\r\n\r\nClass:
        NavMeshBuilder2d\r\nNamespace: NavMeshPlus.Extensions\r\nMethods:\r\n- static
        CollectSources(List`1 sources, NavMeshBuilder2dState builder) : void\r\n-
        static CollectSources(GameObject root, List`1 sources, NavMeshBuilder2dState
        builder) : void\r\n- static CollectSources(List`1 sources, NavMeshBuilder2dState
        builder, NavMeshModifier modifier, int area) : void\r\n- static CollectSources(List`1
        sources, SpriteRenderer spriteRenderer, int area, NavMeshBuilder2dState builder)
        : void\r\n- static CollectSources(List`1 sources, Collider2D collider, int
        area, NavMeshBuilder2dState builder) : void\r\n- static CollectTileSources(List`1
        sources, Tilemap tilemap, int area, NavMeshBuilder2dState builder) : void\r\n-
        static GetCellTransformMatrix(Tilemap tilemap, Vector3 scale, Vector3Int
        vec3int) : Matrix4x4\r\n\r\nClass: NavMeshBuilderState\r\nNamespace: NavMeshPlus.Extensions\r\nFields:\r\n-
        worldToLocal : Matrix4x4\r\n- worldBounds : Bounds\r\n- roots : IEnumerable`1\r\nMethods:\r\n-
        GetExtraState(bool dispose) : T\r\n- Dispose() : void\r\n\r\nClass: CompositeDisposable\r\nNamespace:
        NavMeshPlus.Extensions\r\nMethods:\r\n- Add(IDisposable dispose) : void\r\n-
        Add(Object dispose) : void\r\n- Dispose() : void\r\n\r\nClass: NavMeshExtension
        : MonoBehaviour\r\nNamespace: NavMeshPlus.Extensions\r\nProperties:\r\n-
        Order : int\r\n- NavMeshSurfaceOwner : NavMeshSurface\r\nMethods:\r\n- CollectSources(NavMeshSurface
        surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n- CalculateWorldBounds(NavMeshSurface
        surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n- PostCollectSources(NavMeshSurface
        surface, List`1 sources, NavMeshBuilderState navNeshState) : void\r\n\r\nInterface:
        INavMeshExtensionsProvider\r\nNamespace: NavMeshPlus.Extensions\r\nProperties:\r\n-
        Count : int\r\n- Item : NavMeshExtension\r\nMethods:\r\n- Add(NavMeshExtension
        extension, int order) : void\r\n- Remove(NavMeshExtension extension) : void\r\n\r\nClass:
        NavMeshExtensionMeta\r\nNamespace: NavMeshPlus.Extensions\r\nFields:\r\n-
        order : int\r\n- extension : NavMeshExtension\r\n\r\nClass: NavMeshExtensionsProvider\r\nNamespace:
        NavMeshPlus.Extensions\r\nProperties:\r\n- Item : NavMeshExtension\r\n- Count
        : int\r\nMethods:\r\n- Add(NavMeshExtension extension, int order) : void\r\n-
        Remove(NavMeshExtension extension) : void\r\n\r\nClass: NavMeshLink : MonoBehaviour\r\nNamespace:
        NavMeshPlus.Components\r\nProperties:\r\n- agentTypeID : int\r\n- startPoint
        : Vector3\r\n- endPoint : Vector3\r\n- width : float\r\n- costModifier :
        int\r\n- bidirectional : bool\r\n- autoUpdate : bool\r\n- area : int\r\nMethods:\r\n-
        UpdateLink() : void\r\n\r\nClass: NavMeshModifier : MonoBehaviour\r\nNamespace:
        NavMeshPlus.Components\r\nProperties:\r\n- overrideArea : bool\r\n- area
        : int\r\n- ignoreFromBuild : bool\r\n- static activeModifiers : List`1\r\nMethods:\r\n-
        AffectsAgentType(int agentTypeID) : bool\r\n\r\nClass: NavMeshModifierTilemap
        : MonoBehaviour\r\nNamespace: NavMeshPlus.Components\r\nMethods:\r\n- GetModifierMap()
        : Dictionary`2\r\n- CacheModifiers() : void\r\n- HasDuplicateTileModifiers()
        : bool\r\n- TryGetTileModifier(Vector3Int coords, Tilemap tilemap, TileModifier&
        modifier) : bool\r\n- AffectsAgentType(int agentTypeID) : bool\r\n\r\nClass:
        NavMeshModifierVolume : MonoBehaviour\r\nNamespace: NavMeshPlus.Components\r\nProperties:\r\n-
        size : Vector3\r\n- center : Vector3\r\n- area : int\r\n- static activeModifiers
        : List`1\r\nMethods:\r\n- AffectsAgentType(int agentTypeID) : bool\r\n\r\nClass:
        NavMeshSurface : MonoBehaviour\r\nNamespace: NavMeshPlus.Components\r\nProperties:\r\n-
        agentTypeID : int\r\n- collectObjects : CollectObjects\r\n- size : Vector3\r\n-
        center : Vector3\r\n- layerMask : LayerMask\r\n- useGeometry : NavMeshCollectGeometry\r\n-
        defaultArea : int\r\n- ignoreNavMeshAgent : bool\r\n- ignoreNavMeshObstacle
        : bool\r\n- overrideTileSize : bool\r\n- tileSize : int\r\n- overrideVoxelSize
        : bool\r\n- voxelSize : float\r\n- buildHeightMesh : bool\r\n- minRegionArea
        : float\r\n- hideEditorLogs : bool\r\n- navMeshData : NavMeshData\r\n- navMeshDataInstance
        : NavMeshDataInstance\r\n- NevMeshExtensions : INavMeshExtensionsProvider\r\n-
        static activeSurfaces : List`1\r\nMethods:\r\n- AddData() : void\r\n- RemoveData()
        : void\r\n- GetBuildSettings() : NavMeshBuildSettings\r\n- BuildNavMesh()
        : void\r\n- BuildNavMeshAsync() : AsyncOperation\r\n- UpdateNavMesh(NavMeshData
        data) : AsyncOperation\r\n- static GetWorldBounds(Matrix4x4 mat, Bounds bounds)
        : Bounds\r\n- CalculateWorldBounds(List`1 sources) : Bounds\r\n\r\nClass:
        RootSources2d : NavMeshExtension\r\nNamespace: NavMeshPlus.Extensions\r\nProperties:\r\n-
        RootSources : List`1\r\nMethods:\r\n- CollectSources(NavMeshSurface surface,
        List`1 sources, NavMeshBuilderState navNeshState) : void\r\n\r\nClass: RotateAgentInstantly\r\nNamespace:
        NavMeshPlus.Extensions\r\nMethods:\r\n- UpdateAgent() : void\r\n\r\nClass:
        RotateAgentSmoothly\r\nNamespace: NavMeshPlus.Extensions\r\nFields:\r\n-
        rotateSpeed : float\r\nMethods:\r\n- UpdateAgent() : void\r\n\r\nClass: Demo_Camera
        : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\n\r\nClass: Demo_ColorPicker
        : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nFields:\r\n-
        targetMaterial : Material\r\n- propertyName : string\r\nMethods:\r\n- SetTarget(Material
        newMaterial, string newProperty, string shaderName) : void\r\n- LoadColor(Color
        color) : void\r\n- UpdateColor(float hue, float saturation) : void\r\n- SliderChanged()
        : void\r\n- OnPointerEnter(PointerEventData eventData) : void\r\n- OnPointerExit(PointerEventData
        eventData) : void\r\n\r\nClass: Demo_Display : MonoBehaviour\r\nNamespace:
        SpriteShadersUltimate.Demo\r\nDescription: Selected: \r\nFields:\r\n- static
        selected : Demo_Display - Selected: \r\n- firstProperty : string\r\n- ignorePlayer
        : bool\r\n- cycleTime : float\r\nMethods:\r\n- ChangeIndex() : void\r\n-
        HasAlternatives() : bool\r\n- UpdateIndex() : void\r\n- Select() : void\r\n-
        Deselect() : void\r\n- ResetMaterial() : void\r\n- InstantiateMaterial()
        : Material\r\n\r\nClass: Demo_DisplayTitle : MonoBehaviour\r\nNamespace:
        SpriteShadersUltimate.Demo\r\nFields:\r\n- target : Transform\r\n\r\nClass:
        Demo_FloatPicker : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nFields:\r\n-
        targetMaterial : Material\r\n- propertyName : string\r\nMethods:\r\n- SetTarget(Material
        newMaterial, string newProperty, string shaderName) : void\r\n- LoadFloat(float
        floatValue) : void\r\n- UpdateFloat(float floatValue) : void\r\n- SliderChanged()
        : void\r\n\r\nClass: Demo_GUI : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nFields:\r\n-
        static instance : Demo_GUI\r\nMethods:\r\n- CreateTitle(string title, Transform
        target) : void\r\n- UpdateHud() : void\r\n- static IsKeyword(string propName)
        : bool\r\n- BackButton() : void\r\n- ResetMaterialButton() : void\r\n- AlternativeButton()
        : void\r\n- UpdateScroll() : void\r\n\r\nClass: Demo_Player : MonoBehaviour\r\nNamespace:
        SpriteShadersUltimate.Demo\r\nFields:\r\n- static instance : Demo_Player\r\n-
        idleSprites : List`1\r\n- runningSprites : List`1\r\n- hurtSprites : List`1\r\n-
        ignoreMaterials : bool\r\nMethods:\r\n- GetHurt(Vector2 velocity) : void\r\n-
        ApplyMaterial(Material material) : void\r\n- SnapPosition(Vector3 newPosition)
        : void\r\n- ResetPosition() : void\r\n- ResetMaterial() : void\r\n\r\nClass:
        Demo_Shaders : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nFields:\r\n-
        static instance : Demo_Shaders\r\n- static zoomFactor : float\r\nMethods:\r\n-
        AllowMovement() : bool\r\n- FadeInGUI() : bool\r\n\r\nClass: Demo_SpriteFader
        : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nMethods:\r\n-
        SetFade(bool fadeState) : void\r\n\r\nClass: Demo_Trigger : MonoBehaviour\r\nNamespace:
        SpriteShadersUltimate.Demo\r\nFields:\r\n- events : List`1\r\nMethods:\r\n-
        ChangeState(bool isActive) : void\r\n\r\nClass: Demo_TriggerEvent\r\nNamespace:
        SpriteShadersUltimate.Demo\r\nFields:\r\n- delay : float\r\n- fader : ShaderFaderSSU\r\n-
        faderState : bool\r\n- negateState : bool\r\n- snapPlayer : bool\r\n- isRelative
        : bool\r\n- snapPosition : Vector3\r\n- hurtPlayer : bool\r\n- velocity :
        Vector2\r\nMethods:\r\n- Play(Transform source) : void\r\n\r\nClass: Demo_VectorFollow
        : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nFields:\r\n-
        propertyName : string - Public: \r\n- trackedTransform : Transform\r\n\r\nClass:
        Demo_VectorPicker : MonoBehaviour\r\nNamespace: SpriteShadersUltimate.Demo\r\nFields:\r\n-
        targetMaterial : Material\r\n- propertyName : string\r\nMethods:\r\n- SetTarget(Material
        newMaterial, string newProperty, string shaderName) : void\r\n- LoadVector(Vector2
        vectorValue) : void\r\n- UpdateVector(Vector2 vectorValue) : void\r\n- SliderChanged()
        : void\r\n\r\nClass: ImageSSU : InstancerSSU\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n-
        updateChanges : bool - Updates material when RectTransform changes. \r\nMethods:\r\n-
        UpdateMaterial() : void\r\n\r\nClass: InteractiveSquishSSU : MonoBehaviour\r\nFields:\r\n-
        squishSpeed : float\r\n- staySquished : bool\r\n- squishDuration : float\r\n\r\nClass:
        InteractiveWindSSU : InstancerSSU\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n-
        rotationFactor : float\r\n- bendInSpeed : float\r\n- bendOutSpeed : float\r\n-
        stayBent : bool\r\n- minBendSpeed : float\r\n- hyperPerformanceMode : bool\r\n-
        randomOffsetZ : bool\r\n- customMaterial : bool\r\n- inactiveShader : string\r\n-
        inactiveMaterial : Material\r\n- randomizeWiggle : bool\r\n- allowCustomLayer
        : bool\r\nMethods:\r\n- UpdateShader() : void\r\n- static DefaultCollider(BoxCollider2D
        box) : void\r\n\r\nClass: WindManagerSSU : MonoBehaviour\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n-
        windNoiseScale : float\r\n- windNoiseSpeed : float\r\n- windIntensityFrom
        : float\r\n- windIntensityTo : float\r\nMethods:\r\n- ModifyIfChanged(Single&
        currentValue, Single& oldValue, string globalShaderName) : void\r\n\r\nClass:
        WindParallaxSSU : MonoBehaviour\r\nNamespace: SpriteShadersUltimate\r\n\r\nClass:
        InstancerSSU : MonoBehaviour\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n-
        runtimeMaterial : Material\r\n\r\nClass: MaterialInstancerSSU : InstancerSSU\r\nNamespace:
        SpriteShadersUltimate\r\n\r\nClass: ShaderFaderSSU : MonoBehaviour\r\nNamespace:
        SpriteShadersUltimate\r\nFields:\r\n- automaticFading : bool - Fading: \r\n-
        isFaded : bool\r\n- fadeValue : float\r\n- duration : float\r\n- unscaledTime
        : bool\r\n- fadeCurve : AnimationCurve\r\n- getChildObjects : bool - Materials:
        \r\n- poolMaterials : bool\r\n- renderers : List`1\r\n- graphics : List`1\r\n-
        floatProperties : List`1 - Properties: \r\n- vectorProperties : List`1\r\n-
        colorProperties : List`1\r\nMethods:\r\n- UpdateMaterials() : void\r\n- UpdateSingleMaterial(Material
        mat, float fadeFactor) : void\r\n- ReloadMaterials() : void\r\n\r\nClass:
        BaseFaderSSU\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n- propertyName
        : string\r\n- fromTime : float\r\n- toTime : float\r\n\r\nClass: FloatFaderSSU
        : BaseFaderSSU\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n- fromValue
        : float\r\n- toValue : float\r\n\r\nClass: VectorFaderSSU : BaseFaderSSU\r\nNamespace:
        SpriteShadersUltimate\r\nFields:\r\n- fromValue : Vector4\r\n- toValue :
        Vector4\r\n\r\nClass: ColorFaderSSU : BaseFaderSSU\r\nNamespace: SpriteShadersUltimate\r\nFields:\r\n-
        fromValue : Color\r\n- toValue : Color\r\n\r\nClass: SpriteSheetSSU : MonoBehaviour\r\nNamespace:
        SpriteShadersUltimate\r\nDescription: Attach this to sprite renderers or
        images with a sprite shaders ultimate material. Enable Sprite Sheet Fix and
        let this component update the Sprite Sheet Rect variable. \r\nFields:\r\n-
        updateChanges : bool\r\nMethods:\r\n- UpdateSpriteRect() : void\r\n- static
        GetSheetVector(Sprite sprite) : Vector4\r\n\r\nClass: UnscaledTimeSSU : MonoBehaviour\r\nNamespace:
        SpriteShadersUltimate\r\nFields:\r\n- dontDestroyOnLoad : bool\r\n\r\n"
      Skip: 0
      Attachments: []
    - Id: 
      Role: user
      Content: 'I would like to work on a refactor of this player controller and
        interaction system that allow us to cleanly work on the highlighting system. 
        Right now it requires a lot of asing which control state we are in, but i
        want to back it up a little and work on setting up through unity input system
        to separate logic cleanly into two toggleable modes, controller and keyboard
        & mouse.  This way in logic we will know which one we are in and we will
        use that logic.  We also need to handle adding in a toggle to switch between
        controller and KBM, and set it all  up in the input system.  This is Unity
        6 '
      Skip: 0
      Attachments:
      - 677ca8cf8ad0b6644a8bbd3a6aa1af2a
      - 0ee21bbb5bffda44697ed8541bb763ac
      - 309abaca7f822874992b5c9c8eb8f0b1
      - a765460b2f1aa8046bbcd6d994cbc3c5
      - 0a5da76b10abead42b1ab88b181d0e77
      - 8cc85879c5933a74d91a4474ba077d19
      - 523929666607fb242b7d2d1031f7f61c
      - 38bc8014aa7998d40b3e413f5086ac8a
      - a488f650d5d8cca41b6c037eee0d01b0
      - 171dbb7715a09b346a19c7d965740f3a
      - c0f33ca4825565f41861c26fa20bb420
      - 81cb6fd7c1bf72b4d974659bc09cd8df
      - 2d7d109fe76974144a6f60f486d6a137
    - Id: 
      Role: assistant
      Content: "I'll help you refactor this into a cleaner input system. Let's start
        with the core components:\n\n1. First, let's create an InputMode enum and
        system:\n\n```csharp\nusing UnityEngine;\nusing UnityEngine.InputSystem;\n\npublic
        enum InputMode \n{\n    KeyboardMouse,\n    Gamepad\n}\n\npublic class InputModeManager
        : MonoBehaviour\n{\n    public static InputModeManager Instance { get; private
        set; }\n    public InputMode CurrentMode { get; private set; }\n    \n   
        public event System.Action<InputMode> OnInputModeChanged;\n\n    private
        void Awake()\n    {\n        if (Instance != null && Instance != this)\n       
        {\n            Destroy(gameObject);\n            return;\n        }\n       
        \n        Instance = this;\n        DontDestroyOnLoad(gameObject);\n    }\n\n   
        public void SetInputMode(InputMode newMode)\n    {\n        if (CurrentMode
        == newMode) return;\n        \n        CurrentMode = newMode;\n        OnInputModeChanged?.Invoke(newMode);\n   
        }\n\n    public void ToggleInputMode()\n    {\n        SetInputMode(CurrentMode
        == InputMode.KeyboardMouse \n            ? InputMode.Gamepad \n           
        : InputMode.KeyboardMouse);\n    }\n}\n```\n\n2. Now let's modify the InteractionTargetingSystem
        to use this:\n\n```csharp\nusing UnityEngine;\nusing UnityEngine.Tilemaps;\n\npublic
        class InteractionTargetingSystem : MonoBehaviour\n{\n    [Header(\"References\")]\n   
        [SerializeField] private Tilemap selectionHighlightTilemap;\n    [SerializeField]
        private Tile highlightTile;\n    [SerializeField] private Grid grid;\n   
        \n    [Header(\"Settings\")]\n    [SerializeField] private float mouseTargetMaxDistance
        = 5f;\n    [SerializeField] private int gamepadHighlightRange = 2;\n    [SerializeField]
        private Vector2Int gamepadConeSize = new(3, 2);\n    [SerializeField] private
        float footPositionOffset = 0.5f;\n\n    public Vector3Int? CurrentTargetedTile
        { get; private set; }\n\n    private void Update()\n    {\n        ClearHighlight();\n       
        \n        if (InputModeManager.Instance.CurrentMode == InputMode.KeyboardMouse)\n       
        {\n            UpdateMouseTargeting();\n        }\n        else\n       
        {\n            UpdateGamepadTargeting();\n        }\n    }\n\n    private
        void UpdateMouseTargeting()\n    {\n        // Mouse targeting logic\n   
        }\n\n    private void UpdateGamepadTargeting()\n    {\n        // Gamepad
        targeting logic\n    }\n\n    private void ClearHighlight()\n    {\n       
        if (CurrentTargetedTile.HasValue)\n        {\n            selectionHighlightTilemap.SetTile(CurrentTargetedTile.Value,
        null);\n            CurrentTargetedTile = null;\n        }\n    }\n\n   
        private void HighlightTile(Vector3Int tilePos)\n    {\n        selectionHighlightTilemap.SetTile(tilePos,
        highlightTile);\n        CurrentTargetedTile = tilePos;\n    }\n}\n```\n\n3.
        For the input system setup, we'll need to:\n- Create a new Input Action Asset\n-
        Add a \"ToggleInputMode\" action mapped to both keyboard (e.g. F1) and gamepad
        (e.g. Options button)\n- Add UI to show current input mode\n\nWould you like
        me to:\n1. Show the Input Action Asset setup\n2. Provide the UI component
        for mode display\n3. Focus on either the mouse or gamepad targeting implementation
        first?\n\nAlso, should we modify the existing InputManager or create a new
        system that works alongside it?"
      Skip: 0
      Attachments: []
    - Id: 
      Role: user
      Content: 'Let''s instead of setting up a new action to a keyboard and gamepad
        button, we should just make a UI, so that later we can throw it into a settings
        UI.  Once we do that  can we actually fully update this InteractionTargeting
        System to use this Input Mode.  '
      Skip: 0
      Attachments:
      - 3cc64da71bffccc4f867d0995042e69f
      - 171dbb7715a09b346a19c7d965740f3a
      - 0a5da76b10abead42b1ab88b181d0e77
      - c0f33ca4825565f41861c26fa20bb420
    - Id: 
      Role: assistant
      Content: "Got it. Let's break this down into clear steps:\n\n1. First, let's
        create a simple UI toggle component:\n\n```csharp\nusing UnityEngine;\nusing
        UnityEngine.UI;\n\npublic class InputModeToggle : MonoBehaviour\n{\n    [SerializeField]
        private Toggle toggle;\n    [SerializeField] private Image keyboardIcon;\n   
        [SerializeField] private Image gamepadIcon;\n    [SerializeField] private
        Color activeColor = Color.white;\n    [SerializeField] private Color inactiveColor
        = Color.gray;\n\n    private void Awake()\n    {\n        toggle.onValueChanged.AddListener(OnToggleChanged);\n       
        InputModeManager.Instance.OnInputModeChanged += UpdateVisuals;\n        UpdateVisuals(InputModeManager.Instance.CurrentMode);\n   
        }\n\n    private void OnToggleChanged(bool isOn)\n    {\n        InputModeManager.Instance.SetInputMode(isOn
        ? InputMode.Gamepad : InputMode.KeyboardMouse);\n    }\n\n    private void
        UpdateVisuals(InputMode mode)\n    {\n        bool isGamepad = mode == InputMode.Gamepad;\n       
        toggle.SetIsOnWithoutNotify(isGamepad);\n        keyboardIcon.color = isGamepad
        ? inactiveColor : activeColor;\n        gamepadIcon.color = isGamepad ? activeColor
        : inactiveColor;\n    }\n\n    private void OnDestroy()\n    {\n        if
        (InputModeManager.Instance != null)\n        {\n            InputModeManager.Instance.OnInputModeChanged
        -= UpdateVisuals;\n        }\n    }\n}\n```\n\n2. Now let's fully update
        the InteractionTargetingSystem:\n\n```csharp\nusing UnityEngine;\nusing UnityEngine.Tilemaps;\n\npublic
        class InteractionTargetingSystem : MonoBehaviour\n{\n    [Header(\"References\")]\n   
        [SerializeField] private Tilemap selectionHighlightTilemap;\n    [SerializeField]
        private Tile highlightTile;\n    [SerializeField] private Grid grid;\n   
        \n    [Header(\"Mouse Settings\")]\n    [SerializeField] private float mouseTargetMaxDistance
        = 5f;\n    \n    [Header(\"Gamepad Settings\")] \n    [SerializeField] private
        int gamepadHighlightRange = 2;\n    [SerializeField] private Vector2Int gamepadConeSize
        = new(3, 2);\n    [SerializeField] private float footPositionOffset = 0.5f;\n\n   
        public Vector3Int? CurrentTargetedTile { get; private set; }\n\n    private
        Camera mainCamera;\n\n    private void Awake()\n    {\n        mainCamera
        = Camera.main;\n    }\n\n    private void Update()\n    {\n        ClearHighlight();\n       
        \n        switch (InputModeManager.Instance.CurrentMode)\n        {\n           
        case InputMode.KeyboardMouse:\n                UpdateMouseTargeting();\n               
        break;\n            \n            case InputMode.Gamepad:\n               
        UpdateGamepadTargeting();\n                break;\n        }\n    }\n\n   
        private void UpdateMouseTargeting()\n    {\n        Vector2 mousePos = mainCamera.ScreenToWorldPoint(Mouse.current.position.ReadValue());\n       
        Vector3Int tilePos = grid.WorldToCell(mousePos);\n        \n        if (Vector2.Distance(mousePos,
        Player_Controller.Position) > mouseTargetMaxDistance)\n            return;\n\n       
        HighlightTile(tilePos);\n    }\n\n    private void UpdateGamepadTargeting()\n   
        {\n        Vector2 lookInput = InputManager.Instance.LookInput;\n       
        if (lookInput.magnitude < 0.1f) return;\n\n        Vector3 playerPos = Player_Controller.Position;\n       
        Vector3Int playerTile = grid.WorldToCell(playerPos);\n        \n        //
        Calculate target tile based on facing direction and range\n        Vector2
        facingDirection = Player_Controller.Facing.ToVector2();\n        Vector3Int
        targetTile = playerTile + new Vector3Int(\n            Mathf.RoundToInt(facingDirection.x
        * gamepadHighlightRange),\n            Mathf.RoundToInt(facingDirection.y
        * gamepadHighlightRange),\n            0\n        );\n\n        HighlightTile(targetTile);\n   
        }\n\n    private void ClearHighlight()\n    {\n        if (CurrentTargetedTile.HasValue)\n       
        {\n            selectionHighlightTilemap.SetTile(CurrentTargetedTile.Value,
        null);\n            CurrentTargetedTile = null;\n        }\n    }\n\n   
        private void HighlightTile(Vector3Int tilePos)\n    {\n        selectionHighlightTilemap.SetTile(tilePos,
        highlightTile);\n        CurrentTargetedTile = tilePos;\n    }\n}\n```\n\n3.
        For the UI setup, create a Toggle with:\n- A Toggle component\n- Two child
        Images (keyboard and gamepad icons)\n- Attach the InputModeToggle script\n-
        Wire up references in the inspector\n\nKey improvements:\n1. Clean separation
        between mouse and gamepad logic\n2. No more manual control scheme checks
        - uses the InputModeManager\n3. Easily extendable for settings menu integration\n4.
        Visual feedback for current input mode\n\nWould you like me to:\n1. Show
        how to modify the existing InputManager to work with this\n2. Add more sophisticated
        gamepad targeting (like cone-shaped area)\n3. Create a settings menu prefab
        for this toggle?"
      Skip: 0
      Attachments: []
    - Id: 
      Role: user
      Content: "Vector2 facingDirection = Player_Controller.Facing.ToVector2(); 
        I am getting an error on the ToVetor2() saying it doesnt exist. \n"
      Skip: 0
      Attachments: []
    - Id: 
      Role: assistant
      Content: "Ah, we need to add an extension method to convert the `Directions`
        enum to a Vector2. Here's how to fix that:\n\n1. First, create a new static
        class for direction extensions:\n\n```csharp\nusing UnityEngine;\n\npublic
        static class DirectionExtensions\n{\n    /// <summary>\n    /// Converts
        Directions enum to corresponding Vector2\n    /// </summary>\n    public
        static Vector2 ToVector2(this Directions direction)\n    {\n        return
        direction switch\n        {\n            Directions.Up => Vector2.up,\n           
        Directions.Down => Vector2.down,\n            Directions.Left => Vector2.left,\n           
        Directions.Right => Vector2.right,\n            _ => Vector2.zero\n       
        };\n    }\n}\n```\n\n2. Make sure your `Directions` enum is properly defined
        (it should be in your Player_Controller class):\n\n```csharp\npublic enum
        Directions\n{\n    Up,\n    Down,\n    Left,\n    Right\n}\n```\n\n3. Now
        the `ToVector2()` call will work in your InteractionTargetingSystem. The
        full fixed gamepad targeting method would look like:\n\n```csharp\nprivate
        void UpdateGamepadTargeting()\n{\n    Vector2 lookInput = InputManager.Instance.LookInput;\n   
        if (lookInput.magnitude < 0.1f) return;\n\n    Vector3 playerPos = Player_Controller.Position;\n   
        Vector3Int playerTile = grid.WorldToCell(playerPos);\n    \n    Vector2 facingDirection
        = Player_Controller.Facing.ToVector2();\n    Vector3Int targetTile = playerTile
        + new Vector3Int(\n        Mathf.RoundToInt(facingDirection.x * gamepadHighlightRange),\n       
        Mathf.RoundToInt(facingDirection.y * gamepadHighlightRange),\n        0\n   
        );\n\n    HighlightTile(targetTile);\n}\n```\n\nThis gives you a clean way
        to convert between the enum and Vector2 directions throughout your project.
        Would you like me to:\n1. Add more direction utility methods (like getting
        angle from direction)?\n2. Show how to handle diagonal inputs if needed?\n3.
        Modify the gamepad targeting to be more sophisticated?"
      Skip: 0
      Attachments: []
    - Id: 
      Role: user
      Content: 'We now need to update this FarmToolHandler since we no longer are
        using a singleton and have changed up some logic int the interaction system.

'
      Skip: 0
      Attachments:
      - 0a5da76b10abead42b1ab88b181d0e77
    - Id: 
      Role: assistant
      Content: "Here's the refactored `FarmToolHandler` that works with the new input
        system and interaction targeting:\n\n```csharp\nusing UnityEngine;\nusing
        UnityEngine.InputSystem;\n\n/// <summary>\n/// Handles farm tool interactions
        (Hoe, Water, Plant, Harvest) using the new input system\n/// </summary>\npublic
        class FarmToolHandler : MonoBehaviour\n{\n    [Header(\"Tool Settings\")]\n   
        [SerializeField] private float interactionHoldDuration = 0.5f;\n    [SerializeField]
        private Transform progressSlider;\n    \n    [Header(\"References\")]\n   
        [SerializeField] private InputActionReference interactAction;\n    [SerializeField]
        private InteractionTargetingSystem targetingSystem;\n    \n    private float
        currentHoldTime;\n    private bool isInteracting;\n    private Vector3Int?
        targetTile;\n\n    private void OnEnable()\n    {\n        interactAction.action.performed
        += OnInteractPerformed;\n        interactAction.action.canceled += OnInteractCanceled;\n       
        InputModeManager.Instance.OnInputModeChanged += OnInputModeChanged;\n   
        }\n\n    private void OnDisable()\n    {\n        interactAction.action.performed
        -= OnInteractPerformed;\n        interactAction.action.canceled -= OnInteractCanceled;\n       
        InputModeManager.Instance.OnInputModeChanged -= OnInputModeChanged;\n   
        }\n\n    private void Update()\n    {\n        if (!isInteracting) return;\n       
        \n        targetTile = targetingSystem.CurrentTargetedTile;\n        if (!targetTile.HasValue)
        return;\n\n        currentHoldTime += Time.deltaTime;\n        UpdateSliderVisual();\n\n       
        if (currentHoldTime >= interactionHoldDuration)\n        {\n            CompleteInteraction();\n       
        }\n    }\n\n    private void OnInteractPerformed(InputAction.CallbackContext
        context)\n    {\n        if (!GameStateManager.Instance.IsGameplay()) return;\n       
        if (!targetingSystem.CurrentTargetedTile.HasValue) return;\n\n        isInteracting
        = true;\n        currentHoldTime = 0f;\n        progressSlider.gameObject.SetActive(true);\n       
        PositionSliderAtTarget();\n    }\n\n    private void OnInteractCanceled(InputAction.CallbackContext
        context)\n    {\n        if (!isInteracting) return;\n        \n        isInteracting
        = false;\n        progressSlider.gameObject.SetActive(false);\n        \n       
        if (currentHoldTime < interactionHoldDuration)\n        {\n            DebugUIOverlay.Instance.ShowLastAction(\"Interaction
        cancelled\");\n        }\n    }\n\n    private void OnInputModeChanged(InputMode
        newMode)\n    {\n        // Reset interaction when switching modes\n       
        if (isInteracting)\n        {\n            isInteracting = false;\n           
        progressSlider.gameObject.SetActive(false);\n        }\n    }\n\n    private
        void CompleteInteraction()\n    {\n        isInteracting = false;\n       
        progressSlider.gameObject.SetActive(false);\n        \n        if (!targetTile.HasValue)
        return;\n\n        // Handle different tool types\n        switch (ToolSlot.CurrentTool)\n       
        {\n            case ToolType.Hoe:\n                FarmTileDataManager.Instance.SetTilled(targetTile.Value,
        true);\n                break;\n                \n            case ToolType.WateringCan:\n               
        FarmTileDataManager.Instance.SetWatered(targetTile.Value, true);\n               
        break;\n                \n            case ToolType.Seed:\n               
        TryPlantSeed(targetTile.Value);\n                break;\n               
        \n            case ToolType.Harvest:\n                TryHarvest(targetTile.Value);\n               
        break;\n        }\n    }\n\n    private void TryPlantSeed(Vector3Int tilePos)\n   
        {\n        // Your planting logic here\n    }\n\n    private void TryHarvest(Vector3Int
        tilePos)\n    {\n        // Your harvest logic here\n    }\n\n    private
        void PositionSliderAtTarget()\n    {\n        if (!targetTile.HasValue) return;\n       
        Vector3 worldPos = targetingSystem.Grid.CellToWorld(targetTile.Value);\n       
        progressSlider.position = worldPos + Vector3.up;\n    }\n\n    private void
        UpdateSliderVisual()\n    {\n        float progress = Mathf.Clamp01(currentHoldTime
        / interactionHoldDuration);\n        progressSlider.localScale = new Vector3(progress,
        1f, 1f);\n    }\n}\n```\n\nKey changes made:\n1. Removed singleton pattern
        - now uses direct references\n2. Works with the new `InputModeManager` system\n3.
        Uses `InputActionReference` for better input system integration\n4. Cleaner
        separation of interaction states\n5. Proper event subscription/unsubscription\n6.
        Visual feedback tied to the target tile\n\nYou'll need to:\n1. Set up the
        `interactAction` reference in the inspector\n2. Wire up the `targetingSystem`
        reference\n3. Configure the `progressSlider` transform (should be a child
        with a scale-from-left UI element)\n\nWould you like me to:\n1. Show the
        input action setup?\n2. Provide the progress slider UI implementation?\n3.
        Add any specific tool logic (like the planting/harvest details)?"
      Skip: 0
      Attachments: []
    - Id: 
      Role: user
      Content: 'We removed out toolslot enum, and we also do not have a tool type
        enum like is expected.  Where and how should we implement those. '
      Skip: 0
      Attachments:
      - 0a5da76b10abead42b1ab88b181d0e77
    - Id: 
      Role: assistant
      Content: "Let's implement a clean tool system with proper enums and data structure.
        Here's how we'll organize it:\n\n1. First, create a new `ToolSystem.cs` script
        to define our core types:\n\n```csharp\nusing UnityEngine;\n\n/// <summary>\n///
        Core tool system definitions and current tool tracking\n/// </summary>\npublic
        static class ToolSystem\n{\n    public enum ToolType\n    {\n        None,\n       
        Hoe,\n        WateringCan,\n        Seed,\n        Harvest\n    }\n\n   
        public static ToolType CurrentTool { get; private set; } = ToolType.None;\n\n   
        public static void SetTool(ToolType tool)\n    {\n        CurrentTool = tool;\n       
        DebugUIOverlay.Instance.ShowLastAction($\"Tool: {CurrentTool}\");\n    }\n}\n```\n\n2.
        Then create a `ToolSlot.cs` script for UI/inventory integration:\n\n```csharp\nusing
        UnityEngine;\nusing UnityEngine.UI;\n\n/// <summary>\n/// UI representation
        of a tool slot that can be selected\n/// </summary>\npublic class ToolSlot
        : MonoBehaviour\n{\n    [SerializeField] private ToolSystem.ToolType toolType;\n   
        [SerializeField] private Image selectionHighlight;\n\n    private Button
        button;\n\n    private void Awake()\n    {\n        button = GetComponent<Button>();\n       
        button.onClick.AddListener(SelectTool);\n    }\n\n    private void Update()\n   
        {\n        selectionHighlight.enabled = (ToolSystem.CurrentTool == toolType);\n   
        }\n\n    private void SelectTool()\n    {\n        ToolSystem.SetTool(toolType);\n   
        }\n}\n```\n\n3. Update the `FarmToolHandler.cs` to use this system (just
        change the switch case):\n\n```csharp\nswitch (ToolSystem.CurrentTool)\n{\n   
        case ToolSystem.ToolType.Hoe:\n        FarmTileDataManager.Instance.SetTilled(targetTile.Value,
        true);\n        break;\n        \n    case ToolSystem.ToolType.WateringCan:\n       
        FarmTileDataManager.Instance.SetWatered(targetTile.Value, true);\n       
        break;\n        \n    case ToolSystem.ToolType.Seed:\n        TryPlantSeed(targetTile.Value);\n       
        break;\n        \n    case ToolSystem.ToolType.Harvest:\n        TryHarvest(targetTile.Value);\n       
        break;\n}\n```\n\nImplementation steps:\n\n1. Create the two new scripts\n2.
        For each tool in your UI:\n   - Create a Button GameObject\n   - Add the
        `ToolSlot` component\n   - Set the tool type in the inspector\n   - Add a
        child Image for the selection highlight\n3. The system will now:\n   - Track
        the currently selected tool globally\n   - Show visual feedback when tools
        are selected\n   - Log tool changes in the debug UI\n\nFor inventory integration,
        you would:\n\n1. Create a `ToolData` ScriptableObject if you need more complex
        tool properties\n2. Modify `ToolSystem` to reference actual tool items instead
        of just enum values\n\nWould you like me to:\n1. Show the ScriptableObject
        tool data implementation?\n2. Demonstrate how to connect this to an inventory
        system?\n3. Add tool cooldowns or energy costs?"
      Skip: 0
      Attachments: []
    - Id: 
      Role: user
      Content: 'Without implementing any new logic, can you walk me through the new
        updates and how the interaction, highlight and tool logic should work now
        and the things we need to do to set it all up in unity correctly.

'
      Skip: 0
      Attachments: []
    - Id: 
      Role: assistant
      Content: "Here's a clear, step-by-step walkthrough of the new system and Unity
        setup:\n\n### **1. Core System Flow**\n```\nInput Mode \u2192 Targeting \u2192
        Tool Selection \u2192 Interaction\n```\n\n### **2. Key Components & Their
        Roles**\n1. **InputModeManager**  \n   - Tracks current control scheme (Keyboard/Mouse
        or Gamepad)\n   - Fires events when mode changes\n\n2. **InteractionTargetingSystem** 
        \n   - Handles tile highlighting based on current input mode:\n     - *Mouse*:
        Follows cursor position\n     - *Gamepad*: Projects forward from player facing
        direction\n   - Provides `CurrentTargetedTile` to other systems\n\n3. **ToolSystem** 
        \n   - Maintains `CurrentTool` (Hoe/WateringCan/Seed/Harvest)\n   - Simple
        static class for tool state\n\n4. **FarmToolHandler**  \n   - Listens for
        interactions on targeted tiles\n   - Manages hold-to-interact progress slider\n  
        - Executes appropriate tool action when interaction completes\n\n---\n\n###
        **3. Unity Setup Checklist**\n\n#### **A. Input Mode Toggle UI**\n1. Create
        a Toggle UI element:\n   - Add `InputModeToggle` component\n   - Assign:\n    
        - Toggle reference\n     - Keyboard Icon Image\n     - Gamepad Icon Image\n  
        - Set active/inactive colors in inspector\n\n#### **B. Targeting System**\n1.
        Add `InteractionTargetingSystem` to scene:\n   - Assign references:\n    
        - Selection Highlight Tilemap\n     - Highlight Tile asset\n     - Grid component\n  
        - Configure in inspector:\n     - Mouse: `Max Distance`\n     - Gamepad:
        `Highlight Range` and `Cone Size`\n\n#### **C. Tool System Setup**\n1. Create
        tool selection UI buttons:\n   - For each tool (Hoe/Water/Seed/Harvest):\n    
        - Add Button GameObject\n     - Add `ToolSlot` component\n     - Set `ToolType`
        in inspector\n     - Add selection highlight Image as child\n\n#### **D.
        Farm Tool Handler**\n1. Add `FarmToolHandler` to player or farming system:\n  
        - Assign references:\n     - `InteractionTargetingSystem`\n     - `Interact
        Action` (from Input Actions)\n     - Progress Slider Transform\n   - Set
        `Interaction Hold Duration`\n\n#### **E. Input Actions**\n1. Ensure you have:\n  
        - `Interact` action bound to:\n     - Mouse: Left Click\n     - Gamepad:
        Right Trigger\n   - (Optional) Quick-switch binding for debugging\n\n---\n\n###
        **4. Expected Behavior**\n1. **Keyboard/Mouse Mode**:\n   - Highlight follows
        mouse cursor\n   - Click/hold to interact with targeted tile\n\n2. **Gamepad
        Mode**:\n   - Highlight projects forward from player\n   - Face direction
        + hold button to interact\n\n3. **Tool Feedback**:\n   - Selected tool shows
        UI highlight\n   - Progress slider appears during holds\n   - Debug UI shows
        last action\n\n---\n\n### **5. Debugging Tips**\nIf something isn't working:\n1.
        Check all inspector references are assigned\n2. Verify Input Actions are
        properly bound\n3. Watch `DebugUIOverlay` for tool/action messages\n4. Test
        each input mode separately\n\nWould you like me to provide specific prefab
        structures or screenshot examples of how the inspector setups should look?"
      Skip: 0
      Attachments: []
  geminiHistory: []
  claudeHistory: []
